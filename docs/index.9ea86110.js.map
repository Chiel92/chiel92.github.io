{"mappings":"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","sources":["output/Main/foreign.js","output/Control.Semigroupoid/index.js","output/Control.Category/index.js","output/Data.Boolean/index.js","output/Data.Function/index.js","output/Data.Functor/foreign.js","output/Data.Unit/foreign.js","output/Type.Proxy/index.js","output/Data.Functor/index.js","output/Control.Apply/index.js","output/Control.Applicative/index.js","output/Control.Bind/index.js","output/Data.Bounded/foreign.js","output/Data.Ord/foreign.js","output/Data.Eq/foreign.js","output/Data.Eq/index.js","output/Data.Ordering/index.js","output/Data.Semiring/index.js","output/Data.Ord/index.js","output/Data.HeytingAlgebra/index.js","output/Data.HeytingAlgebra/foreign.js","output/Data.Semigroup/index.js","output/Data.Semigroup/foreign.js","output/Data.Monoid/index.js","output/Data.Tuple/index.js","output/Control.Monad.State.Class/index.js","output/Data.Maybe/index.js","output/Effect.Aff/foreign.js","output/Control.Monad/index.js","output/Data.Either/index.js","output/Effect/foreign.js","output/Effect/index.js","output/Effect.Exception/foreign.js","output/Effect.Exception/index.js","output/Control.Monad.Error.Class/index.js","output/Data.Identity/index.js","output/Effect.Ref/foreign.js","output/Effect.Ref/index.js","output/Control.Monad.Rec.Class/index.js","output/Unsafe.Coerce/foreign.js","output/Control.Monad.ST.Internal/index.js","output/Effect.Class/index.js","output/Control.Monad.Except.Trans/index.js","output/Control.Plus/index.js","output/Safe.Coerce/index.js","output/Data.Newtype/index.js","output/Control.Extend/index.js","output/Control.Parallel.Class/index.js","output/Data.Bifunctor/index.js","output/Data.Foldable/index.js","output/Data.Foldable/foreign.js","output/Data.Traversable/foreign.js","output/Data.Const/index.js","output/Control.Parallel/index.js","output/Effect.Unsafe/foreign.js","output/Partial/foreign.js","output/Partial/index.js","output/Partial.Unsafe/index.js","output/Partial.Unsafe/foreign.js","output/Effect.Aff/index.js","output/Data.Lazy/index.js","output/Effect.Aff.Class/index.js","output/Effect.Console/foreign.js","output/Effect.Console/index.js","output/Web.DOM.ParentNode/foreign.js","output/Data.Nullable/foreign.js","output/Data.Nullable/index.js","output/Web.DOM.ParentNode/index.js","output/Web.Event.EventTarget/foreign.js","output/Web.HTML/foreign.js","output/Web.Internal.FFI/index.js","output/Web.Internal.FFI/foreign.js","output/Web.HTML.HTMLDocument.ReadyState/index.js","output/Web.HTML.HTMLDocument/index.js","output/Web.HTML.HTMLDocument/foreign.js","output/Web.HTML.HTMLElement/foreign.js","output/Web.HTML.HTMLElement/index.js","output/Web.HTML.HTMLIFrameElement/index.js","output/Web.HTML.HTMLIFrameElement/foreign.js","output/Web.HTML.Window/foreign.js","output/Web.HTML.Window/index.js","output/Web.HTML.Event.EventTypes/index.js","output/Halogen.Aff.Util/index.js","output/Data.Exists/index.js","output/Data.Coyoneda/index.js","output/Data.FunctorWithIndex/index.js","output/Data.NonEmpty/index.js","output/Data.List.Types/index.js","output/Data.List/index.js","output/Data.Map.Internal/index.js","output/Halogen.Data.Slot/index.js","output/Data.String.Common/foreign.js","output/Data.String.Common/index.js","output/Halogen.Query.Input/index.js","output/Data.Array/foreign.js","output/Data.Array.ST/foreign.js","output/Data.Array.ST/index.js","output/Data.Array/index.js","output/Halogen.VDom.Machine/index.js","output/Halogen.VDom.Types/index.js","output/Halogen.VDom.Util/foreign.js","output/Foreign.Object.ST/foreign.js","output/Foreign.Object.ST/index.js","output/Halogen.VDom.Util/index.js","output/Web.DOM.Element/foreign.js","output/Web.DOM.ShadowRoot/index.js","output/Web.DOM.Element/index.js","output/Halogen.VDom.DOM/index.js","output/Foreign/foreign.js","output/Data.Number/foreign.js","output/Data.Number/index.js","output/Data.List.NonEmpty/index.js","output/Data.String.CodeUnits/index.js","output/Foreign/index.js","output/Foreign.Object/foreign.js","output/Data.Function.Uncurried/foreign.js","output/Data.Function.Uncurried/index.js","output/Foreign.Object/index.js","output/Halogen.VDom.DOM.Prop/index.js","output/Halogen.HTML.Core/index.js","output/Control.Applicative.Free/index.js","output/Data.CatQueue/index.js","output/Data.CatList/index.js","output/Control.Monad.Free/index.js","output/Halogen.Query.ChildQuery/index.js","output/Unsafe.Reference/index.js","output/Unsafe.Reference/foreign.js","output/Halogen.Subscription/index.js","output/Halogen.Query.HalogenM/index.js","output/Halogen.Query.HalogenQ/index.js","output/Halogen.VDom.Thunk/index.js","output/Halogen.Component/index.js","output/Halogen.HTML.Elements/index.js","output/Control.Monad.Except/index.js","output/Web.File.FileList/index.js","output/Halogen.HTML.Events/index.js","output/Halogen.HTML.Properties/index.js","output/Halogen.Query/index.js","output/Control.Monad.Fork.Class/index.js","output/Halogen.Aff.Driver.State/index.js","output/Halogen.Aff.Driver.Eval/index.js","output/Halogen.Aff.Driver/index.js","output/Web.DOM.Node/foreign.js","output/Web.DOM.NodeType/index.js","output/Web.DOM.Node/index.js","output/Halogen.VDom.Driver/index.js","output/HalogenUtils/index.js","output/LocationString/index.js","output/LocationString/foreign.js","output/Main/index.js","res/index.js"],"sourcesContent":["\"use strict\";\n\nexport const executeJavascriptHacks = function () {\n  // Hack to be able to use the right viewport height in the CSS, because the CSS vh value doesn't behave well on mobile.\n  var root = document.querySelector(':root');\n  window.addEventListener('resize', () => {\n    root.style.setProperty('--app-height', vh() + 'px');\n  });\n  function vh() {\n    // - 1 because sometimes the innerHeight doesn't seem to be rounded correctly or something\n    return Math.max(document.documentElement.clientHeight, window.innerHeight || 0) - 1;\n  }\n};\n\nexport const executeSiteAnalytics = function () {\n  window.dataLayer = window.dataLayer || [];\n  function gtag() { dataLayer.push(arguments); }\n  gtag('js', new Date());\n\n  gtag('config', 'G-ZNEGXK8M3D');\n}\n","// Generated by purs version 0.15.7\nvar semigroupoidFn = {\n    compose: function (f) {\n        return function (g) {\n            return function (x) {\n                return f(g(x));\n            };\n        };\n    }\n};\nvar compose = function (dict) {\n    return dict.compose;\n};\nvar composeFlipped = function (dictSemigroupoid) {\n    var compose1 = compose(dictSemigroupoid);\n    return function (f) {\n        return function (g) {\n            return compose1(g)(f);\n        };\n    };\n};\nexport {\n    compose,\n    composeFlipped,\n    semigroupoidFn\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nvar identity = function (dict) {\n    return dict.identity;\n};\nvar categoryFn = {\n    identity: function (x) {\n        return x;\n    },\n    Semigroupoid0: function () {\n        return Control_Semigroupoid.semigroupoidFn;\n    }\n};\nexport {\n    identity,\n    categoryFn\n};\nexport {\n    compose\n} from \"../Control.Semigroupoid/index.js\";\n","// Generated by purs version 0.15.7\nvar otherwise = true;\nexport {\n    otherwise\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nvar on = function (f) {\n    return function (g) {\n        return function (x) {\n            return function (y) {\n                return f(g(x))(g(y));\n            };\n        };\n    };\n};\nvar flip = function (f) {\n    return function (b) {\n        return function (a) {\n            return f(a)(b);\n        };\n    };\n};\nvar $$const = function (a) {\n    return function (v) {\n        return a;\n    };\n};\nvar applyN = function (f) {\n    var go = function ($copy_n) {\n        return function ($copy_acc) {\n            var $tco_var_n = $copy_n;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(n, acc) {\n                if (n <= 0) {\n                    $tco_done = true;\n                    return acc;\n                };\n                if (Data_Boolean.otherwise) {\n                    $tco_var_n = n - 1 | 0;\n                    $copy_acc = f(acc);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Function (line 107, column 3 - line 109, column 37): \" + [ n.constructor.name, acc.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_n, $copy_acc);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar applyFlipped = function (x) {\n    return function (f) {\n        return f(x);\n    };\n};\nvar apply = function (f) {\n    return function (x) {\n        return f(x);\n    };\n};\nexport {\n    flip,\n    $$const as const,\n    apply,\n    applyFlipped,\n    applyN,\n    on\n};\nexport {\n    compose,\n    identity\n} from \"../Control.Category/index.js\";\n","export const arrayMap = function (f) {\n  return function (arr) {\n    var l = arr.length;\n    var result = new Array(l);\n    for (var i = 0; i < l; i++) {\n      result[i] = f(arr[i]);\n    }\n    return result;\n  };\n};\n","export const unit = undefined;\n","// Generated by purs version 0.15.7\nvar $$Proxy = /* #__PURE__ */ (function () {\n    function $$Proxy() {\n\n    };\n    $$Proxy.value = new $$Proxy();\n    return $$Proxy;\n})();\nexport {\n    $$Proxy as Proxy\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar map = function (dict) {\n    return dict.map;\n};\nvar mapFlipped = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (fa) {\n        return function (f) {\n            return map1(f)(fa);\n        };\n    };\n};\nvar $$void = function (dictFunctor) {\n    return map(dictFunctor)(Data_Function[\"const\"](Data_Unit.unit));\n};\nvar voidLeft = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (f) {\n        return function (x) {\n            return map1(Data_Function[\"const\"](x))(f);\n        };\n    };\n};\nvar voidRight = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (x) {\n        return map1(Data_Function[\"const\"](x));\n    };\n};\nvar functorProxy = {\n    map: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    }\n};\nvar functorFn = {\n    map: /* #__PURE__ */ Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)\n};\nvar functorArray = {\n    map: $foreign.arrayMap\n};\nvar flap = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (ff) {\n        return function (x) {\n            return map1(function (f) {\n                return f(x);\n            })(ff);\n        };\n    };\n};\nexport {\n    map,\n    mapFlipped,\n    $$void as void,\n    voidRight,\n    voidLeft,\n    flap,\n    functorFn,\n    functorArray,\n    functorProxy\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar applyProxy = {\n    apply: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Functor0: function () {\n        return Data_Functor.functorProxy;\n    }\n};\nvar applyFn = {\n    apply: function (f) {\n        return function (g) {\n            return function (x) {\n                return f(x)(g(x));\n            };\n        };\n    },\n    Functor0: function () {\n        return Data_Functor.functorFn;\n    }\n};\nvar applyArray = {\n    apply: $foreign.arrayApply,\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar apply = function (dict) {\n    return dict.apply;\n};\nvar applyFirst = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (a) {\n        return function (b) {\n            return apply1(map(Data_Function[\"const\"])(a))(b);\n        };\n    };\n};\nvar applySecond = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (a) {\n        return function (b) {\n            return apply1(map(Data_Function[\"const\"](identity))(a))(b);\n        };\n    };\n};\nvar lift2 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return apply1(map(f)(a))(b);\n            };\n        };\n    };\n};\nvar lift3 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return apply1(apply1(map(f)(a))(b))(c);\n                };\n            };\n        };\n    };\n};\nvar lift4 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return apply1(apply1(apply1(map(f)(a))(b))(c))(d);\n                    };\n                };\n            };\n        };\n    };\n};\nvar lift5 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return function (e) {\n                            return apply1(apply1(apply1(apply1(map(f)(a))(b))(c))(d))(e);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    apply,\n    applyFirst,\n    applySecond,\n    lift2,\n    lift3,\n    lift4,\n    lift5,\n    applyFn,\n    applyArray,\n    applyProxy\n};\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar pure = function (dict) {\n    return dict.pure;\n};\nvar unless = function (dictApplicative) {\n    var pure1 = pure(dictApplicative);\n    return function (v) {\n        return function (v1) {\n            if (!v) {\n                return v1;\n            };\n            if (v) {\n                return pure1(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar when = function (dictApplicative) {\n    var pure1 = pure(dictApplicative);\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return pure1(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar liftA1 = function (dictApplicative) {\n    var apply = Control_Apply.apply(dictApplicative.Apply0());\n    var pure1 = pure(dictApplicative);\n    return function (f) {\n        return function (a) {\n            return apply(pure1(f))(a);\n        };\n    };\n};\nvar applicativeProxy = {\n    pure: function (v) {\n        return Type_Proxy[\"Proxy\"].value;\n    },\n    Apply0: function () {\n        return Control_Apply.applyProxy;\n    }\n};\nvar applicativeFn = {\n    pure: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyFn;\n    }\n};\nvar applicativeArray = {\n    pure: function (x) {\n        return [ x ];\n    },\n    Apply0: function () {\n        return Control_Apply.applyArray;\n    }\n};\nexport {\n    pure,\n    liftA1,\n    unless,\n    when,\n    applicativeFn,\n    applicativeArray,\n    applicativeProxy\n};\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar discard = function (dict) {\n    return dict.discard;\n};\nvar bindProxy = {\n    bind: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyProxy;\n    }\n};\nvar bindFn = {\n    bind: function (m) {\n        return function (f) {\n            return function (x) {\n                return f(m(x))(x);\n            };\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyFn;\n    }\n};\nvar bindArray = {\n    bind: $foreign.arrayBind,\n    Apply0: function () {\n        return Control_Apply.applyArray;\n    }\n};\nvar bind = function (dict) {\n    return dict.bind;\n};\nvar bindFlipped = function (dictBind) {\n    return Data_Function.flip(bind(dictBind));\n};\nvar composeKleisliFlipped = function (dictBind) {\n    var bindFlipped1 = bindFlipped(dictBind);\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bindFlipped1(f)(g(a));\n            };\n        };\n    };\n};\nvar composeKleisli = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bind1(f(a))(g);\n            };\n        };\n    };\n};\nvar discardProxy = {\n    discard: function (dictBind) {\n        return bind(dictBind);\n    }\n};\nvar discardUnit = {\n    discard: function (dictBind) {\n        return bind(dictBind);\n    }\n};\nvar ifM = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (cond) {\n        return function (t) {\n            return function (f) {\n                return bind1(cond)(function (cond$prime) {\n                    if (cond$prime) {\n                        return t;\n                    };\n                    return f;\n                });\n            };\n        };\n    };\n};\nvar join = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (m) {\n        return bind1(m)(identity);\n    };\n};\nexport {\n    bind,\n    bindFlipped,\n    discard,\n    join,\n    composeKleisli,\n    composeKleisliFlipped,\n    ifM,\n    bindFn,\n    bindArray,\n    bindProxy,\n    discardUnit,\n    discardProxy\n};\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n","export const topInt = 2147483647;\nexport const bottomInt = -2147483648;\n\nexport const topChar = String.fromCharCode(65535);\nexport const bottomChar = String.fromCharCode(0);\n\nexport const topNumber = Number.POSITIVE_INFINITY;\nexport const bottomNumber = Number.NEGATIVE_INFINITY;\n","var unsafeCompareImpl = function (lt) {\n  return function (eq) {\n    return function (gt) {\n      return function (x) {\n        return function (y) {\n          return x < y ? lt : x === y ? eq : gt;\n        };\n      };\n    };\n  };\n};\n\nexport const ordBooleanImpl = unsafeCompareImpl;\nexport const ordIntImpl = unsafeCompareImpl;\nexport const ordNumberImpl = unsafeCompareImpl;\nexport const ordStringImpl = unsafeCompareImpl;\nexport const ordCharImpl = unsafeCompareImpl;\n\nexport const ordArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      var i = 0;\n      var xlen = xs.length;\n      var ylen = ys.length;\n      while (i < xlen && i < ylen) {\n        var x = xs[i];\n        var y = ys[i];\n        var o = f(x)(y);\n        if (o !== 0) {\n          return o;\n        }\n        i++;\n      }\n      if (xlen === ylen) {\n        return 0;\n      } else if (xlen > ylen) {\n        return -1;\n      } else {\n        return 1;\n      }\n    };\n  };\n};\n","var refEq = function (r1) {\n  return function (r2) {\n    return r1 === r2;\n  };\n};\n\nexport const eqBooleanImpl = refEq;\nexport const eqIntImpl = refEq;\nexport const eqNumberImpl = refEq;\nexport const eqCharImpl = refEq;\nexport const eqStringImpl = refEq;\n\nexport const eqArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      if (xs.length !== ys.length) return false;\n      for (var i = 0; i < xs.length; i++) {\n        if (!f(xs[i])(ys[i])) return false;\n      }\n      return true;\n    };\n  };\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar eqVoid = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqUnit = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqString = {\n    eq: $foreign.eqStringImpl\n};\nvar eqRowNil = {\n    eqRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return true;\n            };\n        };\n    }\n};\nvar eqRecord = function (dict) {\n    return dict.eqRecord;\n};\nvar eqRec = function () {\n    return function (dictEqRecord) {\n        return {\n            eq: eqRecord(dictEqRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar eqProxy = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqNumber = {\n    eq: $foreign.eqNumberImpl\n};\nvar eqInt = {\n    eq: $foreign.eqIntImpl\n};\nvar eqChar = {\n    eq: $foreign.eqCharImpl\n};\nvar eqBoolean = {\n    eq: $foreign.eqBooleanImpl\n};\nvar eq1 = function (dict) {\n    return dict.eq1;\n};\nvar eq = function (dict) {\n    return dict.eq;\n};\nvar eq2 = /* #__PURE__ */ eq(eqBoolean);\nvar eqArray = function (dictEq) {\n    return {\n        eq: $foreign.eqArrayImpl(eq(dictEq))\n    };\n};\nvar eq1Array = {\n    eq1: function (dictEq) {\n        return eq(eqArray(dictEq));\n    }\n};\nvar eqRowCons = function (dictEqRecord) {\n    var eqRecord1 = eqRecord(dictEqRecord);\n    return function () {\n        return function (dictIsSymbol) {\n            var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n            return function (dictEq) {\n                var eq3 = eq(dictEq);\n                return {\n                    eqRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = eqRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return eq3(get(ra))(get(rb)) && tail;\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nvar notEq = function (dictEq) {\n    var eq3 = eq(dictEq);\n    return function (x) {\n        return function (y) {\n            return eq2(eq3(x)(y))(false);\n        };\n    };\n};\nvar notEq1 = function (dictEq1) {\n    var eq11 = eq1(dictEq1);\n    return function (dictEq) {\n        var eq12 = eq11(dictEq);\n        return function (x) {\n            return function (y) {\n                return eq2(eq12(x)(y))(false);\n            };\n        };\n    };\n};\nexport {\n    eq,\n    notEq,\n    eq1,\n    notEq1,\n    eqRecord,\n    eqBoolean,\n    eqInt,\n    eqNumber,\n    eqChar,\n    eqString,\n    eqUnit,\n    eqVoid,\n    eqArray,\n    eqRec,\n    eqProxy,\n    eq1Array,\n    eqRowNil,\n    eqRowCons\n};\n","// Generated by purs version 0.15.7\nvar LT = /* #__PURE__ */ (function () {\n    function LT() {\n\n    };\n    LT.value = new LT();\n    return LT;\n})();\nvar GT = /* #__PURE__ */ (function () {\n    function GT() {\n\n    };\n    GT.value = new GT();\n    return GT;\n})();\nvar EQ = /* #__PURE__ */ (function () {\n    function EQ() {\n\n    };\n    EQ.value = new EQ();\n    return EQ;\n})();\nvar showOrdering = {\n    show: function (v) {\n        if (v instanceof LT) {\n            return \"LT\";\n        };\n        if (v instanceof GT) {\n            return \"GT\";\n        };\n        if (v instanceof EQ) {\n            return \"EQ\";\n        };\n        throw new Error(\"Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): \" + [ v.constructor.name ]);\n    }\n};\nvar semigroupOrdering = {\n    append: function (v) {\n        return function (v1) {\n            if (v instanceof LT) {\n                return LT.value;\n            };\n            if (v instanceof GT) {\n                return GT.value;\n            };\n            if (v instanceof EQ) {\n                return v1;\n            };\n            throw new Error(\"Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar invert = function (v) {\n    if (v instanceof GT) {\n        return LT.value;\n    };\n    if (v instanceof EQ) {\n        return EQ.value;\n    };\n    if (v instanceof LT) {\n        return GT.value;\n    };\n    throw new Error(\"Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): \" + [ v.constructor.name ]);\n};\nvar eqOrdering = {\n    eq: function (v) {\n        return function (v1) {\n            if (v instanceof LT && v1 instanceof LT) {\n                return true;\n            };\n            if (v instanceof GT && v1 instanceof GT) {\n                return true;\n            };\n            if (v instanceof EQ && v1 instanceof EQ) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nexport {\n    LT,\n    GT,\n    EQ,\n    invert,\n    eqOrdering,\n    semigroupOrdering,\n    showOrdering\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar zeroRecord = function (dict) {\n    return dict.zeroRecord;\n};\nvar zero = function (dict) {\n    return dict.zero;\n};\nvar semiringUnit = {\n    add: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    zero: Data_Unit.unit,\n    mul: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    one: Data_Unit.unit\n};\nvar semiringRecordNil = {\n    addRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    mulRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    oneRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    },\n    zeroRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    }\n};\nvar semiringProxy = /* #__PURE__ */ (function () {\n    return {\n        add: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        mul: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        one: Type_Proxy[\"Proxy\"].value,\n        zero: Type_Proxy[\"Proxy\"].value\n    };\n})();\nvar semiringNumber = {\n    add: $foreign.numAdd,\n    zero: 0.0,\n    mul: $foreign.numMul,\n    one: 1.0\n};\nvar semiringInt = {\n    add: $foreign.intAdd,\n    zero: 0,\n    mul: $foreign.intMul,\n    one: 1\n};\nvar oneRecord = function (dict) {\n    return dict.oneRecord;\n};\nvar one = function (dict) {\n    return dict.one;\n};\nvar mulRecord = function (dict) {\n    return dict.mulRecord;\n};\nvar mul = function (dict) {\n    return dict.mul;\n};\nvar addRecord = function (dict) {\n    return dict.addRecord;\n};\nvar semiringRecord = function () {\n    return function (dictSemiringRecord) {\n        return {\n            add: addRecord(dictSemiringRecord)(Type_Proxy[\"Proxy\"].value),\n            mul: mulRecord(dictSemiringRecord)(Type_Proxy[\"Proxy\"].value),\n            one: oneRecord(dictSemiringRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value),\n            zero: zeroRecord(dictSemiringRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar add = function (dict) {\n    return dict.add;\n};\nvar semiringFn = function (dictSemiring) {\n    var add1 = add(dictSemiring);\n    var zero1 = zero(dictSemiring);\n    var mul1 = mul(dictSemiring);\n    var one1 = one(dictSemiring);\n    return {\n        add: function (f) {\n            return function (g) {\n                return function (x) {\n                    return add1(f(x))(g(x));\n                };\n            };\n        },\n        zero: function (v) {\n            return zero1;\n        },\n        mul: function (f) {\n            return function (g) {\n                return function (x) {\n                    return mul1(f(x))(g(x));\n                };\n            };\n        },\n        one: function (v) {\n            return one1;\n        }\n    };\n};\nvar semiringRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (dictSemiringRecord) {\n            var addRecord1 = addRecord(dictSemiringRecord);\n            var mulRecord1 = mulRecord(dictSemiringRecord);\n            var oneRecord1 = oneRecord(dictSemiringRecord);\n            var zeroRecord1 = zeroRecord(dictSemiringRecord);\n            return function (dictSemiring) {\n                var add1 = add(dictSemiring);\n                var mul1 = mul(dictSemiring);\n                var one1 = one(dictSemiring);\n                var zero1 = zero(dictSemiring);\n                return {\n                    addRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = addRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(add1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    mulRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = mulRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(mul1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    oneRecord: function (v) {\n                        return function (v1) {\n                            var tail = oneRecord1(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            return insert(one1)(tail);\n                        };\n                    },\n                    zeroRecord: function (v) {\n                        return function (v1) {\n                            var tail = zeroRecord1(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            return insert(zero1)(tail);\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    add,\n    zero,\n    mul,\n    one,\n    addRecord,\n    mulRecord,\n    oneRecord,\n    zeroRecord,\n    semiringInt,\n    semiringNumber,\n    semiringFn,\n    semiringUnit,\n    semiringProxy,\n    semiringRecord,\n    semiringRecordNil,\n    semiringRecordCons\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar eqRec = /* #__PURE__ */ Data_Eq.eqRec();\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar ordVoid = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqVoid;\n    }\n};\nvar ordUnit = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqUnit;\n    }\n};\nvar ordString = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqString;\n        }\n    };\n})();\nvar ordRecordNil = {\n    compareRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return Data_Ordering.EQ.value;\n            };\n        };\n    },\n    EqRecord0: function () {\n        return Data_Eq.eqRowNil;\n    }\n};\nvar ordProxy = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqProxy;\n    }\n};\nvar ordOrdering = {\n    compare: function (v) {\n        return function (v1) {\n            if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.LT) {\n                return Data_Ordering.LT.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {\n                return Data_Ordering.GT.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {\n                return Data_Ordering.LT.value;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return Data_Ordering.GT.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 126, column 1 - line 133, column 20): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return Data_Ordering.eqOrdering;\n    }\n};\nvar ordNumber = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqNumber;\n        }\n    };\n})();\nvar ordInt = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqInt;\n        }\n    };\n})();\nvar ordChar = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqChar;\n        }\n    };\n})();\nvar ordBoolean = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqBoolean;\n        }\n    };\n})();\nvar compareRecord = function (dict) {\n    return dict.compareRecord;\n};\nvar ordRecord = function () {\n    return function (dictOrdRecord) {\n        var eqRec1 = eqRec(dictOrdRecord.EqRecord0());\n        return {\n            compare: compareRecord(dictOrdRecord)(Type_Proxy[\"Proxy\"].value),\n            Eq0: function () {\n                return eqRec1;\n            }\n        };\n    };\n};\nvar compare1 = function (dict) {\n    return dict.compare1;\n};\nvar compare = function (dict) {\n    return dict.compare;\n};\nvar compare2 = /* #__PURE__ */ compare(ordInt);\nvar comparing = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (f) {\n        return function (x) {\n            return function (y) {\n                return compare3(f(x))(f(y));\n            };\n        };\n    };\n};\nvar greaterThan = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.GT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar greaterThanOrEq = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.LT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar lessThan = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.LT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar signum = function (dictOrd) {\n    var lessThan1 = lessThan(dictOrd);\n    var greaterThan1 = greaterThan(dictOrd);\n    return function (dictRing) {\n        var Semiring0 = dictRing.Semiring0();\n        var zero = Data_Semiring.zero(Semiring0);\n        var negate1 = Data_Ring.negate(dictRing);\n        var one = Data_Semiring.one(Semiring0);\n        return function (x) {\n            var $89 = lessThan1(x)(zero);\n            if ($89) {\n                return negate1(one);\n            };\n            var $90 = greaterThan1(x)(zero);\n            if ($90) {\n                return one;\n            };\n            return x;\n        };\n    };\n};\nvar lessThanOrEq = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.GT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar max = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (x) {\n        return function (y) {\n            var v = compare3(x)(y);\n            if (v instanceof Data_Ordering.LT) {\n                return y;\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return x;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar min = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (x) {\n        return function (y) {\n            var v = compare3(x)(y);\n            if (v instanceof Data_Ordering.LT) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return y;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar ordArray = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    var eqArray = Data_Eq.eqArray(dictOrd.Eq0());\n    return {\n        compare: (function () {\n            var toDelta = function (x) {\n                return function (y) {\n                    var v = compare3(x)(y);\n                    if (v instanceof Data_Ordering.EQ) {\n                        return 0;\n                    };\n                    if (v instanceof Data_Ordering.LT) {\n                        return 1;\n                    };\n                    if (v instanceof Data_Ordering.GT) {\n                        return -1 | 0;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): \" + [ v.constructor.name ]);\n                };\n            };\n            return function (xs) {\n                return function (ys) {\n                    return compare2(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));\n                };\n            };\n        })(),\n        Eq0: function () {\n            return eqArray;\n        }\n    };\n};\nvar ord1Array = {\n    compare1: function (dictOrd) {\n        return compare(ordArray(dictOrd));\n    },\n    Eq10: function () {\n        return Data_Eq.eq1Array;\n    }\n};\nvar ordRecordCons = function (dictOrdRecord) {\n    var compareRecord1 = compareRecord(dictOrdRecord);\n    var eqRowCons = Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())();\n    return function () {\n        return function (dictIsSymbol) {\n            var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n            var eqRowCons1 = eqRowCons(dictIsSymbol);\n            return function (dictOrd) {\n                var compare3 = compare(dictOrd);\n                var eqRowCons2 = eqRowCons1(dictOrd.Eq0());\n                return {\n                    compareRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var left = compare3(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));\n                                var $95 = notEq(left)(Data_Ordering.EQ.value);\n                                if ($95) {\n                                    return left;\n                                };\n                                return compareRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                            };\n                        };\n                    },\n                    EqRecord0: function () {\n                        return eqRowCons2;\n                    }\n                };\n            };\n        };\n    };\n};\nvar clamp = function (dictOrd) {\n    var min1 = min(dictOrd);\n    var max1 = max(dictOrd);\n    return function (low) {\n        return function (hi) {\n            return function (x) {\n                return min1(hi)(max1(low)(x));\n            };\n        };\n    };\n};\nvar between = function (dictOrd) {\n    var lessThan1 = lessThan(dictOrd);\n    var greaterThan1 = greaterThan(dictOrd);\n    return function (low) {\n        return function (hi) {\n            return function (x) {\n                if (lessThan1(x)(low)) {\n                    return false;\n                };\n                if (greaterThan1(x)(hi)) {\n                    return false;\n                };\n                return true;\n            };\n        };\n    };\n};\nvar abs = function (dictOrd) {\n    var greaterThanOrEq1 = greaterThanOrEq(dictOrd);\n    return function (dictRing) {\n        var zero = Data_Semiring.zero(dictRing.Semiring0());\n        var negate1 = Data_Ring.negate(dictRing);\n        return function (x) {\n            var $99 = greaterThanOrEq1(x)(zero);\n            if ($99) {\n                return x;\n            };\n            return negate1(x);\n        };\n    };\n};\nexport {\n    compare,\n    compare1,\n    lessThan,\n    lessThanOrEq,\n    greaterThan,\n    greaterThanOrEq,\n    comparing,\n    min,\n    max,\n    clamp,\n    between,\n    abs,\n    signum,\n    compareRecord,\n    ordBoolean,\n    ordInt,\n    ordNumber,\n    ordString,\n    ordChar,\n    ordUnit,\n    ordVoid,\n    ordProxy,\n    ordArray,\n    ordOrdering,\n    ord1Array,\n    ordRecordNil,\n    ordRecordCons,\n    ordRecord\n};\nexport {\n    EQ,\n    GT,\n    LT\n} from \"../Data.Ordering/index.js\";\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar ttRecord = function (dict) {\n    return dict.ttRecord;\n};\nvar tt = function (dict) {\n    return dict.tt;\n};\nvar notRecord = function (dict) {\n    return dict.notRecord;\n};\nvar not = function (dict) {\n    return dict.not;\n};\nvar impliesRecord = function (dict) {\n    return dict.impliesRecord;\n};\nvar implies = function (dict) {\n    return dict.implies;\n};\nvar heytingAlgebraUnit = {\n    ff: Data_Unit.unit,\n    tt: Data_Unit.unit,\n    implies: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    conj: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    disj: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    not: function (v) {\n        return Data_Unit.unit;\n    }\n};\nvar heytingAlgebraRecordNil = {\n    conjRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    disjRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    ffRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    },\n    impliesRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    notRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    },\n    ttRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    }\n};\nvar heytingAlgebraProxy = /* #__PURE__ */ (function () {\n    return {\n        conj: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        disj: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        implies: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        ff: Type_Proxy[\"Proxy\"].value,\n        not: function (v) {\n            return Type_Proxy[\"Proxy\"].value;\n        },\n        tt: Type_Proxy[\"Proxy\"].value\n    };\n})();\nvar ffRecord = function (dict) {\n    return dict.ffRecord;\n};\nvar ff = function (dict) {\n    return dict.ff;\n};\nvar disjRecord = function (dict) {\n    return dict.disjRecord;\n};\nvar disj = function (dict) {\n    return dict.disj;\n};\nvar heytingAlgebraBoolean = {\n    ff: false,\n    tt: true,\n    implies: function (a) {\n        return function (b) {\n            return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);\n        };\n    },\n    conj: $foreign.boolConj,\n    disj: $foreign.boolDisj,\n    not: $foreign.boolNot\n};\nvar conjRecord = function (dict) {\n    return dict.conjRecord;\n};\nvar heytingAlgebraRecord = function () {\n    return function (dictHeytingAlgebraRecord) {\n        return {\n            ff: ffRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value),\n            tt: ttRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value),\n            conj: conjRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value),\n            disj: disjRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value),\n            implies: impliesRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value),\n            not: notRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar conj = function (dict) {\n    return dict.conj;\n};\nvar heytingAlgebraFunction = function (dictHeytingAlgebra) {\n    var ff1 = ff(dictHeytingAlgebra);\n    var tt1 = tt(dictHeytingAlgebra);\n    var implies1 = implies(dictHeytingAlgebra);\n    var conj1 = conj(dictHeytingAlgebra);\n    var disj1 = disj(dictHeytingAlgebra);\n    var not1 = not(dictHeytingAlgebra);\n    return {\n        ff: function (v) {\n            return ff1;\n        },\n        tt: function (v) {\n            return tt1;\n        },\n        implies: function (f) {\n            return function (g) {\n                return function (a) {\n                    return implies1(f(a))(g(a));\n                };\n            };\n        },\n        conj: function (f) {\n            return function (g) {\n                return function (a) {\n                    return conj1(f(a))(g(a));\n                };\n            };\n        },\n        disj: function (f) {\n            return function (g) {\n                return function (a) {\n                    return disj1(f(a))(g(a));\n                };\n            };\n        },\n        not: function (f) {\n            return function (a) {\n                return not1(f(a));\n            };\n        }\n    };\n};\nvar heytingAlgebraRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (dictHeytingAlgebraRecord) {\n            var conjRecord1 = conjRecord(dictHeytingAlgebraRecord);\n            var disjRecord1 = disjRecord(dictHeytingAlgebraRecord);\n            var impliesRecord1 = impliesRecord(dictHeytingAlgebraRecord);\n            var ffRecord1 = ffRecord(dictHeytingAlgebraRecord);\n            var notRecord1 = notRecord(dictHeytingAlgebraRecord);\n            var ttRecord1 = ttRecord(dictHeytingAlgebraRecord);\n            return function (dictHeytingAlgebra) {\n                var conj1 = conj(dictHeytingAlgebra);\n                var disj1 = disj(dictHeytingAlgebra);\n                var implies1 = implies(dictHeytingAlgebra);\n                var ff1 = ff(dictHeytingAlgebra);\n                var not1 = not(dictHeytingAlgebra);\n                var tt1 = tt(dictHeytingAlgebra);\n                return {\n                    conjRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = conjRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(conj1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    disjRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = disjRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(disj1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    impliesRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = impliesRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(implies1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    ffRecord: function (v) {\n                        return function (row) {\n                            var tail = ffRecord1(Type_Proxy[\"Proxy\"].value)(row);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            return insert(ff1)(tail);\n                        };\n                    },\n                    notRecord: function (v) {\n                        return function (row) {\n                            var tail = notRecord1(Type_Proxy[\"Proxy\"].value)(row);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(not1(get(row)))(tail);\n                        };\n                    },\n                    ttRecord: function (v) {\n                        return function (row) {\n                            var tail = ttRecord1(Type_Proxy[\"Proxy\"].value)(row);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            return insert(tt1)(tail);\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    tt,\n    ff,\n    implies,\n    conj,\n    disj,\n    not,\n    ffRecord,\n    ttRecord,\n    impliesRecord,\n    conjRecord,\n    disjRecord,\n    notRecord,\n    heytingAlgebraBoolean,\n    heytingAlgebraUnit,\n    heytingAlgebraFunction,\n    heytingAlgebraProxy,\n    heytingAlgebraRecord,\n    heytingAlgebraRecordNil,\n    heytingAlgebraRecordCons\n};\n","export const boolConj = function (b1) {\n  return function (b2) {\n    return b1 && b2;\n  };\n};\n\nexport const boolDisj = function (b1) {\n  return function (b2) {\n    return b1 || b2;\n  };\n};\n\nexport const boolNot = function (b) {\n  return !b;\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Data_Void from \"../Data.Void/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar semigroupVoid = {\n    append: function (v) {\n        return Data_Void.absurd;\n    }\n};\nvar semigroupUnit = {\n    append: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    }\n};\nvar semigroupString = {\n    append: $foreign.concatString\n};\nvar semigroupRecordNil = {\n    appendRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    }\n};\nvar semigroupProxy = {\n    append: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    }\n};\nvar semigroupArray = {\n    append: $foreign.concatArray\n};\nvar appendRecord = function (dict) {\n    return dict.appendRecord;\n};\nvar semigroupRecord = function () {\n    return function (dictSemigroupRecord) {\n        return {\n            append: appendRecord(dictSemigroupRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar append = function (dict) {\n    return dict.append;\n};\nvar semigroupFn = function (dictSemigroup) {\n    var append1 = append(dictSemigroup);\n    return {\n        append: function (f) {\n            return function (g) {\n                return function (x) {\n                    return append1(f(x))(g(x));\n                };\n            };\n        }\n    };\n};\nvar semigroupRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (dictSemigroupRecord) {\n            var appendRecord1 = appendRecord(dictSemigroupRecord);\n            return function (dictSemigroup) {\n                var append1 = append(dictSemigroup);\n                return {\n                    appendRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = appendRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(append1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    append,\n    appendRecord,\n    semigroupString,\n    semigroupUnit,\n    semigroupVoid,\n    semigroupFn,\n    semigroupArray,\n    semigroupProxy,\n    semigroupRecord,\n    semigroupRecordNil,\n    semigroupRecordCons\n};\n","export const concatString = function (s1) {\n  return function (s2) {\n    return s1 + s2;\n  };\n};\n\nexport const concatArray = function (xs) {\n  return function (ys) {\n    if (xs.length === 0) return ys;\n    if (ys.length === 0) return xs;\n    return xs.concat(ys);\n  };\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar semigroupRecord = /* #__PURE__ */ Data_Semigroup.semigroupRecord();\nvar mod = /* #__PURE__ */ Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt);\nvar div = /* #__PURE__ */ Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt);\nvar monoidUnit = {\n    mempty: Data_Unit.unit,\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupUnit;\n    }\n};\nvar monoidString = {\n    mempty: \"\",\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupString;\n    }\n};\nvar monoidRecordNil = {\n    memptyRecord: function (v) {\n        return {};\n    },\n    SemigroupRecord0: function () {\n        return Data_Semigroup.semigroupRecordNil;\n    }\n};\nvar monoidOrdering = /* #__PURE__ */ (function () {\n    return {\n        mempty: Data_Ordering.EQ.value,\n        Semigroup0: function () {\n            return Data_Ordering.semigroupOrdering;\n        }\n    };\n})();\nvar monoidArray = {\n    mempty: [  ],\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupArray;\n    }\n};\nvar memptyRecord = function (dict) {\n    return dict.memptyRecord;\n};\nvar monoidRecord = function () {\n    return function (dictMonoidRecord) {\n        var semigroupRecord1 = semigroupRecord(dictMonoidRecord.SemigroupRecord0());\n        return {\n            mempty: memptyRecord(dictMonoidRecord)(Type_Proxy[\"Proxy\"].value),\n            Semigroup0: function () {\n                return semigroupRecord1;\n            }\n        };\n    };\n};\nvar mempty = function (dict) {\n    return dict.mempty;\n};\nvar monoidFn = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    var semigroupFn = Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());\n    return {\n        mempty: function (v) {\n            return mempty1;\n        },\n        Semigroup0: function () {\n            return semigroupFn;\n        }\n    };\n};\nvar monoidRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    var semigroupRecordCons = Data_Semigroup.semigroupRecordCons(dictIsSymbol)();\n    return function (dictMonoid) {\n        var mempty1 = mempty(dictMonoid);\n        var Semigroup0 = dictMonoid.Semigroup0();\n        return function () {\n            return function (dictMonoidRecord) {\n                var memptyRecord1 = memptyRecord(dictMonoidRecord);\n                var semigroupRecordCons1 = semigroupRecordCons(dictMonoidRecord.SemigroupRecord0())(Semigroup0);\n                return {\n                    memptyRecord: function (v) {\n                        var tail = memptyRecord1(Type_Proxy[\"Proxy\"].value);\n                        var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        return insert(mempty1)(tail);\n                    },\n                    SemigroupRecord0: function () {\n                        return semigroupRecordCons1;\n                    }\n                };\n            };\n        };\n    };\n};\nvar power = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n    return function (x) {\n        var go = function (p) {\n            if (p <= 0) {\n                return mempty1;\n            };\n            if (p === 1) {\n                return x;\n            };\n            if (mod(p)(2) === 0) {\n                var x$prime = go(div(p)(2));\n                return append(x$prime)(x$prime);\n            };\n            if (Data_Boolean.otherwise) {\n                var x$prime = go(div(p)(2));\n                return append(x$prime)(append(x$prime)(x));\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): \" + [ p.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar guard = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return mempty1;\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nexport {\n    mempty,\n    power,\n    guard,\n    memptyRecord,\n    monoidUnit,\n    monoidOrdering,\n    monoidFn,\n    monoidString,\n    monoidArray,\n    monoidRecord,\n    monoidRecordNil,\n    monoidRecordCons\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar Tuple = /* #__PURE__ */ (function () {\n    function Tuple(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Tuple.create = function (value0) {\n        return function (value1) {\n            return new Tuple(value0, value1);\n        };\n    };\n    return Tuple;\n})();\nvar uncurry = function (f) {\n    return function (v) {\n        return f(v.value0)(v.value1);\n    };\n};\nvar swap = function (v) {\n    return new Tuple(v.value1, v.value0);\n};\nvar snd = function (v) {\n    return v.value1;\n};\nvar showTuple = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                return \"(Tuple \" + (show(v.value0) + (\" \" + (show1(v.value1) + \")\")));\n            }\n        };\n    };\n};\nvar semiringTuple = function (dictSemiring) {\n    var add = Data_Semiring.add(dictSemiring);\n    var one = Data_Semiring.one(dictSemiring);\n    var mul = Data_Semiring.mul(dictSemiring);\n    var zero = Data_Semiring.zero(dictSemiring);\n    return function (dictSemiring1) {\n        var add1 = Data_Semiring.add(dictSemiring1);\n        var mul1 = Data_Semiring.mul(dictSemiring1);\n        return {\n            add: function (v) {\n                return function (v1) {\n                    return new Tuple(add(v.value0)(v1.value0), add1(v.value1)(v1.value1));\n                };\n            },\n            one: new Tuple(one, Data_Semiring.one(dictSemiring1)),\n            mul: function (v) {\n                return function (v1) {\n                    return new Tuple(mul(v.value0)(v1.value0), mul1(v.value1)(v1.value1));\n                };\n            },\n            zero: new Tuple(zero, Data_Semiring.zero(dictSemiring1))\n        };\n    };\n};\nvar semigroupoidTuple = {\n    compose: function (v) {\n        return function (v1) {\n            return new Tuple(v1.value0, v.value1);\n        };\n    }\n};\nvar semigroupTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return function (dictSemigroup1) {\n        var append2 = Data_Semigroup.append(dictSemigroup1);\n        return {\n            append: function (v) {\n                return function (v1) {\n                    return new Tuple(append1(v.value0)(v1.value0), append2(v.value1)(v1.value1));\n                };\n            }\n        };\n    };\n};\nvar ringTuple = function (dictRing) {\n    var sub = Data_Ring.sub(dictRing);\n    var semiringTuple1 = semiringTuple(dictRing.Semiring0());\n    return function (dictRing1) {\n        var sub1 = Data_Ring.sub(dictRing1);\n        var semiringTuple2 = semiringTuple1(dictRing1.Semiring0());\n        return {\n            sub: function (v) {\n                return function (v1) {\n                    return new Tuple(sub(v.value0)(v1.value0), sub1(v.value1)(v1.value1));\n                };\n            },\n            Semiring0: function () {\n                return semiringTuple2;\n            }\n        };\n    };\n};\nvar monoidTuple = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var semigroupTuple1 = semigroupTuple(dictMonoid.Semigroup0());\n    return function (dictMonoid1) {\n        var semigroupTuple2 = semigroupTuple1(dictMonoid1.Semigroup0());\n        return {\n            mempty: new Tuple(mempty, Data_Monoid.mempty(dictMonoid1)),\n            Semigroup0: function () {\n                return semigroupTuple2;\n            }\n        };\n    };\n};\nvar heytingAlgebraTuple = function (dictHeytingAlgebra) {\n    var tt = Data_HeytingAlgebra.tt(dictHeytingAlgebra);\n    var ff = Data_HeytingAlgebra.ff(dictHeytingAlgebra);\n    var implies = Data_HeytingAlgebra.implies(dictHeytingAlgebra);\n    var conj1 = Data_HeytingAlgebra.conj(dictHeytingAlgebra);\n    var disj = Data_HeytingAlgebra.disj(dictHeytingAlgebra);\n    var not = Data_HeytingAlgebra.not(dictHeytingAlgebra);\n    return function (dictHeytingAlgebra1) {\n        var implies1 = Data_HeytingAlgebra.implies(dictHeytingAlgebra1);\n        var conj2 = Data_HeytingAlgebra.conj(dictHeytingAlgebra1);\n        var disj1 = Data_HeytingAlgebra.disj(dictHeytingAlgebra1);\n        var not1 = Data_HeytingAlgebra.not(dictHeytingAlgebra1);\n        return {\n            tt: new Tuple(tt, Data_HeytingAlgebra.tt(dictHeytingAlgebra1)),\n            ff: new Tuple(ff, Data_HeytingAlgebra.ff(dictHeytingAlgebra1)),\n            implies: function (v) {\n                return function (v1) {\n                    return new Tuple(implies(v.value0)(v1.value0), implies1(v.value1)(v1.value1));\n                };\n            },\n            conj: function (v) {\n                return function (v1) {\n                    return new Tuple(conj1(v.value0)(v1.value0), conj2(v.value1)(v1.value1));\n                };\n            },\n            disj: function (v) {\n                return function (v1) {\n                    return new Tuple(disj(v.value0)(v1.value0), disj1(v.value1)(v1.value1));\n                };\n            },\n            not: function (v) {\n                return new Tuple(not(v.value0), not1(v.value1));\n            }\n        };\n    };\n};\nvar genericTuple = {\n    to: function (x) {\n        return new Tuple(x.value0, x.value1);\n    },\n    from: function (x) {\n        return new Data_Generic_Rep.Product(x.value0, x.value1);\n    }\n};\nvar functorTuple = {\n    map: function (f) {\n        return function (m) {\n            return new Tuple(m.value0, f(m.value1));\n        };\n    }\n};\nvar invariantTuple = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorTuple)\n};\nvar fst = function (v) {\n    return v.value0;\n};\nvar lazyTuple = function (dictLazy) {\n    var defer = Control_Lazy.defer(dictLazy);\n    return function (dictLazy1) {\n        var defer1 = Control_Lazy.defer(dictLazy1);\n        return {\n            defer: function (f) {\n                return new Tuple(defer(function (v) {\n                    return fst(f(Data_Unit.unit));\n                }), defer1(function (v) {\n                    return snd(f(Data_Unit.unit));\n                }));\n            }\n        };\n    };\n};\nvar extendTuple = {\n    extend: function (f) {\n        return function (v) {\n            return new Tuple(v.value0, f(v));\n        };\n    },\n    Functor0: function () {\n        return functorTuple;\n    }\n};\nvar eqTuple = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(dictEq1);\n        return {\n            eq: function (x) {\n                return function (y) {\n                    return eq(x.value0)(y.value0) && eq1(x.value1)(y.value1);\n                };\n            }\n        };\n    };\n};\nvar ordTuple = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqTuple1 = eqTuple(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare(dictOrd1);\n        var eqTuple2 = eqTuple1(dictOrd1.Eq0());\n        return {\n            compare: function (x) {\n                return function (y) {\n                    var v = compare(x.value0)(y.value0);\n                    if (v instanceof Data_Ordering.LT) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (v instanceof Data_Ordering.GT) {\n                        return Data_Ordering.GT.value;\n                    };\n                    return compare1(x.value1)(y.value1);\n                };\n            },\n            Eq0: function () {\n                return eqTuple2;\n            }\n        };\n    };\n};\nvar eq1Tuple = function (dictEq) {\n    var eqTuple1 = eqTuple(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqTuple1(dictEq1));\n        }\n    };\n};\nvar ord1Tuple = function (dictOrd) {\n    var ordTuple1 = ordTuple(dictOrd);\n    var eq1Tuple1 = eq1Tuple(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordTuple1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Tuple1;\n        }\n    };\n};\nvar curry = function (f) {\n    return function (a) {\n        return function (b) {\n            return f(new Tuple(a, b));\n        };\n    };\n};\nvar comonadTuple = {\n    extract: snd,\n    Extend0: function () {\n        return extendTuple;\n    }\n};\nvar commutativeRingTuple = function (dictCommutativeRing) {\n    var ringTuple1 = ringTuple(dictCommutativeRing.Ring0());\n    return function (dictCommutativeRing1) {\n        var ringTuple2 = ringTuple1(dictCommutativeRing1.Ring0());\n        return {\n            Ring0: function () {\n                return ringTuple2;\n            }\n        };\n    };\n};\nvar boundedTuple = function (dictBounded) {\n    var top = Data_Bounded.top(dictBounded);\n    var bottom = Data_Bounded.bottom(dictBounded);\n    var ordTuple1 = ordTuple(dictBounded.Ord0());\n    return function (dictBounded1) {\n        var ordTuple2 = ordTuple1(dictBounded1.Ord0());\n        return {\n            top: new Tuple(top, Data_Bounded.top(dictBounded1)),\n            bottom: new Tuple(bottom, Data_Bounded.bottom(dictBounded1)),\n            Ord0: function () {\n                return ordTuple2;\n            }\n        };\n    };\n};\nvar booleanAlgebraTuple = function (dictBooleanAlgebra) {\n    var heytingAlgebraTuple1 = heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0());\n    return function (dictBooleanAlgebra1) {\n        var heytingAlgebraTuple2 = heytingAlgebraTuple1(dictBooleanAlgebra1.HeytingAlgebra0());\n        return {\n            HeytingAlgebra0: function () {\n                return heytingAlgebraTuple2;\n            }\n        };\n    };\n};\nvar applyTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        apply: function (v) {\n            return function (v1) {\n                return new Tuple(append1(v.value0)(v1.value0), v.value1(v1.value1));\n            };\n        },\n        Functor0: function () {\n            return functorTuple;\n        }\n    };\n};\nvar bindTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    var applyTuple1 = applyTuple(dictSemigroup);\n    return {\n        bind: function (v) {\n            return function (f) {\n                var v1 = f(v.value1);\n                return new Tuple(append1(v.value0)(v1.value0), v1.value1);\n            };\n        },\n        Apply0: function () {\n            return applyTuple1;\n        }\n    };\n};\nvar applicativeTuple = function (dictMonoid) {\n    var applyTuple1 = applyTuple(dictMonoid.Semigroup0());\n    return {\n        pure: Tuple.create(Data_Monoid.mempty(dictMonoid)),\n        Apply0: function () {\n            return applyTuple1;\n        }\n    };\n};\nvar monadTuple = function (dictMonoid) {\n    var applicativeTuple1 = applicativeTuple(dictMonoid);\n    var bindTuple1 = bindTuple(dictMonoid.Semigroup0());\n    return {\n        Applicative0: function () {\n            return applicativeTuple1;\n        },\n        Bind1: function () {\n            return bindTuple1;\n        }\n    };\n};\nexport {\n    Tuple,\n    fst,\n    snd,\n    curry,\n    uncurry,\n    swap,\n    showTuple,\n    eqTuple,\n    eq1Tuple,\n    ordTuple,\n    ord1Tuple,\n    boundedTuple,\n    semigroupoidTuple,\n    semigroupTuple,\n    monoidTuple,\n    semiringTuple,\n    ringTuple,\n    commutativeRingTuple,\n    heytingAlgebraTuple,\n    booleanAlgebraTuple,\n    functorTuple,\n    genericTuple,\n    invariantTuple,\n    applyTuple,\n    applicativeTuple,\n    bindTuple,\n    monadTuple,\n    extendTuple,\n    comonadTuple,\n    lazyTuple\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar state = function (dict) {\n    return dict.state;\n};\nvar put = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (s) {\n        return state1(function (v) {\n            return new Data_Tuple.Tuple(Data_Unit.unit, s);\n        });\n    };\n};\nvar modify_ = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));\n        });\n    };\n};\nvar modify = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            var s$prime = f(s);\n            return new Data_Tuple.Tuple(s$prime, s$prime);\n        });\n    };\n};\nvar gets = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            return new Data_Tuple.Tuple(f(s), s);\n        });\n    };\n};\nvar get = function (dictMonadState) {\n    return state(dictMonadState)(function (s) {\n        return new Data_Tuple.Tuple(s, s);\n    });\n};\nexport {\n    state,\n    get,\n    gets,\n    put,\n    modify,\n    modify_\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Nothing = /* #__PURE__ */ (function () {\n    function Nothing() {\n\n    };\n    Nothing.value = new Nothing();\n    return Nothing;\n})();\nvar Just = /* #__PURE__ */ (function () {\n    function Just(value0) {\n        this.value0 = value0;\n    };\n    Just.create = function (value0) {\n        return new Just(value0);\n    };\n    return Just;\n})();\nvar showMaybe = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof Just) {\n                return \"(Just \" + (show(v.value0) + \")\");\n            };\n            if (v instanceof Nothing) {\n                return \"Nothing\";\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 223, column 1 - line 225, column 28): \" + [ v.constructor.name ]);\n        }\n    };\n};\nvar semigroupMaybe = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        append: function (v) {\n            return function (v1) {\n                if (v instanceof Nothing) {\n                    return v1;\n                };\n                if (v1 instanceof Nothing) {\n                    return v;\n                };\n                if (v instanceof Just && v1 instanceof Just) {\n                    return new Just(append1(v.value0)(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 182, column 1 - line 185, column 43): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        }\n    };\n};\nvar optional = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var map1 = Data_Functor.map(dictAlt.Functor0());\n    return function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        return function (a) {\n            return alt(map1(Just.create)(a))(pure(Nothing.value));\n        };\n    };\n};\nvar monoidMaybe = function (dictSemigroup) {\n    var semigroupMaybe1 = semigroupMaybe(dictSemigroup);\n    return {\n        mempty: Nothing.value,\n        Semigroup0: function () {\n            return semigroupMaybe1;\n        }\n    };\n};\nvar maybe$prime = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v(Data_Unit.unit);\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar maybe = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v;\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar isNothing = /* #__PURE__ */ maybe(true)(/* #__PURE__ */ Data_Function[\"const\"](false));\nvar isJust = /* #__PURE__ */ maybe(false)(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar genericMaybe = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return Nothing.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new Just(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof Nothing) {\n            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);\n        };\n        if (x instanceof Just) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): \" + [ x.constructor.name ]);\n    }\n};\nvar functorMaybe = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Just) {\n                return new Just(v(v1.value0));\n            };\n            return Nothing.value;\n        };\n    }\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorMaybe);\nvar invariantMaybe = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorMaybe)\n};\nvar fromMaybe$prime = function (a) {\n    return maybe$prime(a)(identity);\n};\nvar fromMaybe = function (a) {\n    return maybe(a)(identity);\n};\nvar fromJust = function () {\n    return function (v) {\n        if (v instanceof Just) {\n            return v.value0;\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): \" + [ v.constructor.name ]);\n    };\n};\nvar extendMaybe = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Nothing) {\n                return Nothing.value;\n            };\n            return new Just(v(v1));\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar eqMaybe = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return {\n        eq: function (x) {\n            return function (y) {\n                if (x instanceof Nothing && y instanceof Nothing) {\n                    return true;\n                };\n                if (x instanceof Just && y instanceof Just) {\n                    return eq(x.value0)(y.value0);\n                };\n                return false;\n            };\n        }\n    };\n};\nvar ordMaybe = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqMaybe1 = eqMaybe(dictOrd.Eq0());\n    return {\n        compare: function (x) {\n            return function (y) {\n                if (x instanceof Nothing && y instanceof Nothing) {\n                    return Data_Ordering.EQ.value;\n                };\n                if (x instanceof Nothing) {\n                    return Data_Ordering.LT.value;\n                };\n                if (y instanceof Nothing) {\n                    return Data_Ordering.GT.value;\n                };\n                if (x instanceof Just && y instanceof Just) {\n                    return compare(x.value0)(y.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n            };\n        },\n        Eq0: function () {\n            return eqMaybe1;\n        }\n    };\n};\nvar eq1Maybe = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqMaybe(dictEq));\n    }\n};\nvar ord1Maybe = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordMaybe(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Maybe;\n    }\n};\nvar boundedMaybe = function (dictBounded) {\n    var ordMaybe1 = ordMaybe(dictBounded.Ord0());\n    return {\n        top: new Just(Data_Bounded.top(dictBounded)),\n        bottom: Nothing.value,\n        Ord0: function () {\n            return ordMaybe1;\n        }\n    };\n};\nvar applyMaybe = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Just) {\n                return map(v.value0)(v1);\n            };\n            if (v instanceof Nothing) {\n                return Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyMaybe);\nvar bindMaybe = {\n    bind: function (v) {\n        return function (v1) {\n            if (v instanceof Just) {\n                return v1(v.value0);\n            };\n            if (v instanceof Nothing) {\n                return Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Apply0: function () {\n        return applyMaybe;\n    }\n};\nvar semiringMaybe = function (dictSemiring) {\n    var add = Data_Semiring.add(dictSemiring);\n    var mul = Data_Semiring.mul(dictSemiring);\n    return {\n        zero: Nothing.value,\n        one: new Just(Data_Semiring.one(dictSemiring)),\n        add: function (v) {\n            return function (v1) {\n                if (v instanceof Nothing) {\n                    return v1;\n                };\n                if (v1 instanceof Nothing) {\n                    return v;\n                };\n                if (v instanceof Just && v1 instanceof Just) {\n                    return new Just(add(v.value0)(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 190, column 1 - line 198, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        },\n        mul: function (x) {\n            return function (y) {\n                return apply(map(mul)(x))(y);\n            };\n        }\n    };\n};\nvar applicativeMaybe = /* #__PURE__ */ (function () {\n    return {\n        pure: Just.create,\n        Apply0: function () {\n            return applyMaybe;\n        }\n    };\n})();\nvar monadMaybe = {\n    Applicative0: function () {\n        return applicativeMaybe;\n    },\n    Bind1: function () {\n        return bindMaybe;\n    }\n};\nvar altMaybe = {\n    alt: function (v) {\n        return function (v1) {\n            if (v instanceof Nothing) {\n                return v1;\n            };\n            return v;\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar plusMaybe = /* #__PURE__ */ (function () {\n    return {\n        empty: Nothing.value,\n        Alt0: function () {\n            return altMaybe;\n        }\n    };\n})();\nvar alternativeMaybe = {\n    Applicative0: function () {\n        return applicativeMaybe;\n    },\n    Plus1: function () {\n        return plusMaybe;\n    }\n};\nexport {\n    Nothing,\n    Just,\n    maybe,\n    maybe$prime,\n    fromMaybe,\n    fromMaybe$prime,\n    isJust,\n    isNothing,\n    fromJust,\n    optional,\n    functorMaybe,\n    applyMaybe,\n    applicativeMaybe,\n    altMaybe,\n    plusMaybe,\n    alternativeMaybe,\n    bindMaybe,\n    monadMaybe,\n    extendMaybe,\n    invariantMaybe,\n    semigroupMaybe,\n    monoidMaybe,\n    semiringMaybe,\n    eqMaybe,\n    eq1Maybe,\n    ordMaybe,\n    ord1Maybe,\n    boundedMaybe,\n    showMaybe,\n    genericMaybe\n};\n","/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */\n/* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */\nvar Aff = function () {\n  // A unique value for empty.\n  var EMPTY = {};\n\n  /*\n\n  An awkward approximation. We elide evidence we would otherwise need in PS for\n  efficiency sake.\n\n  data Aff eff a\n    = Pure a\n    | Throw Error\n    | Catch (Aff eff a) (Error -> Aff eff a)\n    | Sync (Eff eff a)\n    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))\n    | forall b. Bind (Aff eff b) (b -> Aff eff a)\n    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)\n    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)\n    | Sequential (ParAff aff a)\n\n  */\n  var PURE    = \"Pure\";\n  var THROW   = \"Throw\";\n  var CATCH   = \"Catch\";\n  var SYNC    = \"Sync\";\n  var ASYNC   = \"Async\";\n  var BIND    = \"Bind\";\n  var BRACKET = \"Bracket\";\n  var FORK    = \"Fork\";\n  var SEQ     = \"Sequential\";\n\n  /*\n\n  data ParAff eff a\n    = forall b. Map (b -> a) (ParAff eff b)\n    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)\n    | Alt (ParAff eff a) (ParAff eff a)\n    | ?Par (Aff eff a)\n\n  */\n  var MAP   = \"Map\";\n  var APPLY = \"Apply\";\n  var ALT   = \"Alt\";\n\n  // Various constructors used in interpretation\n  var CONS      = \"Cons\";      // Cons-list, for stacks\n  var RESUME    = \"Resume\";    // Continue indiscriminately\n  var RELEASE   = \"Release\";   // Continue with bracket finalizers\n  var FINALIZER = \"Finalizer\"; // A non-interruptible effect\n  var FINALIZED = \"Finalized\"; // Marker for finalization\n  var FORKED    = \"Forked\";    // Reference to a forked fiber, with resumption stack\n  var FIBER     = \"Fiber\";     // Actual fiber reference\n  var THUNK     = \"Thunk\";     // Primed effect, ready to invoke\n\n  function Aff(tag, _1, _2, _3) {\n    this.tag = tag;\n    this._1  = _1;\n    this._2  = _2;\n    this._3  = _3;\n  }\n\n  function AffCtr(tag) {\n    var fn = function (_1, _2, _3) {\n      return new Aff(tag, _1, _2, _3);\n    };\n    fn.tag = tag;\n    return fn;\n  }\n\n  function nonCanceler(error) {\n    return new Aff(PURE, void 0);\n  }\n\n  function runEff(eff) {\n    try {\n      eff();\n    } catch (error) {\n      setTimeout(function () {\n        throw error;\n      }, 0);\n    }\n  }\n\n  function runSync(left, right, eff) {\n    try {\n      return right(eff());\n    } catch (error) {\n      return left(error);\n    }\n  }\n\n  function runAsync(left, eff, k) {\n    try {\n      return eff(k)();\n    } catch (error) {\n      k(left(error))();\n      return nonCanceler;\n    }\n  }\n\n  var Scheduler = function () {\n    var limit    = 1024;\n    var size     = 0;\n    var ix       = 0;\n    var queue    = new Array(limit);\n    var draining = false;\n\n    function drain() {\n      var thunk;\n      draining = true;\n      while (size !== 0) {\n        size--;\n        thunk     = queue[ix];\n        queue[ix] = void 0;\n        ix        = (ix + 1) % limit;\n        thunk();\n      }\n      draining = false;\n    }\n\n    return {\n      isDraining: function () {\n        return draining;\n      },\n      enqueue: function (cb) {\n        var i, tmp;\n        if (size === limit) {\n          tmp = draining;\n          drain();\n          draining = tmp;\n        }\n\n        queue[(ix + size) % limit] = cb;\n        size++;\n\n        if (!draining) {\n          drain();\n        }\n      }\n    };\n  }();\n\n  function Supervisor(util) {\n    var fibers  = {};\n    var fiberId = 0;\n    var count   = 0;\n\n    return {\n      register: function (fiber) {\n        var fid = fiberId++;\n        fiber.onComplete({\n          rethrow: true,\n          handler: function (result) {\n            return function () {\n              count--;\n              delete fibers[fid];\n            };\n          }\n        })();\n        fibers[fid] = fiber;\n        count++;\n      },\n      isEmpty: function () {\n        return count === 0;\n      },\n      killAll: function (killError, cb) {\n        return function () {\n          if (count === 0) {\n            return cb();\n          }\n\n          var killCount = 0;\n          var kills     = {};\n\n          function kill(fid) {\n            kills[fid] = fibers[fid].kill(killError, function (result) {\n              return function () {\n                delete kills[fid];\n                killCount--;\n                if (util.isLeft(result) && util.fromLeft(result)) {\n                  setTimeout(function () {\n                    throw util.fromLeft(result);\n                  }, 0);\n                }\n                if (killCount === 0) {\n                  cb();\n                }\n              };\n            })();\n          }\n\n          for (var k in fibers) {\n            if (fibers.hasOwnProperty(k)) {\n              killCount++;\n              kill(k);\n            }\n          }\n\n          fibers  = {};\n          fiberId = 0;\n          count   = 0;\n\n          return function (error) {\n            return new Aff(SYNC, function () {\n              for (var k in kills) {\n                if (kills.hasOwnProperty(k)) {\n                  kills[k]();\n                }\n              }\n            });\n          };\n        };\n      }\n    };\n  }\n\n  // Fiber state machine\n  var SUSPENDED   = 0; // Suspended, pending a join.\n  var CONTINUE    = 1; // Interpret the next instruction.\n  var STEP_BIND   = 2; // Apply the next bind.\n  var STEP_RESULT = 3; // Handle potential failure from a result.\n  var PENDING     = 4; // An async effect is running.\n  var RETURN      = 5; // The current stack has returned.\n  var COMPLETED   = 6; // The entire fiber has completed.\n\n  function Fiber(util, supervisor, aff) {\n    // Monotonically increasing tick, increased on each asynchronous turn.\n    var runTick = 0;\n\n    // The current branch of the state machine.\n    var status = SUSPENDED;\n\n    // The current point of interest for the state machine branch.\n    var step      = aff;  // Successful step\n    var fail      = null; // Failure step\n    var interrupt = null; // Asynchronous interrupt\n\n    // Stack of continuations for the current fiber.\n    var bhead = null;\n    var btail = null;\n\n    // Stack of attempts and finalizers for error recovery. Every `Cons` is also\n    // tagged with current `interrupt` state. We use this to track which items\n    // should be ignored or evaluated as a result of a kill.\n    var attempts = null;\n\n    // A special state is needed for Bracket, because it cannot be killed. When\n    // we enter a bracket acquisition or finalizer, we increment the counter,\n    // and then decrement once complete.\n    var bracketCount = 0;\n\n    // Each join gets a new id so they can be revoked.\n    var joinId  = 0;\n    var joins   = null;\n    var rethrow = true;\n\n    // Each invocation of `run` requires a tick. When an asynchronous effect is\n    // resolved, we must check that the local tick coincides with the fiber\n    // tick before resuming. This prevents multiple async continuations from\n    // accidentally resuming the same fiber. A common example may be invoking\n    // the provided callback in `makeAff` more than once, but it may also be an\n    // async effect resuming after the fiber was already cancelled.\n    function run(localRunTick) {\n      var tmp, result, attempt;\n      while (true) {\n        tmp       = null;\n        result    = null;\n        attempt   = null;\n\n        switch (status) {\n        case STEP_BIND:\n          status = CONTINUE;\n          try {\n            step   = bhead(step);\n            if (btail === null) {\n              bhead = null;\n            } else {\n              bhead = btail._1;\n              btail = btail._2;\n            }\n          } catch (e) {\n            status = RETURN;\n            fail   = util.left(e);\n            step   = null;\n          }\n          break;\n\n        case STEP_RESULT:\n          if (util.isLeft(step)) {\n            status = RETURN;\n            fail   = step;\n            step   = null;\n          } else if (bhead === null) {\n            status = RETURN;\n          } else {\n            status = STEP_BIND;\n            step   = util.fromRight(step);\n          }\n          break;\n\n        case CONTINUE:\n          switch (step.tag) {\n          case BIND:\n            if (bhead) {\n              btail = new Aff(CONS, bhead, btail);\n            }\n            bhead  = step._2;\n            status = CONTINUE;\n            step   = step._1;\n            break;\n\n          case PURE:\n            if (bhead === null) {\n              status = RETURN;\n              step   = util.right(step._1);\n            } else {\n              status = STEP_BIND;\n              step   = step._1;\n            }\n            break;\n\n          case SYNC:\n            status = STEP_RESULT;\n            step   = runSync(util.left, util.right, step._1);\n            break;\n\n          case ASYNC:\n            status = PENDING;\n            step   = runAsync(util.left, step._1, function (result) {\n              return function () {\n                if (runTick !== localRunTick) {\n                  return;\n                }\n                runTick++;\n                Scheduler.enqueue(function () {\n                  // It's possible to interrupt the fiber between enqueuing and\n                  // resuming, so we need to check that the runTick is still\n                  // valid.\n                  if (runTick !== localRunTick + 1) {\n                    return;\n                  }\n                  status = STEP_RESULT;\n                  step   = result;\n                  run(runTick);\n                });\n              };\n            });\n            return;\n\n          case THROW:\n            status = RETURN;\n            fail   = util.left(step._1);\n            step   = null;\n            break;\n\n          // Enqueue the Catch so that we can call the error handler later on\n          // in case of an exception.\n          case CATCH:\n            if (bhead === null) {\n              attempts = new Aff(CONS, step, attempts, interrupt);\n            } else {\n              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n            }\n            bhead    = null;\n            btail    = null;\n            status   = CONTINUE;\n            step     = step._1;\n            break;\n\n          // Enqueue the Bracket so that we can call the appropriate handlers\n          // after resource acquisition.\n          case BRACKET:\n            bracketCount++;\n            if (bhead === null) {\n              attempts = new Aff(CONS, step, attempts, interrupt);\n            } else {\n              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n            }\n            bhead  = null;\n            btail  = null;\n            status = CONTINUE;\n            step   = step._1;\n            break;\n\n          case FORK:\n            status = STEP_RESULT;\n            tmp    = Fiber(util, supervisor, step._2);\n            if (supervisor) {\n              supervisor.register(tmp);\n            }\n            if (step._1) {\n              tmp.run();\n            }\n            step = util.right(tmp);\n            break;\n\n          case SEQ:\n            status = CONTINUE;\n            step   = sequential(util, supervisor, step._1);\n            break;\n          }\n          break;\n\n        case RETURN:\n          bhead = null;\n          btail = null;\n          // If the current stack has returned, and we have no other stacks to\n          // resume or finalizers to run, the fiber has halted and we can\n          // invoke all join callbacks. Otherwise we need to resume.\n          if (attempts === null) {\n            status = COMPLETED;\n            step   = interrupt || fail || step;\n          } else {\n            // The interrupt status for the enqueued item.\n            tmp      = attempts._3;\n            attempt  = attempts._1;\n            attempts = attempts._2;\n\n            switch (attempt.tag) {\n            // We cannot recover from an unmasked interrupt. Otherwise we should\n            // continue stepping, or run the exception handler if an exception\n            // was raised.\n            case CATCH:\n              // We should compare the interrupt status as well because we\n              // only want it to apply if there has been an interrupt since\n              // enqueuing the catch.\n              if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                status = RETURN;\n              } else if (fail) {\n                status = CONTINUE;\n                step   = attempt._2(util.fromLeft(fail));\n                fail   = null;\n              }\n              break;\n\n            // We cannot resume from an unmasked interrupt or exception.\n            case RESUME:\n              // As with Catch, we only want to ignore in the case of an\n              // interrupt since enqueing the item.\n              if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {\n                status = RETURN;\n              } else {\n                bhead  = attempt._1;\n                btail  = attempt._2;\n                status = STEP_BIND;\n                step   = util.fromRight(step);\n              }\n              break;\n\n            // If we have a bracket, we should enqueue the handlers,\n            // and continue with the success branch only if the fiber has\n            // not been interrupted. If the bracket acquisition failed, we\n            // should not run either.\n            case BRACKET:\n              bracketCount--;\n              if (fail === null) {\n                result   = util.fromRight(step);\n                // We need to enqueue the Release with the same interrupt\n                // status as the Bracket that is initiating it.\n                attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);\n                // We should only coninue as long as the interrupt status has not changed or\n                // we are currently within a non-interruptable finalizer.\n                if (interrupt === tmp || bracketCount > 0) {\n                  status = CONTINUE;\n                  step   = attempt._3(result);\n                }\n              }\n              break;\n\n            // Enqueue the appropriate handler. We increase the bracket count\n            // because it should not be cancelled.\n            case RELEASE:\n              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n              status   = CONTINUE;\n              // It has only been killed if the interrupt status has changed\n              // since we enqueued the item, and the bracket count is 0. If the\n              // bracket count is non-zero then we are in a masked state so it's\n              // impossible to be killed.\n              if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);\n              } else if (fail) {\n                step = attempt._1.failed(util.fromLeft(fail))(attempt._2);\n              } else {\n                step = attempt._1.completed(util.fromRight(step))(attempt._2);\n              }\n              fail = null;\n              bracketCount++;\n              break;\n\n            case FINALIZER:\n              bracketCount++;\n              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n              status   = CONTINUE;\n              step     = attempt._1;\n              break;\n\n            case FINALIZED:\n              bracketCount--;\n              status = RETURN;\n              step   = attempt._1;\n              fail   = attempt._2;\n              break;\n            }\n          }\n          break;\n\n        case COMPLETED:\n          for (var k in joins) {\n            if (joins.hasOwnProperty(k)) {\n              rethrow = rethrow && joins[k].rethrow;\n              runEff(joins[k].handler(step));\n            }\n          }\n          joins = null;\n          // If we have an interrupt and a fail, then the thread threw while\n          // running finalizers. This should always rethrow in a fresh stack.\n          if (interrupt && fail) {\n            setTimeout(function () {\n              throw util.fromLeft(fail);\n            }, 0);\n          // If we have an unhandled exception, and no other fiber has joined\n          // then we need to throw the exception in a fresh stack.\n          } else if (util.isLeft(step) && rethrow) {\n            setTimeout(function () {\n              // Guard on reathrow because a completely synchronous fiber can\n              // still have an observer which was added after-the-fact.\n              if (rethrow) {\n                throw util.fromLeft(step);\n              }\n            }, 0);\n          }\n          return;\n        case SUSPENDED:\n          status = CONTINUE;\n          break;\n        case PENDING: return;\n        }\n      }\n    }\n\n    function onComplete(join) {\n      return function () {\n        if (status === COMPLETED) {\n          rethrow = rethrow && join.rethrow;\n          join.handler(step)();\n          return function () {};\n        }\n\n        var jid    = joinId++;\n        joins      = joins || {};\n        joins[jid] = join;\n\n        return function() {\n          if (joins !== null) {\n            delete joins[jid];\n          }\n        };\n      };\n    }\n\n    function kill(error, cb) {\n      return function () {\n        if (status === COMPLETED) {\n          cb(util.right(void 0))();\n          return function () {};\n        }\n\n        var canceler = onComplete({\n          rethrow: false,\n          handler: function (/* unused */) {\n            return cb(util.right(void 0));\n          }\n        })();\n\n        switch (status) {\n        case SUSPENDED:\n          interrupt = util.left(error);\n          status    = COMPLETED;\n          step      = interrupt;\n          run(runTick);\n          break;\n        case PENDING:\n          if (interrupt === null) {\n            interrupt = util.left(error);\n          }\n          if (bracketCount === 0) {\n            if (status === PENDING) {\n              attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);\n            }\n            status   = RETURN;\n            step     = null;\n            fail     = null;\n            run(++runTick);\n          }\n          break;\n        default:\n          if (interrupt === null) {\n            interrupt = util.left(error);\n          }\n          if (bracketCount === 0) {\n            status = RETURN;\n            step   = null;\n            fail   = null;\n          }\n        }\n\n        return canceler;\n      };\n    }\n\n    function join(cb) {\n      return function () {\n        var canceler = onComplete({\n          rethrow: false,\n          handler: cb\n        })();\n        if (status === SUSPENDED) {\n          run(runTick);\n        }\n        return canceler;\n      };\n    }\n\n    return {\n      kill: kill,\n      join: join,\n      onComplete: onComplete,\n      isSuspended: function () {\n        return status === SUSPENDED;\n      },\n      run: function () {\n        if (status === SUSPENDED) {\n          if (!Scheduler.isDraining()) {\n            Scheduler.enqueue(function () {\n              run(runTick);\n            });\n          } else {\n            run(runTick);\n          }\n        }\n      }\n    };\n  }\n\n  function runPar(util, supervisor, par, cb) {\n    // Table of all forked fibers.\n    var fiberId   = 0;\n    var fibers    = {};\n\n    // Table of currently running cancelers, as a product of `Alt` behavior.\n    var killId    = 0;\n    var kills     = {};\n\n    // Error used for early cancelation on Alt branches.\n    var early     = new Error(\"[ParAff] Early exit\");\n\n    // Error used to kill the entire tree.\n    var interrupt = null;\n\n    // The root pointer of the tree.\n    var root      = EMPTY;\n\n    // Walks a tree, invoking all the cancelers. Returns the table of pending\n    // cancellation fibers.\n    function kill(error, par, cb) {\n      var step  = par;\n      var head  = null;\n      var tail  = null;\n      var count = 0;\n      var kills = {};\n      var tmp, kid;\n\n      loop: while (true) {\n        tmp = null;\n\n        switch (step.tag) {\n        case FORKED:\n          if (step._3 === EMPTY) {\n            tmp = fibers[step._1];\n            kills[count++] = tmp.kill(error, function (result) {\n              return function () {\n                count--;\n                if (count === 0) {\n                  cb(result)();\n                }\n              };\n            });\n          }\n          // Terminal case.\n          if (head === null) {\n            break loop;\n          }\n          // Go down the right side of the tree.\n          step = head._2;\n          if (tail === null) {\n            head = null;\n          } else {\n            head = tail._1;\n            tail = tail._2;\n          }\n          break;\n        case MAP:\n          step = step._2;\n          break;\n        case APPLY:\n        case ALT:\n          if (head) {\n            tail = new Aff(CONS, head, tail);\n          }\n          head = step;\n          step = step._1;\n          break;\n        }\n      }\n\n      if (count === 0) {\n        cb(util.right(void 0))();\n      } else {\n        // Run the cancelation effects. We alias `count` because it's mutable.\n        kid = 0;\n        tmp = count;\n        for (; kid < tmp; kid++) {\n          kills[kid] = kills[kid]();\n        }\n      }\n\n      return kills;\n    }\n\n    // When a fiber resolves, we need to bubble back up the tree with the\n    // result, computing the applicative nodes.\n    function join(result, head, tail) {\n      var fail, step, lhs, rhs, tmp, kid;\n\n      if (util.isLeft(result)) {\n        fail = result;\n        step = null;\n      } else {\n        step = result;\n        fail = null;\n      }\n\n      loop: while (true) {\n        lhs = null;\n        rhs = null;\n        tmp = null;\n        kid = null;\n\n        // We should never continue if the entire tree has been interrupted.\n        if (interrupt !== null) {\n          return;\n        }\n\n        // We've made it all the way to the root of the tree, which means\n        // the tree has fully evaluated.\n        if (head === null) {\n          cb(fail || step)();\n          return;\n        }\n\n        // The tree has already been computed, so we shouldn't try to do it\n        // again. This should never happen.\n        // TODO: Remove this?\n        if (head._3 !== EMPTY) {\n          return;\n        }\n\n        switch (head.tag) {\n        case MAP:\n          if (fail === null) {\n            head._3 = util.right(head._1(util.fromRight(step)));\n            step    = head._3;\n          } else {\n            head._3 = fail;\n          }\n          break;\n        case APPLY:\n          lhs = head._1._3;\n          rhs = head._2._3;\n          // If we have a failure we should kill the other side because we\n          // can't possible yield a result anymore.\n          if (fail) {\n            head._3 = fail;\n            tmp     = true;\n            kid     = killId++;\n\n            kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {\n              return function () {\n                delete kills[kid];\n                if (tmp) {\n                  tmp = false;\n                } else if (tail === null) {\n                  join(fail, null, null);\n                } else {\n                  join(fail, tail._1, tail._2);\n                }\n              };\n            });\n\n            if (tmp) {\n              tmp = false;\n              return;\n            }\n          } else if (lhs === EMPTY || rhs === EMPTY) {\n            // We can only proceed if both sides have resolved.\n            return;\n          } else {\n            step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));\n            head._3 = step;\n          }\n          break;\n        case ALT:\n          lhs = head._1._3;\n          rhs = head._2._3;\n          // We can only proceed if both have resolved or we have a success\n          if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {\n            return;\n          }\n          // If both sides resolve with an error, we should continue with the\n          // first error\n          if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {\n            fail    = step === lhs ? rhs : lhs;\n            step    = null;\n            head._3 = fail;\n          } else {\n            head._3 = step;\n            tmp     = true;\n            kid     = killId++;\n            // Once a side has resolved, we need to cancel the side that is still\n            // pending before we can continue.\n            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {\n              return function () {\n                delete kills[kid];\n                if (tmp) {\n                  tmp = false;\n                } else if (tail === null) {\n                  join(step, null, null);\n                } else {\n                  join(step, tail._1, tail._2);\n                }\n              };\n            });\n\n            if (tmp) {\n              tmp = false;\n              return;\n            }\n          }\n          break;\n        }\n\n        if (tail === null) {\n          head = null;\n        } else {\n          head = tail._1;\n          tail = tail._2;\n        }\n      }\n    }\n\n    function resolve(fiber) {\n      return function (result) {\n        return function () {\n          delete fibers[fiber._1];\n          fiber._3 = result;\n          join(result, fiber._2._1, fiber._2._2);\n        };\n      };\n    }\n\n    // Walks the applicative tree, substituting non-applicative nodes with\n    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot\n    // as a mutable slot for memoization. In an unresolved state, the `_3`\n    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk\n    // the left side first, because both operations are left-associative. As\n    // we `RETURN` from those branches, we then walk the right side.\n    function run() {\n      var status = CONTINUE;\n      var step   = par;\n      var head   = null;\n      var tail   = null;\n      var tmp, fid;\n\n      loop: while (true) {\n        tmp = null;\n        fid = null;\n\n        switch (status) {\n        case CONTINUE:\n          switch (step.tag) {\n          case MAP:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(MAP, step._1, EMPTY, EMPTY);\n            step = step._2;\n            break;\n          case APPLY:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(APPLY, EMPTY, step._2, EMPTY);\n            step = step._1;\n            break;\n          case ALT:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(ALT, EMPTY, step._2, EMPTY);\n            step = step._1;\n            break;\n          default:\n            // When we hit a leaf value, we suspend the stack in the `FORKED`.\n            // When the fiber resolves, it can bubble back up the tree.\n            fid    = fiberId++;\n            status = RETURN;\n            tmp    = step;\n            step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);\n            tmp    = Fiber(util, supervisor, tmp);\n            tmp.onComplete({\n              rethrow: false,\n              handler: resolve(step)\n            })();\n            fibers[fid] = tmp;\n            if (supervisor) {\n              supervisor.register(tmp);\n            }\n          }\n          break;\n        case RETURN:\n          // Terminal case, we are back at the root.\n          if (head === null) {\n            break loop;\n          }\n          // If we are done with the right side, we need to continue down the\n          // left. Otherwise we should continue up the stack.\n          if (head._1 === EMPTY) {\n            head._1 = step;\n            status  = CONTINUE;\n            step    = head._2;\n            head._2 = EMPTY;\n          } else {\n            head._2 = step;\n            step    = head;\n            if (tail === null) {\n              head  = null;\n            } else {\n              head  = tail._1;\n              tail  = tail._2;\n            }\n          }\n        }\n      }\n\n      // Keep a reference to the tree root so it can be cancelled.\n      root = step;\n\n      for (fid = 0; fid < fiberId; fid++) {\n        fibers[fid].run();\n      }\n    }\n\n    // Cancels the entire tree. If there are already subtrees being canceled,\n    // we need to first cancel those joins. We will then add fresh joins for\n    // all pending branches including those that were in the process of being\n    // canceled.\n    function cancel(error, cb) {\n      interrupt = util.left(error);\n      var innerKills;\n      for (var kid in kills) {\n        if (kills.hasOwnProperty(kid)) {\n          innerKills = kills[kid];\n          for (kid in innerKills) {\n            if (innerKills.hasOwnProperty(kid)) {\n              innerKills[kid]();\n            }\n          }\n        }\n      }\n\n      kills = null;\n      var newKills = kill(error, root, cb);\n\n      return function (killError) {\n        return new Aff(ASYNC, function (killCb) {\n          return function () {\n            for (var kid in newKills) {\n              if (newKills.hasOwnProperty(kid)) {\n                newKills[kid]();\n              }\n            }\n            return nonCanceler;\n          };\n        });\n      };\n    }\n\n    run();\n\n    return function (killError) {\n      return new Aff(ASYNC, function (killCb) {\n        return function () {\n          return cancel(killError, killCb);\n        };\n      });\n    };\n  }\n\n  function sequential(util, supervisor, par) {\n    return new Aff(ASYNC, function (cb) {\n      return function () {\n        return runPar(util, supervisor, par, cb);\n      };\n    });\n  }\n\n  Aff.EMPTY       = EMPTY;\n  Aff.Pure        = AffCtr(PURE);\n  Aff.Throw       = AffCtr(THROW);\n  Aff.Catch       = AffCtr(CATCH);\n  Aff.Sync        = AffCtr(SYNC);\n  Aff.Async       = AffCtr(ASYNC);\n  Aff.Bind        = AffCtr(BIND);\n  Aff.Bracket     = AffCtr(BRACKET);\n  Aff.Fork        = AffCtr(FORK);\n  Aff.Seq         = AffCtr(SEQ);\n  Aff.ParMap      = AffCtr(MAP);\n  Aff.ParApply    = AffCtr(APPLY);\n  Aff.ParAlt      = AffCtr(ALT);\n  Aff.Fiber       = Fiber;\n  Aff.Supervisor  = Supervisor;\n  Aff.Scheduler   = Scheduler;\n  Aff.nonCanceler = nonCanceler;\n\n  return Aff;\n}();\n\nexport const _pure = Aff.Pure;\nexport const _throwError = Aff.Throw;\n\nexport function _catchError(aff) {\n  return function (k) {\n    return Aff.Catch(aff, k);\n  };\n}\n\nexport function _map(f) {\n  return function (aff) {\n    if (aff.tag === Aff.Pure.tag) {\n      return Aff.Pure(f(aff._1));\n    } else {\n      return Aff.Bind(aff, function (value) {\n        return Aff.Pure(f(value));\n      });\n    }\n  };\n}\n\nexport function _bind(aff) {\n  return function (k) {\n    return Aff.Bind(aff, k);\n  };\n}\n\nexport function _fork(immediate) {\n  return function (aff) {\n    return Aff.Fork(immediate, aff);\n  };\n}\n\nexport const _liftEffect = Aff.Sync;\n\nexport function _parAffMap(f) {\n  return function (aff) {\n    return Aff.ParMap(f, aff);\n  };\n}\n\nexport function _parAffApply(aff1) {\n  return function (aff2) {\n    return Aff.ParApply(aff1, aff2);\n  };\n}\n\nexport function _parAffAlt(aff1) {\n  return function (aff2) {\n    return Aff.ParAlt(aff1, aff2);\n  };\n}\n\nexport const makeAff = Aff.Async;\n\nexport function generalBracket(acquire) {\n  return function (options) {\n    return function (k) {\n      return Aff.Bracket(acquire, options, k);\n    };\n  };\n}\n\nexport function _makeFiber(util, aff) {\n  return function () {\n    return Aff.Fiber(util, null, aff);\n  };\n}\n\nexport function _makeSupervisedFiber(util, aff) {\n  return function () {\n    var supervisor = Aff.Supervisor(util);\n    return {\n      fiber: Aff.Fiber(util, supervisor, aff),\n      supervisor: supervisor\n    };\n  };\n}\n\nexport function _killAll(error, supervisor, cb) {\n  return supervisor.killAll(error, cb);\n}\n\nexport const _delay = function () {\n  function setDelay(n, k) {\n    if (n === 0 && typeof setImmediate !== \"undefined\") {\n      return setImmediate(k);\n    } else {\n      return setTimeout(k, n);\n    }\n  }\n\n  function clearDelay(n, t) {\n    if (n === 0 && typeof clearImmediate !== \"undefined\") {\n      return clearImmediate(t);\n    } else {\n      return clearTimeout(t);\n    }\n  }\n\n  return function (right, ms) {\n    return Aff.Async(function (cb) {\n      return function () {\n        var timer = setDelay(ms, cb(right()));\n        return function () {\n          return Aff.Sync(function () {\n            return right(clearDelay(ms, timer));\n          });\n        };\n      };\n    });\n  };\n}();\n\nexport const _sequential = Aff.Seq;\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar whenM = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var when = Control_Applicative.when(dictMonad.Applicative0());\n    return function (mb) {\n        return function (m) {\n            return bind(mb)(function (b) {\n                return when(b)(m);\n            });\n        };\n    };\n};\nvar unlessM = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var unless = Control_Applicative.unless(dictMonad.Applicative0());\n    return function (mb) {\n        return function (m) {\n            return bind(mb)(function (b) {\n                return unless(b)(m);\n            });\n        };\n    };\n};\nvar monadProxy = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeProxy;\n    },\n    Bind1: function () {\n        return Control_Bind.bindProxy;\n    }\n};\nvar monadFn = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeFn;\n    },\n    Bind1: function () {\n        return Control_Bind.bindFn;\n    }\n};\nvar monadArray = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeArray;\n    },\n    Bind1: function () {\n        return Control_Bind.bindArray;\n    }\n};\nvar liftM1 = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (a) {\n            return bind(a)(function (a$prime) {\n                return pure(f(a$prime));\n            });\n        };\n    };\n};\nvar ap = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (a) {\n            return bind(f)(function (f$prime) {\n                return bind(a)(function (a$prime) {\n                    return pure(f$prime(a$prime));\n                });\n            });\n        };\n    };\n};\nexport {\n    liftM1,\n    whenM,\n    unlessM,\n    ap,\n    monadFn,\n    monadArray,\n    monadProxy\n};\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    bind,\n    ifM,\n    join\n} from \"../Control.Bind/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar Left = /* #__PURE__ */ (function () {\n    function Left(value0) {\n        this.value0 = value0;\n    };\n    Left.create = function (value0) {\n        return new Left(value0);\n    };\n    return Left;\n})();\nvar Right = /* #__PURE__ */ (function () {\n    function Right(value0) {\n        this.value0 = value0;\n    };\n    Right.create = function (value0) {\n        return new Right(value0);\n    };\n    return Right;\n})();\nvar showEither = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                if (v instanceof Left) {\n                    return \"(Left \" + (show(v.value0) + \")\");\n                };\n                if (v instanceof Right) {\n                    return \"(Right \" + (show1(v.value0) + \")\");\n                };\n                throw new Error(\"Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar note$prime = function (f) {\n    return Data_Maybe[\"maybe$prime\"](function ($138) {\n        return Left.create(f($138));\n    })(Right.create);\n};\nvar note = function (a) {\n    return Data_Maybe.maybe(new Left(a))(Right.create);\n};\nvar genericEither = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return new Left(x.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new Right(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof Left) {\n            return new Data_Generic_Rep.Inl(x.value0);\n        };\n        if (x instanceof Right) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): \" + [ x.constructor.name ]);\n    }\n};\nvar functorEither = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Left) {\n                return new Left(m.value0);\n            };\n            if (m instanceof Right) {\n                return new Right(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorEither);\nvar invariantEither = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorEither)\n};\nvar fromRight$prime = function (v) {\n    return function (v1) {\n        if (v1 instanceof Right) {\n            return v1.value0;\n        };\n        return v(Data_Unit.unit);\n    };\n};\nvar fromRight = function (v) {\n    return function (v1) {\n        if (v1 instanceof Right) {\n            return v1.value0;\n        };\n        return v;\n    };\n};\nvar fromLeft$prime = function (v) {\n    return function (v1) {\n        if (v1 instanceof Left) {\n            return v1.value0;\n        };\n        return v(Data_Unit.unit);\n    };\n};\nvar fromLeft = function (v) {\n    return function (v1) {\n        if (v1 instanceof Left) {\n            return v1.value0;\n        };\n        return v;\n    };\n};\nvar extendEither = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Left) {\n                return new Left(v1.value0);\n            };\n            return new Right(v(v1));\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nvar eqEither = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(dictEq1);\n        return {\n            eq: function (x) {\n                return function (y) {\n                    if (x instanceof Left && y instanceof Left) {\n                        return eq(x.value0)(y.value0);\n                    };\n                    if (x instanceof Right && y instanceof Right) {\n                        return eq1(x.value0)(y.value0);\n                    };\n                    return false;\n                };\n            }\n        };\n    };\n};\nvar ordEither = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqEither1 = eqEither(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare(dictOrd1);\n        var eqEither2 = eqEither1(dictOrd1.Eq0());\n        return {\n            compare: function (x) {\n                return function (y) {\n                    if (x instanceof Left && y instanceof Left) {\n                        return compare(x.value0)(y.value0);\n                    };\n                    if (x instanceof Left) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (y instanceof Left) {\n                        return Data_Ordering.GT.value;\n                    };\n                    if (x instanceof Right && y instanceof Right) {\n                        return compare1(x.value0)(y.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n                };\n            },\n            Eq0: function () {\n                return eqEither2;\n            }\n        };\n    };\n};\nvar eq1Either = function (dictEq) {\n    var eqEither1 = eqEither(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqEither1(dictEq1));\n        }\n    };\n};\nvar ord1Either = function (dictOrd) {\n    var ordEither1 = ordEither(dictOrd);\n    var eq1Either1 = eq1Either(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordEither1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Either1;\n        }\n    };\n};\nvar either = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Left) {\n                return v(v2.value0);\n            };\n            if (v2 instanceof Right) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar hush = /* #__PURE__ */ (function () {\n    return either(Data_Function[\"const\"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);\n})();\nvar isLeft = /* #__PURE__ */ either(/* #__PURE__ */ Data_Function[\"const\"](true))(/* #__PURE__ */ Data_Function[\"const\"](false));\nvar isRight = /* #__PURE__ */ either(/* #__PURE__ */ Data_Function[\"const\"](false))(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar choose = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var map1 = Data_Functor.map(dictAlt.Functor0());\n    return function (a) {\n        return function (b) {\n            return alt(map1(Left.create)(a))(map1(Right.create)(b));\n        };\n    };\n};\nvar boundedEither = function (dictBounded) {\n    var bottom = Data_Bounded.bottom(dictBounded);\n    var ordEither1 = ordEither(dictBounded.Ord0());\n    return function (dictBounded1) {\n        var ordEither2 = ordEither1(dictBounded1.Ord0());\n        return {\n            top: new Right(Data_Bounded.top(dictBounded1)),\n            bottom: new Left(bottom),\n            Ord0: function () {\n                return ordEither2;\n            }\n        };\n    };\n};\nvar blush = /* #__PURE__ */ (function () {\n    return either(Data_Maybe.Just.create)(Data_Function[\"const\"](Data_Maybe.Nothing.value));\n})();\nvar applyEither = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Left) {\n                return new Left(v.value0);\n            };\n            if (v instanceof Right) {\n                return map(v.value0)(v1);\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyEither);\nvar bindEither = {\n    bind: /* #__PURE__ */ either(function (e) {\n        return function (v) {\n            return new Left(e);\n        };\n    })(function (a) {\n        return function (f) {\n            return f(a);\n        };\n    }),\n    Apply0: function () {\n        return applyEither;\n    }\n};\nvar semigroupEither = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        append: function (x) {\n            return function (y) {\n                return apply(map(append1)(x))(y);\n            };\n        }\n    };\n};\nvar applicativeEither = /* #__PURE__ */ (function () {\n    return {\n        pure: Right.create,\n        Apply0: function () {\n            return applyEither;\n        }\n    };\n})();\nvar monadEither = {\n    Applicative0: function () {\n        return applicativeEither;\n    },\n    Bind1: function () {\n        return bindEither;\n    }\n};\nvar altEither = {\n    alt: function (v) {\n        return function (v1) {\n            if (v instanceof Left) {\n                return v1;\n            };\n            return v;\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nexport {\n    Left,\n    Right,\n    either,\n    choose,\n    isLeft,\n    isRight,\n    fromLeft,\n    fromLeft$prime,\n    fromRight,\n    fromRight$prime,\n    note,\n    note$prime,\n    hush,\n    blush,\n    functorEither,\n    genericEither,\n    invariantEither,\n    applyEither,\n    applicativeEither,\n    altEither,\n    bindEither,\n    monadEither,\n    extendEither,\n    showEither,\n    eqEither,\n    eq1Either,\n    ordEither,\n    ord1Either,\n    boundedEither,\n    semigroupEither\n};\n","export const pureE = function (a) {\n  return function () {\n    return a;\n  };\n};\n\nexport const bindE = function (a) {\n  return function (f) {\n    return function () {\n      return f(a())();\n    };\n  };\n};\n\nexport const untilE = function (f) {\n  return function () {\n    while (!f());\n  };\n};\n\nexport const whileE = function (f) {\n  return function (a) {\n    return function () {\n      while (f()) {\n        a();\n      }\n    };\n  };\n};\n\nexport const forE = function (lo) {\n  return function (hi) {\n    return function (f) {\n      return function () {\n        for (var i = lo; i < hi; i++) {\n          f(i)();\n        }\n      };\n    };\n  };\n};\n\nexport const foreachE = function (as) {\n  return function (f) {\n    return function () {\n      for (var i = 0, l = as.length; i < l; i++) {\n        f(as[i])();\n      }\n    };\n  };\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar monadEffect = {\n    Applicative0: function () {\n        return applicativeEffect;\n    },\n    Bind1: function () {\n        return bindEffect;\n    }\n};\nvar bindEffect = {\n    bind: $foreign.bindE,\n    Apply0: function () {\n        return $lazy_applyEffect(0);\n    }\n};\nvar applicativeEffect = {\n    pure: $foreign.pureE,\n    Apply0: function () {\n        return $lazy_applyEffect(0);\n    }\n};\nvar $lazy_functorEffect = /* #__PURE__ */ $runtime_lazy(\"functorEffect\", \"Effect\", function () {\n    return {\n        map: Control_Applicative.liftA1(applicativeEffect)\n    };\n});\nvar $lazy_applyEffect = /* #__PURE__ */ $runtime_lazy(\"applyEffect\", \"Effect\", function () {\n    return {\n        apply: Control_Monad.ap(monadEffect),\n        Functor0: function () {\n            return $lazy_functorEffect(0);\n        }\n    };\n});\nvar functorEffect = /* #__PURE__ */ $lazy_functorEffect(20);\nvar applyEffect = /* #__PURE__ */ $lazy_applyEffect(23);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyEffect);\nvar semigroupEffect = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidEffect = function (dictMonoid) {\n    var semigroupEffect1 = semigroupEffect(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.pureE(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupEffect1;\n        }\n    };\n};\nexport {\n    untilE,\n    whileE,\n    forE,\n    foreachE\n} from \"./foreign.js\";\nexport {\n    functorEffect,\n    applyEffect,\n    applicativeEffect,\n    bindEffect,\n    monadEffect,\n    semigroupEffect,\n    monoidEffect\n};\n","export function showErrorImpl(err) {\n  return err.stack || err.toString();\n}\n\nexport function error(msg) {\n  return new Error(msg);\n}\n\nexport function message(e) {\n  return e.message;\n}\n\nexport function name(e) {\n  return e.name || \"Error\";\n}\n\nexport function stackImpl(just) {\n  return function (nothing) {\n    return function (e) {\n      return e.stack ? just(e.stack) : nothing;\n    };\n  };\n}\n\nexport function throwException(e) {\n  return function () {\n    throw e;\n  };\n}\n\nexport function catchException(c) {\n  return function (t) {\n    return function () {\n      try {\n        return t();\n      } catch (e) {\n        if (e instanceof Error || Object.prototype.toString.call(e) === \"[object Error]\") {\n          return c(e)();\n        } else {\n          return c(new Error(e.toString()))();\n        }\n      }\n    };\n  };\n}\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar $$try = function (action) {\n    return $foreign.catchException(function ($3) {\n        return pure(Data_Either.Left.create($3));\n    })(map(Data_Either.Right.create)(action));\n};\nvar $$throw = function ($4) {\n    return $foreign.throwException($foreign.error($4));\n};\nvar stack = /* #__PURE__ */ (function () {\n    return $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar showError = {\n    show: $foreign.showErrorImpl\n};\nexport {\n    error,\n    message,\n    name,\n    throwException,\n    catchException\n} from \"./foreign.js\";\nexport {\n    stack,\n    $$throw as throw,\n    $$try as try,\n    showError\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar throwError = function (dict) {\n    return dict.throwError;\n};\nvar monadThrowMaybe = /* #__PURE__ */ (function () {\n    return {\n        throwError: Data_Function[\"const\"](Data_Maybe.Nothing.value),\n        Monad0: function () {\n            return Data_Maybe.monadMaybe;\n        }\n    };\n})();\nvar monadThrowEither = /* #__PURE__ */ (function () {\n    return {\n        throwError: Data_Either.Left.create,\n        Monad0: function () {\n            return Data_Either.monadEither;\n        }\n    };\n})();\nvar monadThrowEffect = {\n    throwError: Effect_Exception.throwException,\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar monadErrorMaybe = {\n    catchError: function (v) {\n        return function (v1) {\n            if (v instanceof Data_Maybe.Nothing) {\n                return v1(Data_Unit.unit);\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return new Data_Maybe.Just(v.value0);\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 81, column 33): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    MonadThrow0: function () {\n        return monadThrowMaybe;\n    }\n};\nvar monadErrorEither = {\n    catchError: function (v) {\n        return function (v1) {\n            if (v instanceof Data_Either.Left) {\n                return v1(v.value0);\n            };\n            if (v instanceof Data_Either.Right) {\n                return new Data_Either.Right(v.value0);\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    MonadThrow0: function () {\n        return monadThrowEither;\n    }\n};\nvar monadErrorEffect = {\n    catchError: /* #__PURE__ */ Data_Function.flip(Effect_Exception.catchException),\n    MonadThrow0: function () {\n        return monadThrowEffect;\n    }\n};\nvar liftMaybe = function (dictMonadThrow) {\n    var throwError1 = throwError(dictMonadThrow);\n    var pure = Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0());\n    return function (error) {\n        return Data_Maybe.maybe(throwError1(error))(pure);\n    };\n};\nvar liftEither = function (dictMonadThrow) {\n    return Data_Either.either(throwError(dictMonadThrow))(Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0()));\n};\nvar catchError = function (dict) {\n    return dict.catchError;\n};\nvar catchJust = function (dictMonadError) {\n    var throwError1 = throwError(dictMonadError.MonadThrow0());\n    var catchError1 = catchError(dictMonadError);\n    return function (p) {\n        return function (act) {\n            return function (handler) {\n                var handle = function (e) {\n                    var v = p(e);\n                    if (v instanceof Data_Maybe.Nothing) {\n                        return throwError1(e);\n                    };\n                    if (v instanceof Data_Maybe.Just) {\n                        return handler(v.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): \" + [ v.constructor.name ]);\n                };\n                return catchError1(act)(handle);\n            };\n        };\n    };\n};\nvar $$try = function (dictMonadError) {\n    var catchError1 = catchError(dictMonadError);\n    var Monad0 = (dictMonadError.MonadThrow0()).Monad0();\n    var map = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    return function (a) {\n        return catchError1(map(Data_Either.Right.create)(a))(function ($52) {\n            return pure(Data_Either.Left.create($52));\n        });\n    };\n};\nvar withResource = function (dictMonadError) {\n    var MonadThrow0 = dictMonadError.MonadThrow0();\n    var Monad0 = MonadThrow0.Monad0();\n    var Bind1 = Monad0.Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var try1 = $$try(dictMonadError);\n    var discard1 = discard(Bind1);\n    var throwError1 = throwError(MonadThrow0);\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    return function (acquire) {\n        return function (release) {\n            return function (kleisli) {\n                return bind(acquire)(function (resource) {\n                    return bind(try1(kleisli(resource)))(function (result) {\n                        return discard1(release(resource))(function () {\n                            return Data_Either.either(throwError1)(pure)(result);\n                        });\n                    });\n                });\n            };\n        };\n    };\n};\nexport {\n    catchError,\n    throwError,\n    catchJust,\n    $$try as try,\n    withResource,\n    liftMaybe,\n    liftEither,\n    monadThrowEither,\n    monadErrorEither,\n    monadThrowMaybe,\n    monadErrorMaybe,\n    monadThrowEffect,\n    monadErrorEffect\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar Identity = function (x) {\n    return x;\n};\nvar showIdentity = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            return \"(Identity \" + (show(v) + \")\");\n        }\n    };\n};\nvar semiringIdentity = function (dictSemiring) {\n    return dictSemiring;\n};\nvar semigroupIdentity = function (dictSemigroup) {\n    return dictSemigroup;\n};\nvar ringIdentity = function (dictRing) {\n    return dictRing;\n};\nvar ordIdentity = function (dictOrd) {\n    return dictOrd;\n};\nvar newtypeIdentity = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monoidIdentity = function (dictMonoid) {\n    return dictMonoid;\n};\nvar lazyIdentity = function (dictLazy) {\n    return dictLazy;\n};\nvar heytingAlgebraIdentity = function (dictHeytingAlgebra) {\n    return dictHeytingAlgebra;\n};\nvar functorIdentity = {\n    map: function (f) {\n        return function (m) {\n            return f(m);\n        };\n    }\n};\nvar invariantIdentity = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorIdentity)\n};\nvar extendIdentity = {\n    extend: function (f) {\n        return function (m) {\n            return f(m);\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nvar euclideanRingIdentity = function (dictEuclideanRing) {\n    return dictEuclideanRing;\n};\nvar eqIdentity = function (dictEq) {\n    return dictEq;\n};\nvar eq1Identity = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqIdentity(dictEq));\n    }\n};\nvar ord1Identity = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordIdentity(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Identity;\n    }\n};\nvar comonadIdentity = {\n    extract: function (v) {\n        return v;\n    },\n    Extend0: function () {\n        return extendIdentity;\n    }\n};\nvar commutativeRingIdentity = function (dictCommutativeRing) {\n    return dictCommutativeRing;\n};\nvar boundedIdentity = function (dictBounded) {\n    return dictBounded;\n};\nvar booleanAlgebraIdentity = function (dictBooleanAlgebra) {\n    return dictBooleanAlgebra;\n};\nvar applyIdentity = {\n    apply: function (v) {\n        return function (v1) {\n            return v(v1);\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nvar bindIdentity = {\n    bind: function (v) {\n        return function (f) {\n            return f(v);\n        };\n    },\n    Apply0: function () {\n        return applyIdentity;\n    }\n};\nvar applicativeIdentity = {\n    pure: Identity,\n    Apply0: function () {\n        return applyIdentity;\n    }\n};\nvar monadIdentity = {\n    Applicative0: function () {\n        return applicativeIdentity;\n    },\n    Bind1: function () {\n        return bindIdentity;\n    }\n};\nvar altIdentity = {\n    alt: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nexport {\n    Identity,\n    newtypeIdentity,\n    eqIdentity,\n    ordIdentity,\n    boundedIdentity,\n    heytingAlgebraIdentity,\n    booleanAlgebraIdentity,\n    semigroupIdentity,\n    monoidIdentity,\n    semiringIdentity,\n    euclideanRingIdentity,\n    ringIdentity,\n    commutativeRingIdentity,\n    lazyIdentity,\n    showIdentity,\n    eq1Identity,\n    ord1Identity,\n    functorIdentity,\n    invariantIdentity,\n    altIdentity,\n    applyIdentity,\n    applicativeIdentity,\n    bindIdentity,\n    monadIdentity,\n    extendIdentity,\n    comonadIdentity\n};\n","export const _new = function (val) {\n  return function () {\n    return { value: val };\n  };\n};\n\nexport const newWithSelf = function (f) {\n  return function () {\n    var ref = { value: null };\n    ref.value = f(ref);\n    return ref;\n  };\n};\n\nexport const read = function (ref) {\n  return function () {\n    return ref.value;\n  };\n};\n\nexport const modifyImpl = function (f) {\n  return function (ref) {\n    return function () {\n      var t = f(ref.value);\n      ref.value = t.state;\n      return t.value;\n    };\n  };\n};\n\nexport const write = function (val) {\n  return function (ref) {\n    return function () {\n      ref.value = val;\n    };\n  };\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar $$new = $foreign[\"_new\"];\nvar modify$prime = $foreign.modifyImpl;\nvar modify = function (f) {\n    return modify$prime(function (s) {\n        var s$prime = f(s);\n        return {\n            state: s$prime,\n            value: s$prime\n        };\n    });\n};\nvar modify_ = function (f) {\n    return function (s) {\n        return $$void(modify(f)(s));\n    };\n};\nexport {\n    newWithSelf,\n    read,\n    write\n} from \"./foreign.js\";\nexport {\n    $$new as new,\n    modify$prime,\n    modify,\n    modify_\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect.bindEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar Loop = /* #__PURE__ */ (function () {\n    function Loop(value0) {\n        this.value0 = value0;\n    };\n    Loop.create = function (value0) {\n        return new Loop(value0);\n    };\n    return Loop;\n})();\nvar Done = /* #__PURE__ */ (function () {\n    function Done(value0) {\n        this.value0 = value0;\n    };\n    Done.create = function (value0) {\n        return new Done(value0);\n    };\n    return Done;\n})();\nvar tailRecM = function (dict) {\n    return dict.tailRecM;\n};\nvar tailRecM2 = function (dictMonadRec) {\n    var tailRecM1 = tailRecM(dictMonadRec);\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return tailRecM1(function (o) {\n                    return f(o.a)(o.b);\n                })({\n                    a: a,\n                    b: b\n                });\n            };\n        };\n    };\n};\nvar tailRecM3 = function (dictMonadRec) {\n    var tailRecM1 = tailRecM(dictMonadRec);\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return tailRecM1(function (o) {\n                        return f(o.a)(o.b)(o.c);\n                    })({\n                        a: a,\n                        b: b,\n                        c: c\n                    });\n                };\n            };\n        };\n    };\n};\nvar untilJust = function (dictMonadRec) {\n    var tailRecM1 = tailRecM(dictMonadRec);\n    var mapFlipped = Data_Functor.mapFlipped((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0());\n    return function (m) {\n        return tailRecM1(function (v) {\n            return mapFlipped(m)(function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return new Loop(Data_Unit.unit);\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return new Done(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 179, column 43 - line 181, column 19): \" + [ v1.constructor.name ]);\n            });\n        })(Data_Unit.unit);\n    };\n};\nvar whileJust = function (dictMonoid) {\n    var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    return function (dictMonadRec) {\n        var tailRecM1 = tailRecM(dictMonadRec);\n        var mapFlipped = Data_Functor.mapFlipped((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0());\n        return function (m) {\n            return tailRecM1(function (v) {\n                return mapFlipped(m)(function (v1) {\n                    if (v1 instanceof Data_Maybe.Nothing) {\n                        return new Done(v);\n                    };\n                    if (v1 instanceof Data_Maybe.Just) {\n                        return new Loop(append(v)(v1.value0));\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 172, column 45 - line 174, column 26): \" + [ v1.constructor.name ]);\n                });\n            })(mempty);\n        };\n    };\n};\nvar tailRec = function (f) {\n    var go = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Loop) {\n                $copy_v = f(v.value0);\n                return;\n            };\n            if (v instanceof Done) {\n                $tco_done = true;\n                return v.value0;\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 103, column 3 - line 103, column 25): \" + [ v.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    return function ($85) {\n        return go(f($85));\n    };\n};\nvar tailRec2 = function (f) {\n    return function (a) {\n        return function (b) {\n            return tailRec(function (o) {\n                return f(o.a)(o.b);\n            })({\n                a: a,\n                b: b\n            });\n        };\n    };\n};\nvar tailRec3 = function (f) {\n    return function (a) {\n        return function (b) {\n            return function (c) {\n                return tailRec(function (o) {\n                    return f(o.a)(o.b)(o.c);\n                })({\n                    a: a,\n                    b: b,\n                    c: c\n                });\n            };\n        };\n    };\n};\nvar monadRecMaybe = {\n    tailRecM: function (f) {\n        return function (a0) {\n            var g = function (v) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Done(Data_Maybe.Nothing.value);\n                };\n                if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {\n                    return new Loop(f(v.value0.value0));\n                };\n                if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {\n                    return new Done(new Data_Maybe.Just(v.value0.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 153, column 7 - line 153, column 31): \" + [ v.constructor.name ]);\n            };\n            return tailRec(g)(f(a0));\n        };\n    },\n    Monad0: function () {\n        return Data_Maybe.monadMaybe;\n    }\n};\nvar monadRecIdentity = {\n    tailRecM: function (f) {\n        var runIdentity = function (v) {\n            return v;\n        };\n        var $86 = tailRec(function ($88) {\n            return runIdentity(f($88));\n        });\n        return function ($87) {\n            return Data_Identity.Identity($86($87));\n        };\n    },\n    Monad0: function () {\n        return Data_Identity.monadIdentity;\n    }\n};\nvar monadRecFunction = {\n    tailRecM: function (f) {\n        return function (a0) {\n            return function (e) {\n                return tailRec(function (a) {\n                    return f(a)(e);\n                })(a0);\n            };\n        };\n    },\n    Monad0: function () {\n        return Control_Monad.monadFn;\n    }\n};\nvar monadRecEither = {\n    tailRecM: function (f) {\n        return function (a0) {\n            var g = function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return new Done(new Data_Either.Left(v.value0));\n                };\n                if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {\n                    return new Loop(f(v.value0.value0));\n                };\n                if (v instanceof Data_Either.Right && v.value0 instanceof Done) {\n                    return new Done(new Data_Either.Right(v.value0.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 145, column 7 - line 145, column 33): \" + [ v.constructor.name ]);\n            };\n            return tailRec(g)(f(a0));\n        };\n    },\n    Monad0: function () {\n        return Data_Either.monadEither;\n    }\n};\nvar monadRecEffect = {\n    tailRecM: function (f) {\n        return function (a) {\n            var fromDone = function (v) {\n                if (v instanceof Done) {\n                    return v.value0;\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 137, column 30 - line 137, column 44): \" + [ v.constructor.name ]);\n            };\n            return function __do() {\n                var r = bindFlipped(Effect_Ref[\"new\"])(f(a))();\n                (function () {\n                    while (!(function __do() {\n                        var v = Effect_Ref.read(r)();\n                        if (v instanceof Loop) {\n                            var e = f(v.value0)();\n                            Effect_Ref.write(e)(r)();\n                            return false;\n                        };\n                        if (v instanceof Done) {\n                            return true;\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 128, column 22 - line 133, column 28): \" + [ v.constructor.name ]);\n                    })()) {\n\n                    };\n                    return {};\n                })();\n                return map(fromDone)(Effect_Ref.read(r))();\n            };\n        };\n    },\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar loop3 = function (a) {\n    return function (b) {\n        return function (c) {\n            return new Loop({\n                a: a,\n                b: b,\n                c: c\n            });\n        };\n    };\n};\nvar loop2 = function (a) {\n    return function (b) {\n        return new Loop({\n            a: a,\n            b: b\n        });\n    };\n};\nvar functorStep = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Loop) {\n                return new Loop(m.value0);\n            };\n            if (m instanceof Done) {\n                return new Done(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar forever = function (dictMonadRec) {\n    var tailRecM1 = tailRecM(dictMonadRec);\n    var voidRight = Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0());\n    return function (ma) {\n        return tailRecM1(function (u) {\n            return voidRight(new Loop(u))(ma);\n        })(Data_Unit.unit);\n    };\n};\nvar bifunctorStep = {\n    bimap: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Loop) {\n                    return new Loop(v(v2.value0));\n                };\n                if (v2 instanceof Done) {\n                    return new Done(v1(v2.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 33, column 1 - line 35, column 34): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    }\n};\nexport {\n    Loop,\n    Done,\n    tailRec,\n    tailRec2,\n    tailRec3,\n    tailRecM,\n    tailRecM2,\n    tailRecM3,\n    forever,\n    whileJust,\n    untilJust,\n    loop2,\n    loop3,\n    functorStep,\n    bifunctorStep,\n    monadRecIdentity,\n    monadRecEffect,\n    monadRecFunction,\n    monadRecEither,\n    monadRecMaybe\n};\n","// module Unsafe.Coerce\n\nexport const unsafeCoerce = function (x) {\n  return x;\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar modify$prime = $foreign.modifyImpl;\nvar modify = function (f) {\n    return modify$prime(function (s) {\n        var s$prime = f(s);\n        return {\n            state: s$prime,\n            value: s$prime\n        };\n    });\n};\nvar functorST = {\n    map: $foreign.map_\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorST);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](functorST);\nvar monadST = {\n    Applicative0: function () {\n        return applicativeST;\n    },\n    Bind1: function () {\n        return bindST;\n    }\n};\nvar bindST = {\n    bind: $foreign.bind_,\n    Apply0: function () {\n        return $lazy_applyST(0);\n    }\n};\nvar applicativeST = {\n    pure: $foreign.pure_,\n    Apply0: function () {\n        return $lazy_applyST(0);\n    }\n};\nvar $lazy_applyST = /* #__PURE__ */ $runtime_lazy(\"applyST\", \"Control.Monad.ST.Internal\", function () {\n    return {\n        apply: Control_Monad.ap(monadST),\n        Functor0: function () {\n            return functorST;\n        }\n    };\n});\nvar applyST = /* #__PURE__ */ $lazy_applyST(47);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyST);\nvar bind = /* #__PURE__ */ Control_Bind.bind(bindST);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(bindST);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(bindST);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(applicativeST);\nvar semigroupST = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monadRecST = {\n    tailRecM: function (f) {\n        return function (a) {\n            var isLooping = function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Loop) {\n                    return true;\n                };\n                return false;\n            };\n            var fromDone = function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Done) {\n                    return v.value0;\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.ST.Internal (line 70, column 32 - line 70, column 46): \" + [ v.constructor.name ]);\n            };\n            return bind(bindFlipped($foreign[\"new\"])(f(a)))(function (r) {\n                return discard($foreign[\"while\"](map(isLooping)($foreign.read(r)))(bind($foreign.read(r))(function (v) {\n                    if (v instanceof Control_Monad_Rec_Class.Loop) {\n                        return bind(f(v.value0))(function (e) {\n                            return $$void($foreign.write(e)(r));\n                        });\n                    };\n                    if (v instanceof Control_Monad_Rec_Class.Done) {\n                        return pure(Data_Unit.unit);\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.ST.Internal (line 62, column 18 - line 66, column 28): \" + [ v.constructor.name ]);\n                })))(function () {\n                    return map(fromDone)($foreign.read(r));\n                });\n            });\n        };\n    },\n    Monad0: function () {\n        return monadST;\n    }\n};\nvar monoidST = function (dictMonoid) {\n    var semigroupST1 = semigroupST(dictMonoid.Semigroup0());\n    return {\n        mempty: pure(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupST1;\n        }\n    };\n};\nexport {\n    run,\n    while,\n    for,\n    foreach,\n    new,\n    read,\n    write\n} from \"./foreign.js\";\nexport {\n    modify$prime,\n    modify,\n    functorST,\n    applyST,\n    applicativeST,\n    bindST,\n    monadST,\n    monadRecST,\n    semigroupST,\n    monoidST\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar monadEffectEffect = {\n    liftEffect: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar liftEffect = function (dict) {\n    return dict.liftEffect;\n};\nexport {\n    liftEffect,\n    monadEffectEffect\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Cont_Class from \"../Control.Monad.Cont.Class/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Either.functorEither);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar ExceptT = function (x) {\n    return x;\n};\nvar withExceptT = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (f) {\n        return function (v) {\n            var mapLeft = function (v1) {\n                return function (v2) {\n                    if (v2 instanceof Data_Either.Right) {\n                        return new Data_Either.Right(v2.value0);\n                    };\n                    if (v2 instanceof Data_Either.Left) {\n                        return new Data_Either.Left(v1(v2.value0));\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 42, column 3 - line 42, column 32): \" + [ v1.constructor.name, v2.constructor.name ]);\n                };\n            };\n            return map1(mapLeft(f))(v);\n        };\n    };\n};\nvar runExceptT = function (v) {\n    return v;\n};\nvar newtypeExceptT = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadTransExceptT = {\n    lift: function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (m) {\n            return bind(m)(function (a) {\n                return pure(new Data_Either.Right(a));\n            });\n        };\n    }\n};\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(monadTransExceptT);\nvar mapExceptT = function (f) {\n    return function (v) {\n        return f(v);\n    };\n};\nvar functorExceptT = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return mapExceptT(map1(map(f)));\n        }\n    };\n};\nvar except = function (dictApplicative) {\n    var $185 = Control_Applicative.pure(dictApplicative);\n    return function ($186) {\n        return ExceptT($185($186));\n    };\n};\nvar monadExceptT = function (dictMonad) {\n    return {\n        Applicative0: function () {\n            return applicativeExceptT(dictMonad);\n        },\n        Bind1: function () {\n            return bindExceptT(dictMonad);\n        }\n    };\n};\nvar bindExceptT = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return {\n        bind: function (v) {\n            return function (k) {\n                return bind(v)(Data_Either.either(function ($187) {\n                    return pure(Data_Either.Left.create($187));\n                })(function (a) {\n                    var v1 = k(a);\n                    return v1;\n                }));\n            };\n        },\n        Apply0: function () {\n            return applyExceptT(dictMonad);\n        }\n    };\n};\nvar applyExceptT = function (dictMonad) {\n    var functorExceptT1 = functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());\n    return {\n        apply: Control_Monad.ap(monadExceptT(dictMonad)),\n        Functor0: function () {\n            return functorExceptT1;\n        }\n    };\n};\nvar applicativeExceptT = function (dictMonad) {\n    return {\n        pure: (function () {\n            var $188 = Control_Applicative.pure(dictMonad.Applicative0());\n            return function ($189) {\n                return ExceptT($188(Data_Either.Right.create($189)));\n            };\n        })(),\n        Apply0: function () {\n            return applyExceptT(dictMonad);\n        }\n    };\n};\nvar semigroupExceptT = function (dictMonad) {\n    var lift2 = Control_Apply.lift2(applyExceptT(dictMonad));\n    return function (dictSemigroup) {\n        return {\n            append: lift2(Data_Semigroup.append(dictSemigroup))\n        };\n    };\n};\nvar monadAskExceptT = function (dictMonadAsk) {\n    var Monad0 = dictMonadAsk.Monad0();\n    var monadExceptT1 = monadExceptT(Monad0);\n    return {\n        ask: lift(Monad0)(Control_Monad_Reader_Class.ask(dictMonadAsk)),\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadReaderExceptT = function (dictMonadReader) {\n    var local = Control_Monad_Reader_Class.local(dictMonadReader);\n    var monadAskExceptT1 = monadAskExceptT(dictMonadReader.MonadAsk0());\n    return {\n        local: function (f) {\n            return mapExceptT(local(f));\n        },\n        MonadAsk0: function () {\n            return monadAskExceptT1;\n        }\n    };\n};\nvar monadContExceptT = function (dictMonadCont) {\n    var callCC = Control_Monad_Cont_Class.callCC(dictMonadCont);\n    var monadExceptT1 = monadExceptT(dictMonadCont.Monad0());\n    return {\n        callCC: function (f) {\n            return callCC(function (c) {\n                var v = f(function (a) {\n                    return c(new Data_Either.Right(a));\n                });\n                return v;\n            });\n        },\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadEffectExceptT = function (dictMonadEffect) {\n    var Monad0 = dictMonadEffect.Monad0();\n    var monadExceptT1 = monadExceptT(Monad0);\n    return {\n        liftEffect: (function () {\n            var $190 = lift(Monad0);\n            var $191 = Effect_Class.liftEffect(dictMonadEffect);\n            return function ($192) {\n                return $190($191($192));\n            };\n        })(),\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadRecExceptT = function (dictMonadRec) {\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    var Monad0 = dictMonadRec.Monad0();\n    var bind = Control_Bind.bind(Monad0.Bind1());\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    var monadExceptT1 = monadExceptT(Monad0);\n    return {\n        tailRecM: function (f) {\n            var $193 = tailRecM(function (a) {\n                var v = f(a);\n                return bind(v)(function (m$prime) {\n                    return pure((function () {\n                        if (m$prime instanceof Data_Either.Left) {\n                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));\n                        };\n                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {\n                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);\n                        };\n                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {\n                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 74, column 14 - line 77, column 43): \" + [ m$prime.constructor.name ]);\n                    })());\n                });\n            });\n            return function ($194) {\n                return ExceptT($193($194));\n            };\n        },\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadStateExceptT = function (dictMonadState) {\n    var Monad0 = dictMonadState.Monad0();\n    var lift1 = lift(Monad0);\n    var state = Control_Monad_State_Class.state(dictMonadState);\n    var monadExceptT1 = monadExceptT(Monad0);\n    return {\n        state: function (f) {\n            return lift1(state(f));\n        },\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadTellExceptT = function (dictMonadTell) {\n    var Monad1 = dictMonadTell.Monad1();\n    var Semigroup0 = dictMonadTell.Semigroup0();\n    var monadExceptT1 = monadExceptT(Monad1);\n    return {\n        tell: (function () {\n            var $195 = lift(Monad1);\n            var $196 = Control_Monad_Writer_Class.tell(dictMonadTell);\n            return function ($197) {\n                return $195($196($197));\n            };\n        })(),\n        Semigroup0: function () {\n            return Semigroup0;\n        },\n        Monad1: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadWriterExceptT = function (dictMonadWriter) {\n    var MonadTell1 = dictMonadWriter.MonadTell1();\n    var Monad1 = MonadTell1.Monad1();\n    var bind = Control_Bind.bind(Monad1.Bind1());\n    var listen = Control_Monad_Writer_Class.listen(dictMonadWriter);\n    var pure = Control_Applicative.pure(Monad1.Applicative0());\n    var pass = Control_Monad_Writer_Class.pass(dictMonadWriter);\n    var Monoid0 = dictMonadWriter.Monoid0();\n    var monadTellExceptT1 = monadTellExceptT(MonadTell1);\n    return {\n        listen: mapExceptT(function (m) {\n            return bind(listen(m))(function (v) {\n                return pure(map(function (r) {\n                    return new Data_Tuple.Tuple(r, v.value1);\n                })(v.value0));\n            });\n        }),\n        pass: mapExceptT(function (m) {\n            return pass(bind(m)(function (a) {\n                return pure((function () {\n                    if (a instanceof Data_Either.Left) {\n                        return new Data_Tuple.Tuple(new Data_Either.Left(a.value0), identity);\n                    };\n                    if (a instanceof Data_Either.Right) {\n                        return new Data_Tuple.Tuple(new Data_Either.Right(a.value0.value0), a.value0.value1);\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 134, column 10 - line 136, column 45): \" + [ a.constructor.name ]);\n                })());\n            }));\n        }),\n        Monoid0: function () {\n            return Monoid0;\n        },\n        MonadTell1: function () {\n            return monadTellExceptT1;\n        }\n    };\n};\nvar monadThrowExceptT = function (dictMonad) {\n    var monadExceptT1 = monadExceptT(dictMonad);\n    return {\n        throwError: (function () {\n            var $198 = Control_Applicative.pure(dictMonad.Applicative0());\n            return function ($199) {\n                return ExceptT($198(Data_Either.Left.create($199)));\n            };\n        })(),\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadErrorExceptT = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var monadThrowExceptT1 = monadThrowExceptT(dictMonad);\n    return {\n        catchError: function (v) {\n            return function (k) {\n                return bind(v)(Data_Either.either(function (a) {\n                    var v1 = k(a);\n                    return v1;\n                })(function ($200) {\n                    return pure(Data_Either.Right.create($200));\n                }));\n            };\n        },\n        MonadThrow0: function () {\n            return monadThrowExceptT1;\n        }\n    };\n};\nvar monoidExceptT = function (dictMonad) {\n    var pure = Control_Applicative.pure(applicativeExceptT(dictMonad));\n    var semigroupExceptT1 = semigroupExceptT(dictMonad);\n    return function (dictMonoid) {\n        var semigroupExceptT2 = semigroupExceptT1(dictMonoid.Semigroup0());\n        return {\n            mempty: pure(Data_Monoid.mempty(dictMonoid)),\n            Semigroup0: function () {\n                return semigroupExceptT2;\n            }\n        };\n    };\n};\nvar altExceptT = function (dictSemigroup) {\n    var append = Data_Semigroup.append(dictSemigroup);\n    return function (dictMonad) {\n        var Bind1 = dictMonad.Bind1();\n        var bind = Control_Bind.bind(Bind1);\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        var functorExceptT1 = functorExceptT((Bind1.Apply0()).Functor0());\n        return {\n            alt: function (v) {\n                return function (v1) {\n                    return bind(v)(function (rm) {\n                        if (rm instanceof Data_Either.Right) {\n                            return pure(new Data_Either.Right(rm.value0));\n                        };\n                        if (rm instanceof Data_Either.Left) {\n                            return bind(v1)(function (rn) {\n                                if (rn instanceof Data_Either.Right) {\n                                    return pure(new Data_Either.Right(rn.value0));\n                                };\n                                if (rn instanceof Data_Either.Left) {\n                                    return pure(new Data_Either.Left(append(rm.value0)(rn.value0)));\n                                };\n                                throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): \" + [ rn.constructor.name ]);\n                            });\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): \" + [ rm.constructor.name ]);\n                    });\n                };\n            },\n            Functor0: function () {\n                return functorExceptT1;\n            }\n        };\n    };\n};\nvar plusExceptT = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var altExceptT1 = altExceptT(dictMonoid.Semigroup0());\n    return function (dictMonad) {\n        var altExceptT2 = altExceptT1(dictMonad);\n        return {\n            empty: Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(mempty),\n            Alt0: function () {\n                return altExceptT2;\n            }\n        };\n    };\n};\nvar alternativeExceptT = function (dictMonoid) {\n    var plusExceptT1 = plusExceptT(dictMonoid);\n    return function (dictMonad) {\n        var applicativeExceptT1 = applicativeExceptT(dictMonad);\n        var plusExceptT2 = plusExceptT1(dictMonad);\n        return {\n            Applicative0: function () {\n                return applicativeExceptT1;\n            },\n            Plus1: function () {\n                return plusExceptT2;\n            }\n        };\n    };\n};\nvar monadPlusExceptT = function (dictMonoid) {\n    var alternativeExceptT1 = alternativeExceptT(dictMonoid);\n    return function (dictMonad) {\n        var monadExceptT1 = monadExceptT(dictMonad);\n        var alternativeExceptT2 = alternativeExceptT1(dictMonad);\n        return {\n            Monad0: function () {\n                return monadExceptT1;\n            },\n            Alternative1: function () {\n                return alternativeExceptT2;\n            }\n        };\n    };\n};\nexport {\n    ExceptT,\n    runExceptT,\n    withExceptT,\n    mapExceptT,\n    except,\n    newtypeExceptT,\n    functorExceptT,\n    applyExceptT,\n    applicativeExceptT,\n    bindExceptT,\n    monadExceptT,\n    monadRecExceptT,\n    altExceptT,\n    plusExceptT,\n    alternativeExceptT,\n    monadPlusExceptT,\n    monadTransExceptT,\n    monadEffectExceptT,\n    monadContExceptT,\n    monadThrowExceptT,\n    monadErrorExceptT,\n    monadAskExceptT,\n    monadReaderExceptT,\n    monadStateExceptT,\n    monadTellExceptT,\n    monadWriterExceptT,\n    semigroupExceptT,\n    monoidExceptT\n};\nexport {\n    catchError,\n    throwError\n} from \"../Control.Monad.Error.Class/index.js\";\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar plusArray = {\n    empty: [  ],\n    Alt0: function () {\n        return Control_Alt.altArray;\n    }\n};\nvar empty = function (dict) {\n    return dict.empty;\n};\nexport {\n    empty,\n    plusArray\n};\nexport {\n    alt\n} from \"../Control.Alt/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar coerce = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nexport {\n    coerce\n};\n","// Generated by purs version 0.15.7\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar wrap = function () {\n    return coerce;\n};\nvar wrap1 = /* #__PURE__ */ wrap();\nvar unwrap = function () {\n    return coerce;\n};\nvar unwrap1 = /* #__PURE__ */ unwrap();\nvar underF2 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar underF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar under2 = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar under = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar un = function () {\n    return function (v) {\n        return unwrap1;\n    };\n};\nvar traverse = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar overF2 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar overF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar over2 = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar over = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar newtypeMultiplicative = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeLast = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeFirst = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeEndo = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDual = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDisj = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeConj = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeAdditive = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar modify = function () {\n    return function (fn) {\n        return function (t) {\n            return wrap1(fn(unwrap1(t)));\n        };\n    };\n};\nvar collect = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar alaF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar ala = function () {\n    return function () {\n        return function () {\n            return function (v) {\n                return function (f) {\n                    return coerce(f(wrap1));\n                };\n            };\n        };\n    };\n};\nexport {\n    wrap,\n    unwrap,\n    un,\n    modify,\n    ala,\n    alaF,\n    over,\n    overF,\n    under,\n    underF,\n    over2,\n    overF2,\n    under2,\n    underF2,\n    traverse,\n    collect,\n    newtypeAdditive,\n    newtypeMultiplicative,\n    newtypeConj,\n    newtypeDisj,\n    newtypeDual,\n    newtypeEndo,\n    newtypeFirst,\n    newtypeLast\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar extendFn = function (dictSemigroup) {\n    var append = Data_Semigroup.append(dictSemigroup);\n    return {\n        extend: function (f) {\n            return function (g) {\n                return function (w) {\n                    return f(function (w$prime) {\n                        return g(append(w)(w$prime));\n                    });\n                };\n            };\n        },\n        Functor0: function () {\n            return Data_Functor.functorFn;\n        }\n    };\n};\nvar extendArray = {\n    extend: $foreign.arrayExtend,\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar extend = function (dict) {\n    return dict.extend;\n};\nvar extendFlipped = function (dictExtend) {\n    var extend1 = extend(dictExtend);\n    return function (w) {\n        return function (f) {\n            return extend1(f)(w);\n        };\n    };\n};\nvar duplicate = function (dictExtend) {\n    return extend(dictExtend)(identity);\n};\nvar composeCoKleisliFlipped = function (dictExtend) {\n    var extend1 = extend(dictExtend);\n    return function (f) {\n        return function (g) {\n            return function (w) {\n                return f(extend1(g)(w));\n            };\n        };\n    };\n};\nvar composeCoKleisli = function (dictExtend) {\n    var extend1 = extend(dictExtend);\n    return function (f) {\n        return function (g) {\n            return function (w) {\n                return g(extend1(f)(w));\n            };\n        };\n    };\n};\nexport {\n    extend,\n    extendFlipped,\n    composeCoKleisli,\n    composeCoKleisliFlipped,\n    duplicate,\n    extendFn,\n    extendArray\n};\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Cont_Trans from \"../Control.Monad.Cont.Trans/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Control_Monad_Maybe_Trans from \"../Control.Monad.Maybe.Trans/index.js\";\nimport * as Control_Monad_Reader_Trans from \"../Control.Monad.Reader.Trans/index.js\";\nimport * as Control_Monad_Writer_Trans from \"../Control.Monad.Writer.Trans/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Compose from \"../Data.Functor.Compose/index.js\";\nimport * as Data_Functor_Costar from \"../Data.Functor.Costar/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Profunctor_Star from \"../Data.Profunctor.Star/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar ParCont = function (x) {\n    return x;\n};\nvar sequential = function (dict) {\n    return dict.sequential;\n};\nvar parallel = function (dict) {\n    return dict.parallel;\n};\nvar newtypeParCont = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadParWriterT = function (dictMonoid) {\n    var monadWriterT = Control_Monad_Writer_Trans.monadWriterT(dictMonoid);\n    var applicativeWriterT = Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid);\n    return function (dictParallel) {\n        var monadWriterT1 = monadWriterT(dictParallel.Monad0());\n        var applicativeWriterT1 = applicativeWriterT(dictParallel.Applicative1());\n        return {\n            parallel: Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)),\n            sequential: Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)),\n            Monad0: function () {\n                return monadWriterT1;\n            },\n            Applicative1: function () {\n                return applicativeWriterT1;\n            }\n        };\n    };\n};\nvar monadParStar = function (dictParallel) {\n    var parallel1 = parallel(dictParallel);\n    var sequential1 = sequential(dictParallel);\n    var monadStar = Data_Profunctor_Star.monadStar(dictParallel.Monad0());\n    var applicativeStar = Data_Profunctor_Star.applicativeStar(dictParallel.Applicative1());\n    return {\n        parallel: function (v) {\n            return function ($119) {\n                return parallel1(v($119));\n            };\n        },\n        sequential: function (v) {\n            return function ($120) {\n                return sequential1(v($120));\n            };\n        },\n        Monad0: function () {\n            return monadStar;\n        },\n        Applicative1: function () {\n            return applicativeStar;\n        }\n    };\n};\nvar monadParReaderT = function (dictParallel) {\n    var monadReaderT = Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());\n    var applicativeReaderT = Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());\n    return {\n        parallel: Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)),\n        sequential: Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)),\n        Monad0: function () {\n            return monadReaderT;\n        },\n        Applicative1: function () {\n            return applicativeReaderT;\n        }\n    };\n};\nvar monadParMaybeT = function (dictParallel) {\n    var parallel1 = parallel(dictParallel);\n    var sequential1 = sequential(dictParallel);\n    var monadMaybeT = Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());\n    var applicativeCompose = Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);\n    return {\n        parallel: function (v) {\n            return parallel1(v);\n        },\n        sequential: function (v) {\n            return sequential1(v);\n        },\n        Monad0: function () {\n            return monadMaybeT;\n        },\n        Applicative1: function () {\n            return applicativeCompose;\n        }\n    };\n};\nvar monadParExceptT = function (dictParallel) {\n    var parallel1 = parallel(dictParallel);\n    var sequential1 = sequential(dictParallel);\n    var monadExceptT = Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());\n    var applicativeCompose = Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);\n    return {\n        parallel: function (v) {\n            return parallel1(v);\n        },\n        sequential: function (v) {\n            return sequential1(v);\n        },\n        Monad0: function () {\n            return monadExceptT;\n        },\n        Applicative1: function () {\n            return applicativeCompose;\n        }\n    };\n};\nvar monadParCostar = function (dictParallel) {\n    var sequential1 = sequential(dictParallel);\n    var parallel1 = parallel(dictParallel);\n    return {\n        parallel: function (v) {\n            return function ($121) {\n                return v(sequential1($121));\n            };\n        },\n        sequential: function (v) {\n            return function ($122) {\n                return v(parallel1($122));\n            };\n        },\n        Monad0: function () {\n            return Data_Functor_Costar.monadCostar;\n        },\n        Applicative1: function () {\n            return Data_Functor_Costar.applicativeCostar;\n        }\n    };\n};\nvar monadParParCont = function (dictMonadEffect) {\n    var monadContT = Control_Monad_Cont_Trans.monadContT(dictMonadEffect.Monad0());\n    return {\n        parallel: ParCont,\n        sequential: function (v) {\n            return v;\n        },\n        Monad0: function () {\n            return monadContT;\n        },\n        Applicative1: function () {\n            return applicativeParCont(dictMonadEffect);\n        }\n    };\n};\nvar functorParCont = function (dictMonadEffect) {\n    var map = Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0()));\n    return {\n        map: function (f) {\n            var $123 = parallel(monadParParCont(dictMonadEffect));\n            var $124 = map(f);\n            var $125 = sequential(monadParParCont(dictMonadEffect));\n            return function ($126) {\n                return $123($124($125($126)));\n            };\n        }\n    };\n};\nvar applyParCont = function (dictMonadEffect) {\n    var Bind1 = (dictMonadEffect.Monad0()).Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    var discard1 = discard(Bind1);\n    return {\n        apply: function (v) {\n            return function (v1) {\n                return function (k) {\n                    return bind(liftEffect(Effect_Ref[\"new\"](Data_Maybe.Nothing.value)))(function (ra) {\n                        return bind(liftEffect(Effect_Ref[\"new\"](Data_Maybe.Nothing.value)))(function (rb) {\n                            return discard1(Control_Monad_Cont_Trans.runContT(v)(function (a) {\n                                return bind(liftEffect(Effect_Ref.read(rb)))(function (mb) {\n                                    if (mb instanceof Data_Maybe.Nothing) {\n                                        return liftEffect(Effect_Ref.write(new Data_Maybe.Just(a))(ra));\n                                    };\n                                    if (mb instanceof Data_Maybe.Just) {\n                                        return k(a(mb.value0));\n                                    };\n                                    throw new Error(\"Failed pattern match at Control.Parallel.Class (line 82, column 7 - line 84, column 26): \" + [ mb.constructor.name ]);\n                                });\n                            }))(function () {\n                                return Control_Monad_Cont_Trans.runContT(v1)(function (b) {\n                                    return bind(liftEffect(Effect_Ref.read(ra)))(function (ma) {\n                                        if (ma instanceof Data_Maybe.Nothing) {\n                                            return liftEffect(Effect_Ref.write(new Data_Maybe.Just(b))(rb));\n                                        };\n                                        if (ma instanceof Data_Maybe.Just) {\n                                            return k(ma.value0(b));\n                                        };\n                                        throw new Error(\"Failed pattern match at Control.Parallel.Class (line 88, column 7 - line 90, column 26): \" + [ ma.constructor.name ]);\n                                    });\n                                });\n                            });\n                        });\n                    });\n                };\n            };\n        },\n        Functor0: function () {\n            return functorParCont(dictMonadEffect);\n        }\n    };\n};\nvar applicativeParCont = function (dictMonadEffect) {\n    return {\n        pure: (function () {\n            var $127 = parallel(monadParParCont(dictMonadEffect));\n            var $128 = Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEffect.Monad0()).Applicative0()));\n            return function ($129) {\n                return $127($128($129));\n            };\n        })(),\n        Apply0: function () {\n            return applyParCont(dictMonadEffect);\n        }\n    };\n};\nvar altParCont = function (dictMonadEffect) {\n    var Monad0 = dictMonadEffect.Monad0();\n    var Bind1 = Monad0.Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    var discard1 = discard(Bind1);\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    var functorParCont1 = functorParCont(dictMonadEffect);\n    return {\n        alt: function (v) {\n            return function (v1) {\n                return function (k) {\n                    return bind(liftEffect(Effect_Ref[\"new\"](false)))(function (done) {\n                        return discard1(Control_Monad_Cont_Trans.runContT(v)(function (a) {\n                            return bind(liftEffect(Effect_Ref.read(done)))(function (b) {\n                                if (b) {\n                                    return pure(Data_Unit.unit);\n                                };\n                                return discard1(liftEffect(Effect_Ref.write(true)(done)))(function () {\n                                    return k(a);\n                                });\n                            });\n                        }))(function () {\n                            return Control_Monad_Cont_Trans.runContT(v1)(function (a) {\n                                return bind(liftEffect(Effect_Ref.read(done)))(function (b) {\n                                    if (b) {\n                                        return pure(Data_Unit.unit);\n                                    };\n                                    return discard1(liftEffect(Effect_Ref.write(true)(done)))(function () {\n                                        return k(a);\n                                    });\n                                });\n                            });\n                        });\n                    });\n                };\n            };\n        },\n        Functor0: function () {\n            return functorParCont1;\n        }\n    };\n};\nvar plusParCont = function (dictMonadEffect) {\n    var pure = Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0());\n    var altParCont1 = altParCont(dictMonadEffect);\n    return {\n        empty: function (v) {\n            return pure(Data_Unit.unit);\n        },\n        Alt0: function () {\n            return altParCont1;\n        }\n    };\n};\nvar alternativeParCont = function (dictMonadEffect) {\n    var applicativeParCont1 = applicativeParCont(dictMonadEffect);\n    var plusParCont1 = plusParCont(dictMonadEffect);\n    return {\n        Applicative0: function () {\n            return applicativeParCont1;\n        },\n        Plus1: function () {\n            return plusParCont1;\n        }\n    };\n};\nexport {\n    parallel,\n    sequential,\n    ParCont,\n    monadParExceptT,\n    monadParReaderT,\n    monadParWriterT,\n    monadParMaybeT,\n    monadParStar,\n    monadParCostar,\n    newtypeParCont,\n    functorParCont,\n    applyParCont,\n    applicativeParCont,\n    altParCont,\n    plusParCont,\n    alternativeParCont,\n    monadParParCont\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar bimap = function (dict) {\n    return dict.bimap;\n};\nvar lmap = function (dictBifunctor) {\n    var bimap1 = bimap(dictBifunctor);\n    return function (f) {\n        return bimap1(f)(identity);\n    };\n};\nvar rmap = function (dictBifunctor) {\n    return bimap(dictBifunctor)(identity);\n};\nvar bifunctorTuple = {\n    bimap: function (f) {\n        return function (g) {\n            return function (v) {\n                return new Data_Tuple.Tuple(f(v.value0), g(v.value1));\n            };\n        };\n    }\n};\nvar bifunctorEither = {\n    bimap: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return new Data_Either.Left(v(v2.value0));\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return new Data_Either.Right(v1(v2.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    }\n};\nvar bifunctorConst = {\n    bimap: function (f) {\n        return function (v) {\n            return function (v1) {\n                return f(v1);\n            };\n        };\n    }\n};\nexport {\n    bimap,\n    lmap,\n    rmap,\n    bifunctorEither,\n    bifunctorTuple,\n    bifunctorConst\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Maybe_First from \"../Data.Maybe.First/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Endo from \"../Data.Monoid.Endo/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar monoidEndo = /* #__PURE__ */ Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn);\nvar monoidDual = /* #__PURE__ */ Data_Monoid_Dual.monoidDual(monoidEndo);\nvar alaF = /* #__PURE__ */ Data_Newtype.alaF()()()();\nvar foldr = function (dict) {\n    return dict.foldr;\n};\nvar indexr = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (idx) {\n        var go = function (a) {\n            return function (cursor) {\n                if (cursor.elem instanceof Data_Maybe.Just) {\n                    return cursor;\n                };\n                var $292 = cursor.pos === idx;\n                if ($292) {\n                    return {\n                        elem: new Data_Maybe.Just(a),\n                        pos: cursor.pos\n                    };\n                };\n                return {\n                    pos: cursor.pos + 1 | 0,\n                    elem: cursor.elem\n                };\n            };\n        };\n        var $451 = foldr2(go)({\n            elem: Data_Maybe.Nothing.value,\n            pos: 0\n        });\n        return function ($452) {\n            return (function (v) {\n                return v.elem;\n            })($451($452));\n        };\n    };\n};\nvar $$null = function (dictFoldable) {\n    return foldr(dictFoldable)(function (v) {\n        return function (v1) {\n            return false;\n        };\n    })(true);\n};\nvar oneOf = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictPlus) {\n        return foldr2(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));\n    };\n};\nvar oneOfMap = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictPlus) {\n        var alt = Control_Alt.alt(dictPlus.Alt0());\n        var empty = Control_Plus.empty(dictPlus);\n        return function (f) {\n            return foldr2(function ($453) {\n                return alt(f($453));\n            })(empty);\n        };\n    };\n};\nvar traverse_ = function (dictApplicative) {\n    var applySecond = Control_Apply.applySecond(dictApplicative.Apply0());\n    var pure = Control_Applicative.pure(dictApplicative);\n    return function (dictFoldable) {\n        var foldr2 = foldr(dictFoldable);\n        return function (f) {\n            return foldr2(function ($454) {\n                return applySecond(f($454));\n            })(pure(Data_Unit.unit));\n        };\n    };\n};\nvar for_ = function (dictApplicative) {\n    var traverse_1 = traverse_(dictApplicative);\n    return function (dictFoldable) {\n        return Data_Function.flip(traverse_1(dictFoldable));\n    };\n};\nvar sequence_ = function (dictApplicative) {\n    var traverse_1 = traverse_(dictApplicative);\n    return function (dictFoldable) {\n        return traverse_1(dictFoldable)(identity);\n    };\n};\nvar foldl = function (dict) {\n    return dict.foldl;\n};\nvar indexl = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (idx) {\n        var go = function (cursor) {\n            return function (a) {\n                if (cursor.elem instanceof Data_Maybe.Just) {\n                    return cursor;\n                };\n                var $296 = cursor.pos === idx;\n                if ($296) {\n                    return {\n                        elem: new Data_Maybe.Just(a),\n                        pos: cursor.pos\n                    };\n                };\n                return {\n                    pos: cursor.pos + 1 | 0,\n                    elem: cursor.elem\n                };\n            };\n        };\n        var $455 = foldl2(go)({\n            elem: Data_Maybe.Nothing.value,\n            pos: 0\n        });\n        return function ($456) {\n            return (function (v) {\n                return v.elem;\n            })($455($456));\n        };\n    };\n};\nvar intercalate = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (sep) {\n            return function (xs) {\n                var go = function (v) {\n                    return function (v1) {\n                        if (v.init) {\n                            return {\n                                init: false,\n                                acc: v1\n                            };\n                        };\n                        return {\n                            init: false,\n                            acc: append(v.acc)(append(sep)(v1))\n                        };\n                    };\n                };\n                return (foldl2(go)({\n                    init: true,\n                    acc: mempty\n                })(xs)).acc;\n            };\n        };\n    };\n};\nvar length = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        var add1 = Data_Semiring.add(dictSemiring);\n        var one = Data_Semiring.one(dictSemiring);\n        return foldl2(function (c) {\n            return function (v) {\n                return add1(one)(c);\n            };\n        })(Data_Semiring.zero(dictSemiring));\n    };\n};\nvar maximumBy = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (cmp) {\n        var max$prime = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just(v1);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just((function () {\n                        var $303 = eq1(cmp(v.value0)(v1))(Data_Ordering.GT.value);\n                        if ($303) {\n                            return v.value0;\n                        };\n                        return v1;\n                    })());\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return foldl2(max$prime)(Data_Maybe.Nothing.value);\n    };\n};\nvar maximum = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (dictFoldable) {\n        return maximumBy(dictFoldable)(compare);\n    };\n};\nvar minimumBy = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (cmp) {\n        var min$prime = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just(v1);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just((function () {\n                        var $307 = eq1(cmp(v.value0)(v1))(Data_Ordering.LT.value);\n                        if ($307) {\n                            return v.value0;\n                        };\n                        return v1;\n                    })());\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return foldl2(min$prime)(Data_Maybe.Nothing.value);\n    };\n};\nvar minimum = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (dictFoldable) {\n        return minimumBy(dictFoldable)(compare);\n    };\n};\nvar product = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        return foldl2(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));\n    };\n};\nvar sum = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        return foldl2(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));\n    };\n};\nvar foldableTuple = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v.value1)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v.value1);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v.value1);\n            };\n        };\n    }\n};\nvar foldableMultiplicative = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableMaybe = {\n    foldr: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Maybe.Just) {\n                    return v(v2.value0)(v1);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Maybe.Just) {\n                    return v(v1)(v2.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return mempty;\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return v(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldr1 = /* #__PURE__ */ foldr(foldableMaybe);\nvar foldl1 = /* #__PURE__ */ foldl(foldableMaybe);\nvar foldableIdentity = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableEither = {\n    foldr: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return v(v2.value0)(v1);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return v(v1)(v2.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return mempty;\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return v(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldableDual = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableDisj = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableConst = {\n    foldr: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                return mempty;\n            };\n        };\n    }\n};\nvar foldableConj = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableAdditive = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldMapDefaultR = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return foldr2(function (x) {\n                return function (acc) {\n                    return append(f(x))(acc);\n                };\n            })(mempty);\n        };\n    };\n};\nvar foldableArray = {\n    foldr: $foreign.foldrArray,\n    foldl: $foreign.foldlArray,\n    foldMap: function (dictMonoid) {\n        return foldMapDefaultR(foldableArray)(dictMonoid);\n    }\n};\nvar foldMapDefaultL = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return foldl2(function (acc) {\n                return function (x) {\n                    return append(acc)(f(x));\n                };\n            })(mempty);\n        };\n    };\n};\nvar foldMap = function (dict) {\n    return dict.foldMap;\n};\nvar foldMap1 = /* #__PURE__ */ foldMap(foldableMaybe);\nvar foldableApp = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return {\n        foldr: function (f) {\n            return function (i) {\n                return function (v) {\n                    return foldr2(f)(i)(v);\n                };\n            };\n        },\n        foldl: function (f) {\n            return function (i) {\n                return function (v) {\n                    return foldl2(f)(i)(v);\n                };\n            };\n        },\n        foldMap: function (dictMonoid) {\n            var foldMap3 = foldMap2(dictMonoid);\n            return function (f) {\n                return function (v) {\n                    return foldMap3(f)(v);\n                };\n            };\n        }\n    };\n};\nvar foldableCompose = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldr2(Data_Function.flip(foldr3(f)))(i)(v);\n                    };\n                };\n            },\n            foldl: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldl2(foldl3(f))(i)(v);\n                    };\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return function (v) {\n                        return foldMap4(foldMap5(f))(v);\n                    };\n                };\n            }\n        };\n    };\n};\nvar foldableCoproduct = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldr2(f)(z))(foldr3(f)(z));\n                };\n            },\n            foldl: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldl2(f)(z))(foldl3(f)(z));\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return Data_Functor_Coproduct.coproduct(foldMap4(f))(foldMap5(f));\n                };\n            }\n        };\n    };\n};\nvar foldableFirst = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldr1(f)(z)(v);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldl1(f)(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap2 = foldMap1(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMap2(f)(v);\n            };\n        };\n    }\n};\nvar foldableLast = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldr1(f)(z)(v);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldl1(f)(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap2 = foldMap1(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMap2(f)(v);\n            };\n        };\n    }\n};\nvar foldableProduct = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldr2(f)(foldr3(f)(z)(v.value1))(v.value0);\n                    };\n                };\n            },\n            foldl: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldl3(f)(foldl2(f)(z)(v.value0))(v.value1);\n                    };\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return function (v) {\n                        return append(foldMap4(f)(v.value0))(foldMap5(f)(v.value1));\n                    };\n                };\n            }\n        };\n    };\n};\nvar foldlDefault = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidDual);\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return unwrap(unwrap(foldMap2((function () {\n                    var $457 = Data_Function.flip(c);\n                    return function ($458) {\n                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($457($458)));\n                    };\n                })())(xs)))(u);\n            };\n        };\n    };\n};\nvar foldrDefault = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidEndo);\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return unwrap(foldMap2(function ($459) {\n                    return Data_Monoid_Endo.Endo(c($459));\n                })(xs))(u);\n            };\n        };\n    };\n};\nvar lookup = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst);\n    return function (dictEq) {\n        var eq2 = Data_Eq.eq(dictEq);\n        return function (a) {\n            var $460 = foldMap2(function (v) {\n                var $444 = eq2(a)(v.value0);\n                if ($444) {\n                    return new Data_Maybe.Just(v.value1);\n                };\n                return Data_Maybe.Nothing.value;\n            });\n            return function ($461) {\n                return unwrap($460($461));\n            };\n        };\n    };\n};\nvar surroundMap = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidEndo);\n    return function (dictSemigroup) {\n        var append = Data_Semigroup.append(dictSemigroup);\n        return function (d) {\n            return function (t) {\n                return function (f) {\n                    var joined = function (a) {\n                        return function (m) {\n                            return append(d)(append(t(a))(m));\n                        };\n                    };\n                    return unwrap(foldMap2(joined)(f))(d);\n                };\n            };\n        };\n    };\n};\nvar surround = function (dictFoldable) {\n    var surroundMap1 = surroundMap(dictFoldable);\n    return function (dictSemigroup) {\n        var surroundMap2 = surroundMap1(dictSemigroup);\n        return function (d) {\n            return surroundMap2(d)(identity);\n        };\n    };\n};\nvar foldM = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (f) {\n            return function (b0) {\n                return foldl2(function (b) {\n                    return function (a) {\n                        return bind(b)(Data_Function.flip(f)(a));\n                    };\n                })(pure(b0));\n            };\n        };\n    };\n};\nvar fold = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictMonoid) {\n        return foldMap2(dictMonoid)(identity);\n    };\n};\nvar findMap = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return p(v1);\n                };\n                return v;\n            };\n        };\n        return foldl2(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar find = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing && p(v1)) {\n                    return new Data_Maybe.Just(v1);\n                };\n                return v;\n            };\n        };\n        return foldl2(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar any = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return alaF(Data_Monoid_Disj.Disj)(foldMap2(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));\n    };\n};\nvar elem = function (dictFoldable) {\n    var any1 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);\n    return function (dictEq) {\n        var $462 = Data_Eq.eq(dictEq);\n        return function ($463) {\n            return any1($462($463));\n        };\n    };\n};\nvar notElem = function (dictFoldable) {\n    var elem1 = elem(dictFoldable);\n    return function (dictEq) {\n        var elem2 = elem1(dictEq);\n        return function (x) {\n            var $464 = elem2(x);\n            return function ($465) {\n                return !$464($465);\n            };\n        };\n    };\n};\nvar or = function (dictFoldable) {\n    var any1 = any(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return any1(dictHeytingAlgebra)(identity);\n    };\n};\nvar all = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return alaF(Data_Monoid_Conj.Conj)(foldMap2(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));\n    };\n};\nvar and = function (dictFoldable) {\n    var all1 = all(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return all1(dictHeytingAlgebra)(identity);\n    };\n};\nexport {\n    foldr,\n    foldl,\n    foldMap,\n    foldrDefault,\n    foldlDefault,\n    foldMapDefaultL,\n    foldMapDefaultR,\n    fold,\n    foldM,\n    traverse_,\n    for_,\n    sequence_,\n    oneOf,\n    oneOfMap,\n    intercalate,\n    surroundMap,\n    surround,\n    and,\n    or,\n    all,\n    any,\n    sum,\n    product,\n    elem,\n    notElem,\n    indexl,\n    indexr,\n    find,\n    findMap,\n    maximum,\n    maximumBy,\n    minimum,\n    minimumBy,\n    $$null as null,\n    length,\n    lookup,\n    foldableArray,\n    foldableMaybe,\n    foldableFirst,\n    foldableLast,\n    foldableAdditive,\n    foldableDual,\n    foldableDisj,\n    foldableConj,\n    foldableMultiplicative,\n    foldableEither,\n    foldableTuple,\n    foldableIdentity,\n    foldableConst,\n    foldableProduct,\n    foldableCoproduct,\n    foldableCompose,\n    foldableApp\n};\n","export const foldrArray = function (f) {\n  return function (init) {\n    return function (xs) {\n      var acc = init;\n      var len = xs.length;\n      for (var i = len - 1; i >= 0; i--) {\n        acc = f(xs[i])(acc);\n      }\n      return acc;\n    };\n  };\n};\n\nexport const foldlArray = function (f) {\n  return function (init) {\n    return function (xs) {\n      var acc = init;\n      var len = xs.length;\n      for (var i = 0; i < len; i++) {\n        acc = f(acc)(xs[i]);\n      }\n      return acc;\n    };\n  };\n};\n","// jshint maxparams: 3\n\nexport const traverseArrayImpl = (function () {\n  function array1(a) {\n    return [a];\n  }\n\n  function array2(a) {\n    return function (b) {\n      return [a, b];\n    };\n  }\n\n  function array3(a) {\n    return function (b) {\n      return function (c) {\n        return [a, b, c];\n      };\n    };\n  }\n\n  function concat2(xs) {\n    return function (ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  return function (apply) {\n    return function (map) {\n      return function (pure) {\n        return function (f) {\n          return function (array) {\n            function go(bot, top) {\n              switch (top - bot) {\n              case 0: return pure([]);\n              case 1: return map(array1)(f(array[bot]));\n              case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));\n              case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));\n              default:\n                // This slightly tricky pivot selection aims to produce two\n                // even-length partitions where possible.\n                var pivot = bot + Math.floor((top - bot) / 4) * 2;\n                return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));\n              }\n            }\n            return go(0, array.length);\n          };\n        };\n      };\n    };\n  };\n})();\n","// Generated by purs version 0.15.7\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar Const = function (x) {\n    return x;\n};\nvar showConst = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            return \"(Const \" + (show(v) + \")\");\n        }\n    };\n};\nvar semiringConst = function (dictSemiring) {\n    return dictSemiring;\n};\nvar semigroupoidConst = {\n    compose: function (v) {\n        return function (v1) {\n            return v1;\n        };\n    }\n};\nvar semigroupConst = function (dictSemigroup) {\n    return dictSemigroup;\n};\nvar ringConst = function (dictRing) {\n    return dictRing;\n};\nvar ordConst = function (dictOrd) {\n    return dictOrd;\n};\nvar newtypeConst = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monoidConst = function (dictMonoid) {\n    return dictMonoid;\n};\nvar heytingAlgebraConst = function (dictHeytingAlgebra) {\n    return dictHeytingAlgebra;\n};\nvar functorConst = {\n    map: function (f) {\n        return function (m) {\n            return m;\n        };\n    }\n};\nvar invariantConst = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorConst)\n};\nvar euclideanRingConst = function (dictEuclideanRing) {\n    return dictEuclideanRing;\n};\nvar eqConst = function (dictEq) {\n    return dictEq;\n};\nvar eq1Const = function (dictEq) {\n    var eq = Data_Eq.eq(eqConst(dictEq));\n    return {\n        eq1: function (dictEq1) {\n            return eq;\n        }\n    };\n};\nvar ord1Const = function (dictOrd) {\n    var compare = Data_Ord.compare(ordConst(dictOrd));\n    var eq1Const1 = eq1Const(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return compare;\n        },\n        Eq10: function () {\n            return eq1Const1;\n        }\n    };\n};\nvar commutativeRingConst = function (dictCommutativeRing) {\n    return dictCommutativeRing;\n};\nvar boundedConst = function (dictBounded) {\n    return dictBounded;\n};\nvar booleanAlgebraConst = function (dictBooleanAlgebra) {\n    return dictBooleanAlgebra;\n};\nvar applyConst = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        apply: function (v) {\n            return function (v1) {\n                return append1(v)(v1);\n            };\n        },\n        Functor0: function () {\n            return functorConst;\n        }\n    };\n};\nvar applicativeConst = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var applyConst1 = applyConst(dictMonoid.Semigroup0());\n    return {\n        pure: function (v) {\n            return mempty;\n        },\n        Apply0: function () {\n            return applyConst1;\n        }\n    };\n};\nexport {\n    Const,\n    newtypeConst,\n    eqConst,\n    eq1Const,\n    ordConst,\n    ord1Const,\n    boundedConst,\n    showConst,\n    semigroupoidConst,\n    semigroupConst,\n    monoidConst,\n    semiringConst,\n    ringConst,\n    euclideanRingConst,\n    commutativeRingConst,\n    heytingAlgebraConst,\n    booleanAlgebraConst,\n    functorConst,\n    invariantConst,\n    applyConst,\n    applicativeConst\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Parallel_Class from \"../Control.Parallel.Class/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar parTraverse_ = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var traverse_ = Data_Foldable.traverse_(dictParallel.Applicative1());\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (dictFoldable) {\n        var traverse_1 = traverse_(dictFoldable);\n        return function (f) {\n            var $48 = traverse_1(function ($50) {\n                return parallel(f($50));\n            });\n            return function ($49) {\n                return sequential($48($49));\n            };\n        };\n    };\n};\nvar parTraverse = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var Applicative1 = dictParallel.Applicative1();\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (dictTraversable) {\n        var traverse = Data_Traversable.traverse(dictTraversable)(Applicative1);\n        return function (f) {\n            var $51 = traverse(function ($53) {\n                return parallel(f($53));\n            });\n            return function ($52) {\n                return sequential($51($52));\n            };\n        };\n    };\n};\nvar parSequence_ = function (dictParallel) {\n    var parTraverse_1 = parTraverse_(dictParallel);\n    return function (dictFoldable) {\n        return parTraverse_1(dictFoldable)(identity);\n    };\n};\nvar parSequence = function (dictParallel) {\n    var parTraverse1 = parTraverse(dictParallel);\n    return function (dictTraversable) {\n        return parTraverse1(dictTraversable)(identity);\n    };\n};\nvar parOneOfMap = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (dictAlternative) {\n        var Plus1 = dictAlternative.Plus1();\n        return function (dictFoldable) {\n            var oneOfMap = Data_Foldable.oneOfMap(dictFoldable)(Plus1);\n            return function (dictFunctor) {\n                return function (f) {\n                    var $54 = oneOfMap(function ($56) {\n                        return parallel(f($56));\n                    });\n                    return function ($55) {\n                        return sequential($54($55));\n                    };\n                };\n            };\n        };\n    };\n};\nvar parOneOf = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (dictAlternative) {\n        var Plus1 = dictAlternative.Plus1();\n        return function (dictFoldable) {\n            var oneOfMap = Data_Foldable.oneOfMap(dictFoldable)(Plus1);\n            return function (dictFunctor) {\n                var $57 = oneOfMap(parallel);\n                return function ($58) {\n                    return sequential($57($58));\n                };\n            };\n        };\n    };\n};\nvar parApply = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var apply = Control_Apply.apply((dictParallel.Applicative1()).Apply0());\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (mf) {\n        return function (ma) {\n            return sequential(apply(parallel(mf))(parallel(ma)));\n        };\n    };\n};\nexport {\n    parApply,\n    parTraverse,\n    parTraverse_,\n    parSequence,\n    parSequence_,\n    parOneOf,\n    parOneOfMap\n};\nexport {\n    ParCont,\n    parallel,\n    sequential\n} from \"../Control.Parallel.Class/index.js\";\n","export const unsafePerformEffect = function (f) {\n  return f();\n};\n","// module Partial\n\nexport const _crashWith = function (msg) {\n  throw new Error(msg);\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nvar crashWith = function () {\n    return $foreign[\"_crashWith\"];\n};\nvar crashWith1 = /* #__PURE__ */ crashWith();\nvar crash = function () {\n    return crashWith1(\"Partial.crash: partial function\");\n};\nexport {\n    crash,\n    crashWith\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Partial from \"../Partial/index.js\";\nvar crashWith = /* #__PURE__ */ Partial.crashWith();\nvar unsafePartial = $foreign[\"_unsafePartial\"];\nvar unsafeCrashWith = function (msg) {\n    return unsafePartial(function () {\n        return crashWith(msg);\n    });\n};\nexport {\n    unsafePartial,\n    unsafeCrashWith\n};\n","// module Partial.Unsafe\n\nexport const _unsafePartial = function (f) {\n  return f();\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_ST_Class from \"../Control.Monad.ST.Class/index.js\";\nimport * as Control_Parallel from \"../Control.Parallel/index.js\";\nimport * as Control_Parallel_Class from \"../Control.Parallel.Class/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Time_Duration from \"../Data.Time.Duration/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Effect_Unsafe from \"../Effect.Unsafe/index.js\";\nimport * as Partial_Unsafe from \"../Partial.Unsafe/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);\nvar Fiber = function (x) {\n    return x;\n};\nvar FFIUtil = function (x) {\n    return x;\n};\nvar Canceler = function (x) {\n    return x;\n};\nvar suspendAff = /* #__PURE__ */ $foreign[\"_fork\"](false);\nvar newtypeCanceler = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar functorParAff = {\n    map: $foreign[\"_parAffMap\"]\n};\nvar functorAff = {\n    map: $foreign[\"_map\"]\n};\nvar map1 = /* #__PURE__ */ Data_Functor.map(functorAff);\nvar forkAff = /* #__PURE__ */ $foreign[\"_fork\"](true);\nvar ffiUtil = /* #__PURE__ */ (function () {\n    var unsafeFromRight = function (v) {\n        if (v instanceof Data_Either.Right) {\n            return v.value0;\n        };\n        if (v instanceof Data_Either.Left) {\n            return Partial_Unsafe.unsafeCrashWith(\"unsafeFromRight: Left\");\n        };\n        throw new Error(\"Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): \" + [ v.constructor.name ]);\n    };\n    var unsafeFromLeft = function (v) {\n        if (v instanceof Data_Either.Left) {\n            return v.value0;\n        };\n        if (v instanceof Data_Either.Right) {\n            return Partial_Unsafe.unsafeCrashWith(\"unsafeFromLeft: Right\");\n        };\n        throw new Error(\"Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): \" + [ v.constructor.name ]);\n    };\n    var isLeft = function (v) {\n        if (v instanceof Data_Either.Left) {\n            return true;\n        };\n        if (v instanceof Data_Either.Right) {\n            return false;\n        };\n        throw new Error(\"Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): \" + [ v.constructor.name ]);\n    };\n    return {\n        isLeft: isLeft,\n        fromLeft: unsafeFromLeft,\n        fromRight: unsafeFromRight,\n        left: Data_Either.Left.create,\n        right: Data_Either.Right.create\n    };\n})();\nvar makeFiber = function (aff) {\n    return $foreign[\"_makeFiber\"](ffiUtil, aff);\n};\nvar launchAff = function (aff) {\n    return function __do() {\n        var fiber = makeFiber(aff)();\n        fiber.run();\n        return fiber;\n    };\n};\nvar launchAff_ = function ($74) {\n    return $$void(launchAff($74));\n};\nvar launchSuspendedAff = makeFiber;\nvar delay = function (v) {\n    return $foreign[\"_delay\"](Data_Either.Right.create, v);\n};\nvar bracket = function (acquire) {\n    return function (completed) {\n        return $foreign.generalBracket(acquire)({\n            killed: Data_Function[\"const\"](completed),\n            failed: Data_Function[\"const\"](completed),\n            completed: Data_Function[\"const\"](completed)\n        });\n    };\n};\nvar applyParAff = {\n    apply: $foreign[\"_parAffApply\"],\n    Functor0: function () {\n        return functorParAff;\n    }\n};\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyParAff);\nvar semigroupParAff = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monadAff = {\n    Applicative0: function () {\n        return applicativeAff;\n    },\n    Bind1: function () {\n        return bindAff;\n    }\n};\nvar bindAff = {\n    bind: $foreign[\"_bind\"],\n    Apply0: function () {\n        return $lazy_applyAff(0);\n    }\n};\nvar applicativeAff = {\n    pure: $foreign[\"_pure\"],\n    Apply0: function () {\n        return $lazy_applyAff(0);\n    }\n};\nvar $lazy_applyAff = /* #__PURE__ */ $runtime_lazy(\"applyAff\", \"Effect.Aff\", function () {\n    return {\n        apply: Control_Monad.ap(monadAff),\n        Functor0: function () {\n            return functorAff;\n        }\n    };\n});\nvar applyAff = /* #__PURE__ */ $lazy_applyAff(73);\nvar pure2 = /* #__PURE__ */ Control_Applicative.pure(applicativeAff);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(bindAff);\nvar lift21 = /* #__PURE__ */ Control_Apply.lift2(applyAff);\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyAff);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(bindAff);\nvar cancelWith = function (aff) {\n    return function (v) {\n        return $foreign.generalBracket(pure2(Data_Unit.unit))({\n            killed: function (e) {\n                return function (v1) {\n                    return v(e);\n                };\n            },\n            failed: Data_Function[\"const\"](pure2),\n            completed: Data_Function[\"const\"](pure2)\n        })(Data_Function[\"const\"](aff));\n    };\n};\nvar $$finally = function (fin) {\n    return function (a) {\n        return bracket(pure2(Data_Unit.unit))(Data_Function[\"const\"](fin))(Data_Function[\"const\"](a));\n    };\n};\nvar invincible = function (a) {\n    return bracket(a)(Data_Function[\"const\"](pure2(Data_Unit.unit)))(pure2);\n};\nvar lazyAff = {\n    defer: function (f) {\n        return bind1(pure2(Data_Unit.unit))(f);\n    }\n};\nvar semigroupAff = function (dictSemigroup) {\n    return {\n        append: lift21(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monadEffectAff = {\n    liftEffect: $foreign[\"_liftEffect\"],\n    Monad0: function () {\n        return monadAff;\n    }\n};\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(monadEffectAff);\nvar effectCanceler = function ($75) {\n    return Canceler(Data_Function[\"const\"](liftEffect($75)));\n};\nvar joinFiber = function (v) {\n    return $foreign.makeAff(function (k) {\n        return map(effectCanceler)(v.join(k));\n    });\n};\nvar functorFiber = {\n    map: function (f) {\n        return function (t) {\n            return Effect_Unsafe.unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));\n        };\n    }\n};\nvar applyFiber = {\n    apply: function (t1) {\n        return function (t2) {\n            return Effect_Unsafe.unsafePerformEffect(makeFiber(apply(joinFiber(t1))(joinFiber(t2))));\n        };\n    },\n    Functor0: function () {\n        return functorFiber;\n    }\n};\nvar applicativeFiber = {\n    pure: function (a) {\n        return Effect_Unsafe.unsafePerformEffect(makeFiber(pure2(a)));\n    },\n    Apply0: function () {\n        return applyFiber;\n    }\n};\nvar killFiber = function (e) {\n    return function (v) {\n        return bind1(liftEffect(v.isSuspended))(function (suspended) {\n            if (suspended) {\n                return liftEffect($$void(v.kill(e, Data_Function[\"const\"](pure(Data_Unit.unit)))));\n            };\n            return $foreign.makeAff(function (k) {\n                return map(effectCanceler)(v.kill(e, k));\n            });\n        });\n    };\n};\nvar fiberCanceler = /* #__PURE__ */ (function () {\n    var $76 = Data_Function.flip(killFiber);\n    return function ($77) {\n        return Canceler($76($77));\n    };\n})();\nvar monadSTAff = {\n    liftST: /* #__PURE__ */ (function () {\n        var $78 = Control_Monad_ST_Class.liftST(Control_Monad_ST_Class.monadSTEffect);\n        return function ($79) {\n            return liftEffect($78($79));\n        };\n    })(),\n    Monad0: function () {\n        return monadAff;\n    }\n};\nvar monadThrowAff = {\n    throwError: $foreign[\"_throwError\"],\n    Monad0: function () {\n        return monadAff;\n    }\n};\nvar monadErrorAff = {\n    catchError: $foreign[\"_catchError\"],\n    MonadThrow0: function () {\n        return monadThrowAff;\n    }\n};\nvar $$try = /* #__PURE__ */ Control_Monad_Error_Class[\"try\"](monadErrorAff);\nvar catchError = /* #__PURE__ */ Control_Monad_Error_Class.catchError(monadErrorAff);\nvar attempt = $$try;\nvar runAff = function (k) {\n    return function (aff) {\n        return launchAff(bindFlipped(function ($80) {\n            return liftEffect(k($80));\n        })($$try(aff)));\n    };\n};\nvar runAff_ = function (k) {\n    return function (aff) {\n        return $$void(runAff(k)(aff));\n    };\n};\nvar runSuspendedAff = function (k) {\n    return function (aff) {\n        return launchSuspendedAff(bindFlipped(function ($81) {\n            return liftEffect(k($81));\n        })($$try(aff)));\n    };\n};\nvar parallelAff = {\n    parallel: Unsafe_Coerce.unsafeCoerce,\n    sequential: $foreign[\"_sequential\"],\n    Monad0: function () {\n        return monadAff;\n    },\n    Applicative1: function () {\n        return $lazy_applicativeParAff(0);\n    }\n};\nvar $lazy_applicativeParAff = /* #__PURE__ */ $runtime_lazy(\"applicativeParAff\", \"Effect.Aff\", function () {\n    return {\n        pure: (function () {\n            var $82 = Control_Parallel_Class.parallel(parallelAff);\n            return function ($83) {\n                return $82(pure2($83));\n            };\n        })(),\n        Apply0: function () {\n            return applyParAff;\n        }\n    };\n});\nvar applicativeParAff = /* #__PURE__ */ $lazy_applicativeParAff(136);\nvar pure3 = /* #__PURE__ */ Control_Applicative.pure(applicativeParAff);\nvar parSequence_ = /* #__PURE__ */ Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray);\nvar monoidParAff = function (dictMonoid) {\n    var semigroupParAff1 = semigroupParAff(dictMonoid.Semigroup0());\n    return {\n        mempty: pure3(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupParAff1;\n        }\n    };\n};\nvar semigroupCanceler = {\n    append: function (v) {\n        return function (v1) {\n            return function (err) {\n                return parSequence_([ v(err), v1(err) ]);\n            };\n        };\n    }\n};\nvar supervise = function (aff) {\n    var killError = Effect_Exception.error(\"[Aff] Child fiber outlived parent\");\n    var killAll = function (err) {\n        return function (sup) {\n            return $foreign.makeAff(function (k) {\n                return $foreign[\"_killAll\"](err, sup.supervisor, k(pure1(Data_Unit.unit)));\n            });\n        };\n    };\n    var acquire = function __do() {\n        var sup = $foreign[\"_makeSupervisedFiber\"](ffiUtil, aff)();\n        sup.fiber.run();\n        return sup;\n    };\n    return $foreign.generalBracket(liftEffect(acquire))({\n        killed: function (err) {\n            return function (sup) {\n                return parSequence_([ killFiber(err)(sup.fiber), killAll(err)(sup) ]);\n            };\n        },\n        failed: Data_Function[\"const\"](killAll(killError)),\n        completed: Data_Function[\"const\"](killAll(killError))\n    })(function ($84) {\n        return joinFiber((function (v) {\n            return v.fiber;\n        })($84));\n    });\n};\nvar monadRecAff = {\n    tailRecM: function (k) {\n        var go = function (a) {\n            return bind1(k(a))(function (res) {\n                if (res instanceof Control_Monad_Rec_Class.Done) {\n                    return pure2(res.value0);\n                };\n                if (res instanceof Control_Monad_Rec_Class.Loop) {\n                    return go(res.value0);\n                };\n                throw new Error(\"Failed pattern match at Effect.Aff (line 104, column 7 - line 106, column 23): \" + [ res.constructor.name ]);\n            });\n        };\n        return go;\n    },\n    Monad0: function () {\n        return monadAff;\n    }\n};\nvar monoidAff = function (dictMonoid) {\n    var semigroupAff1 = semigroupAff(dictMonoid.Semigroup0());\n    return {\n        mempty: pure2(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupAff1;\n        }\n    };\n};\nvar nonCanceler = /* #__PURE__ */ Data_Function[\"const\"](/* #__PURE__ */ pure2(Data_Unit.unit));\nvar monoidCanceler = {\n    mempty: nonCanceler,\n    Semigroup0: function () {\n        return semigroupCanceler;\n    }\n};\nvar mempty = /* #__PURE__ */ Data_Monoid.mempty(monoidCanceler);\nvar never = /* #__PURE__ */ $foreign.makeAff(function (v) {\n    return pure(mempty);\n});\nvar apathize = /* #__PURE__ */ (function () {\n    var $85 = map1(Data_Function[\"const\"](Data_Unit.unit));\n    return function ($86) {\n        return $85(attempt($86));\n    };\n})();\nvar altParAff = {\n    alt: $foreign[\"_parAffAlt\"],\n    Functor0: function () {\n        return functorParAff;\n    }\n};\nvar altAff = {\n    alt: function (a1) {\n        return function (a2) {\n            return catchError(a1)(Data_Function[\"const\"](a2));\n        };\n    },\n    Functor0: function () {\n        return functorAff;\n    }\n};\nvar plusAff = {\n    empty: /* #__PURE__ */ Control_Monad_Error_Class.throwError(monadThrowAff)(/* #__PURE__ */ Effect_Exception.error(\"Always fails\")),\n    Alt0: function () {\n        return altAff;\n    }\n};\nvar plusParAff = {\n    empty: /* #__PURE__ */ Control_Parallel_Class.parallel(parallelAff)(/* #__PURE__ */ Control_Plus.empty(plusAff)),\n    Alt0: function () {\n        return altParAff;\n    }\n};\nvar alternativeParAff = {\n    Applicative0: function () {\n        return applicativeParAff;\n    },\n    Plus1: function () {\n        return plusParAff;\n    }\n};\nexport {\n    makeAff,\n    generalBracket\n} from \"./foreign.js\";\nexport {\n    Canceler,\n    launchAff,\n    launchAff_,\n    launchSuspendedAff,\n    runAff,\n    runAff_,\n    runSuspendedAff,\n    forkAff,\n    suspendAff,\n    supervise,\n    attempt,\n    apathize,\n    delay,\n    never,\n    $$finally as finally,\n    invincible,\n    killFiber,\n    joinFiber,\n    cancelWith,\n    bracket,\n    nonCanceler,\n    effectCanceler,\n    fiberCanceler,\n    functorAff,\n    applyAff,\n    applicativeAff,\n    bindAff,\n    monadAff,\n    semigroupAff,\n    monoidAff,\n    altAff,\n    plusAff,\n    monadRecAff,\n    monadThrowAff,\n    monadErrorAff,\n    monadEffectAff,\n    lazyAff,\n    monadSTAff,\n    functorParAff,\n    applyParAff,\n    applicativeParAff,\n    semigroupParAff,\n    monoidParAff,\n    altParAff,\n    plusParAff,\n    alternativeParAff,\n    parallelAff,\n    functorFiber,\n    applyFiber,\n    applicativeFiber,\n    newtypeCanceler,\n    semigroupCanceler,\n    monoidCanceler\n};\nexport {\n    catchError,\n    throwError,\n    try\n} from \"../Control.Monad.Error.Class/index.js\";\nexport {\n    parallel,\n    sequential\n} from \"../Control.Parallel.Class/index.js\";\nexport {\n    Milliseconds\n} from \"../Data.Time.Duration/index.js\";\nexport {\n    error,\n    message\n} from \"../Effect.Exception/index.js\";\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar showLazy = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (x) {\n            return \"(defer \\\\_ -> \" + (show($foreign.force(x)) + \")\");\n        }\n    };\n};\nvar semiringLazy = function (dictSemiring) {\n    var add = Data_Semiring.add(dictSemiring);\n    var zero = Data_Semiring.zero(dictSemiring);\n    var mul = Data_Semiring.mul(dictSemiring);\n    var one = Data_Semiring.one(dictSemiring);\n    return {\n        add: function (a) {\n            return function (b) {\n                return $foreign.defer(function (v) {\n                    return add($foreign.force(a))($foreign.force(b));\n                });\n            };\n        },\n        zero: $foreign.defer(function (v) {\n            return zero;\n        }),\n        mul: function (a) {\n            return function (b) {\n                return $foreign.defer(function (v) {\n                    return mul($foreign.force(a))($foreign.force(b));\n                });\n            };\n        },\n        one: $foreign.defer(function (v) {\n            return one;\n        })\n    };\n};\nvar semigroupLazy = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        append: function (a) {\n            return function (b) {\n                return $foreign.defer(function (v) {\n                    return append1($foreign.force(a))($foreign.force(b));\n                });\n            };\n        }\n    };\n};\nvar ringLazy = function (dictRing) {\n    var sub = Data_Ring.sub(dictRing);\n    var semiringLazy1 = semiringLazy(dictRing.Semiring0());\n    return {\n        sub: function (a) {\n            return function (b) {\n                return $foreign.defer(function (v) {\n                    return sub($foreign.force(a))($foreign.force(b));\n                });\n            };\n        },\n        Semiring0: function () {\n            return semiringLazy1;\n        }\n    };\n};\nvar monoidLazy = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var semigroupLazy1 = semigroupLazy(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.defer(function (v) {\n            return mempty;\n        }),\n        Semigroup0: function () {\n            return semigroupLazy1;\n        }\n    };\n};\nvar lazyLazy = {\n    defer: function (f) {\n        return $foreign.defer(function (v) {\n            return $foreign.force(f(Data_Unit.unit));\n        });\n    }\n};\nvar functorLazy = {\n    map: function (f) {\n        return function (l) {\n            return $foreign.defer(function (v) {\n                return f($foreign.force(l));\n            });\n        };\n    }\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorLazy);\nvar functorWithIndexLazy = {\n    mapWithIndex: function (f) {\n        return map(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return functorLazy;\n    }\n};\nvar invariantLazy = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorLazy)\n};\nvar foldableLazy = {\n    foldr: function (f) {\n        return function (z) {\n            return function (l) {\n                return f($foreign.force(l))(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (l) {\n                return f(z)($foreign.force(l));\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (l) {\n                return f($foreign.force(l));\n            };\n        };\n    }\n};\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(foldableLazy);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(foldableLazy);\nvar foldMap = /* #__PURE__ */ Data_Foldable.foldMap(foldableLazy);\nvar foldableWithIndexLazy = {\n    foldrWithIndex: function (f) {\n        return foldr(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap1 = foldMap(dictMonoid);\n        return function (f) {\n            return foldMap1(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return foldableLazy;\n    }\n};\nvar traversableLazy = {\n    traverse: function (dictApplicative) {\n        var map1 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (f) {\n            return function (l) {\n                return map1(function ($103) {\n                    return $foreign.defer(Data_Function[\"const\"]($103));\n                })(f($foreign.force(l)));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map1 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (l) {\n            return map1(function ($104) {\n                return $foreign.defer(Data_Function[\"const\"]($104));\n            })($foreign.force(l));\n        };\n    },\n    Functor0: function () {\n        return functorLazy;\n    },\n    Foldable1: function () {\n        return foldableLazy;\n    }\n};\nvar traverse = /* #__PURE__ */ Data_Traversable.traverse(traversableLazy);\nvar traversableWithIndexLazy = {\n    traverseWithIndex: function (dictApplicative) {\n        var traverse1 = traverse(dictApplicative);\n        return function (f) {\n            return traverse1(f(Data_Unit.unit));\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexLazy;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexLazy;\n    },\n    Traversable2: function () {\n        return traversableLazy;\n    }\n};\nvar foldable1Lazy = {\n    foldMap1: function (dictSemigroup) {\n        return function (f) {\n            return function (l) {\n                return f($foreign.force(l));\n            };\n        };\n    },\n    foldr1: function (v) {\n        return function (l) {\n            return $foreign.force(l);\n        };\n    },\n    foldl1: function (v) {\n        return function (l) {\n            return $foreign.force(l);\n        };\n    },\n    Foldable0: function () {\n        return foldableLazy;\n    }\n};\nvar traversable1Lazy = {\n    traverse1: function (dictApply) {\n        var map1 = Data_Functor.map(dictApply.Functor0());\n        return function (f) {\n            return function (l) {\n                return map1(function ($105) {\n                    return $foreign.defer(Data_Function[\"const\"]($105));\n                })(f($foreign.force(l)));\n            };\n        };\n    },\n    sequence1: function (dictApply) {\n        var map1 = Data_Functor.map(dictApply.Functor0());\n        return function (l) {\n            return map1(function ($106) {\n                return $foreign.defer(Data_Function[\"const\"]($106));\n            })($foreign.force(l));\n        };\n    },\n    Foldable10: function () {\n        return foldable1Lazy;\n    },\n    Traversable1: function () {\n        return traversableLazy;\n    }\n};\nvar extendLazy = {\n    extend: function (f) {\n        return function (x) {\n            return $foreign.defer(function (v) {\n                return f(x);\n            });\n        };\n    },\n    Functor0: function () {\n        return functorLazy;\n    }\n};\nvar eqLazy = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return {\n        eq: function (x) {\n            return function (y) {\n                return eq($foreign.force(x))($foreign.force(y));\n            };\n        }\n    };\n};\nvar ordLazy = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqLazy1 = eqLazy(dictOrd.Eq0());\n    return {\n        compare: function (x) {\n            return function (y) {\n                return compare($foreign.force(x))($foreign.force(y));\n            };\n        },\n        Eq0: function () {\n            return eqLazy1;\n        }\n    };\n};\nvar eq1Lazy = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqLazy(dictEq));\n    }\n};\nvar ord1Lazy = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordLazy(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Lazy;\n    }\n};\nvar comonadLazy = {\n    extract: $foreign.force,\n    Extend0: function () {\n        return extendLazy;\n    }\n};\nvar commutativeRingLazy = function (dictCommutativeRing) {\n    var ringLazy1 = ringLazy(dictCommutativeRing.Ring0());\n    return {\n        Ring0: function () {\n            return ringLazy1;\n        }\n    };\n};\nvar euclideanRingLazy = function (dictEuclideanRing) {\n    var div = Data_EuclideanRing.div(dictEuclideanRing);\n    var mod = Data_EuclideanRing.mod(dictEuclideanRing);\n    var commutativeRingLazy1 = commutativeRingLazy(dictEuclideanRing.CommutativeRing0());\n    return {\n        degree: (function () {\n            var $107 = Data_EuclideanRing.degree(dictEuclideanRing);\n            return function ($108) {\n                return $107($foreign.force($108));\n            };\n        })(),\n        div: function (a) {\n            return function (b) {\n                return $foreign.defer(function (v) {\n                    return div($foreign.force(a))($foreign.force(b));\n                });\n            };\n        },\n        mod: function (a) {\n            return function (b) {\n                return $foreign.defer(function (v) {\n                    return mod($foreign.force(a))($foreign.force(b));\n                });\n            };\n        },\n        CommutativeRing0: function () {\n            return commutativeRingLazy1;\n        }\n    };\n};\nvar boundedLazy = function (dictBounded) {\n    var top = Data_Bounded.top(dictBounded);\n    var bottom = Data_Bounded.bottom(dictBounded);\n    var ordLazy1 = ordLazy(dictBounded.Ord0());\n    return {\n        top: $foreign.defer(function (v) {\n            return top;\n        }),\n        bottom: $foreign.defer(function (v) {\n            return bottom;\n        }),\n        Ord0: function () {\n            return ordLazy1;\n        }\n    };\n};\nvar applyLazy = {\n    apply: function (f) {\n        return function (x) {\n            return $foreign.defer(function (v) {\n                return $foreign.force(f)($foreign.force(x));\n            });\n        };\n    },\n    Functor0: function () {\n        return functorLazy;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyLazy);\nvar bindLazy = {\n    bind: function (l) {\n        return function (f) {\n            return $foreign.defer(function (v) {\n                return $foreign.force(f($foreign.force(l)));\n            });\n        };\n    },\n    Apply0: function () {\n        return applyLazy;\n    }\n};\nvar heytingAlgebraLazy = function (dictHeytingAlgebra) {\n    var ff = Data_HeytingAlgebra.ff(dictHeytingAlgebra);\n    var tt = Data_HeytingAlgebra.tt(dictHeytingAlgebra);\n    var implies = Data_HeytingAlgebra.implies(dictHeytingAlgebra);\n    var conj = Data_HeytingAlgebra.conj(dictHeytingAlgebra);\n    var disj = Data_HeytingAlgebra.disj(dictHeytingAlgebra);\n    var not = Data_HeytingAlgebra.not(dictHeytingAlgebra);\n    return {\n        ff: $foreign.defer(function (v) {\n            return ff;\n        }),\n        tt: $foreign.defer(function (v) {\n            return tt;\n        }),\n        implies: function (a) {\n            return function (b) {\n                return apply(map(implies)(a))(b);\n            };\n        },\n        conj: function (a) {\n            return function (b) {\n                return apply(map(conj)(a))(b);\n            };\n        },\n        disj: function (a) {\n            return function (b) {\n                return apply(map(disj)(a))(b);\n            };\n        },\n        not: function (a) {\n            return map(not)(a);\n        }\n    };\n};\nvar booleanAlgebraLazy = function (dictBooleanAlgebra) {\n    var heytingAlgebraLazy1 = heytingAlgebraLazy(dictBooleanAlgebra.HeytingAlgebra0());\n    return {\n        HeytingAlgebra0: function () {\n            return heytingAlgebraLazy1;\n        }\n    };\n};\nvar applicativeLazy = {\n    pure: function (a) {\n        return $foreign.defer(function (v) {\n            return a;\n        });\n    },\n    Apply0: function () {\n        return applyLazy;\n    }\n};\nvar monadLazy = {\n    Applicative0: function () {\n        return applicativeLazy;\n    },\n    Bind1: function () {\n        return bindLazy;\n    }\n};\nexport {\n    defer,\n    force\n} from \"./foreign.js\";\nexport {\n    semiringLazy,\n    ringLazy,\n    commutativeRingLazy,\n    euclideanRingLazy,\n    eqLazy,\n    eq1Lazy,\n    ordLazy,\n    ord1Lazy,\n    boundedLazy,\n    semigroupLazy,\n    monoidLazy,\n    heytingAlgebraLazy,\n    booleanAlgebraLazy,\n    functorLazy,\n    functorWithIndexLazy,\n    foldableLazy,\n    foldableWithIndexLazy,\n    foldable1Lazy,\n    traversableLazy,\n    traversableWithIndexLazy,\n    traversable1Lazy,\n    invariantLazy,\n    applyLazy,\n    applicativeLazy,\n    bindLazy,\n    monadLazy,\n    extendLazy,\n    comonadLazy,\n    showLazy,\n    lazyLazy\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_Cont_Trans from \"../Control.Monad.Cont.Trans/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Control_Monad_List_Trans from \"../Control.Monad.List.Trans/index.js\";\nimport * as Control_Monad_Maybe_Trans from \"../Control.Monad.Maybe.Trans/index.js\";\nimport * as Control_Monad_RWS_Trans from \"../Control.Monad.RWS.Trans/index.js\";\nimport * as Control_Monad_Reader_Trans from \"../Control.Monad.Reader.Trans/index.js\";\nimport * as Control_Monad_State_Trans from \"../Control.Monad.State.Trans/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Trans from \"../Control.Monad.Writer.Trans/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT);\nvar lift1 = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT);\nvar lift2 = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT);\nvar lift3 = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT);\nvar lift4 = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT);\nvar lift5 = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT);\nvar monadAffAff = {\n    liftAff: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    MonadEffect0: function () {\n        return Effect_Aff.monadEffectAff;\n    }\n};\nvar liftAff = function (dict) {\n    return dict.liftAff;\n};\nvar monadAffContT = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var monadEffectContT = Control_Monad_Cont_Trans.monadEffectContT(MonadEffect0);\n    return {\n        liftAff: (function () {\n            var $65 = lift(MonadEffect0.Monad0());\n            var $66 = liftAff(dictMonadAff);\n            return function ($67) {\n                return $65($66($67));\n            };\n        })(),\n        MonadEffect0: function () {\n            return monadEffectContT;\n        }\n    };\n};\nvar monadAffExceptT = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var monadEffectExceptT = Control_Monad_Except_Trans.monadEffectExceptT(MonadEffect0);\n    return {\n        liftAff: (function () {\n            var $68 = lift1(MonadEffect0.Monad0());\n            var $69 = liftAff(dictMonadAff);\n            return function ($70) {\n                return $68($69($70));\n            };\n        })(),\n        MonadEffect0: function () {\n            return monadEffectExceptT;\n        }\n    };\n};\nvar monadAffListT = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var monadEffectListT = Control_Monad_List_Trans.monadEffectListT(MonadEffect0);\n    return {\n        liftAff: (function () {\n            var $71 = lift2(MonadEffect0.Monad0());\n            var $72 = liftAff(dictMonadAff);\n            return function ($73) {\n                return $71($72($73));\n            };\n        })(),\n        MonadEffect0: function () {\n            return monadEffectListT;\n        }\n    };\n};\nvar monadAffMaybe = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var monadEffectMaybe = Control_Monad_Maybe_Trans.monadEffectMaybe(MonadEffect0);\n    return {\n        liftAff: (function () {\n            var $74 = lift3(MonadEffect0.Monad0());\n            var $75 = liftAff(dictMonadAff);\n            return function ($76) {\n                return $74($75($76));\n            };\n        })(),\n        MonadEffect0: function () {\n            return monadEffectMaybe;\n        }\n    };\n};\nvar monadAffRWS = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var Monad0 = MonadEffect0.Monad0();\n    var liftAff1 = liftAff(dictMonadAff);\n    return function (dictMonoid) {\n        var monadEffectRWS = Control_Monad_RWS_Trans.monadEffectRWS(dictMonoid)(MonadEffect0);\n        return {\n            liftAff: (function () {\n                var $77 = Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(Monad0);\n                return function ($78) {\n                    return $77(liftAff1($78));\n                };\n            })(),\n            MonadEffect0: function () {\n                return monadEffectRWS;\n            }\n        };\n    };\n};\nvar monadAffReader = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var monadEffectReader = Control_Monad_Reader_Trans.monadEffectReader(MonadEffect0);\n    return {\n        liftAff: (function () {\n            var $79 = lift4(MonadEffect0.Monad0());\n            var $80 = liftAff(dictMonadAff);\n            return function ($81) {\n                return $79($80($81));\n            };\n        })(),\n        MonadEffect0: function () {\n            return monadEffectReader;\n        }\n    };\n};\nvar monadAffState = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var monadEffectState = Control_Monad_State_Trans.monadEffectState(MonadEffect0);\n    return {\n        liftAff: (function () {\n            var $82 = lift5(MonadEffect0.Monad0());\n            var $83 = liftAff(dictMonadAff);\n            return function ($84) {\n                return $82($83($84));\n            };\n        })(),\n        MonadEffect0: function () {\n            return monadEffectState;\n        }\n    };\n};\nvar monadAffWriter = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var Monad0 = MonadEffect0.Monad0();\n    var liftAff1 = liftAff(dictMonadAff);\n    return function (dictMonoid) {\n        var monadEffectWriter = Control_Monad_Writer_Trans.monadEffectWriter(dictMonoid)(MonadEffect0);\n        return {\n            liftAff: (function () {\n                var $85 = Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(Monad0);\n                return function ($86) {\n                    return $85(liftAff1($86));\n                };\n            })(),\n            MonadEffect0: function () {\n                return monadEffectWriter;\n            }\n        };\n    };\n};\nexport {\n    liftAff,\n    monadAffAff,\n    monadAffContT,\n    monadAffExceptT,\n    monadAffListT,\n    monadAffMaybe,\n    monadAffReader,\n    monadAffRWS,\n    monadAffState,\n    monadAffWriter\n};\n","export const log = function (s) {\n  return function () {\n    console.log(s);\n  };\n};\n\nexport const warn = function (s) {\n  return function () {\n    console.warn(s);\n  };\n};\n\nexport const error = function (s) {\n  return function () {\n    console.error(s);\n  };\n};\n\nexport const info = function (s) {\n  return function () {\n    console.info(s);\n  };\n};\n\nexport const debug = function (s) {\n  return function () {\n    console.debug(s);\n  };\n};\n\nexport const time = function (s) {\n  return function () {\n    console.time(s);\n  };\n};\n\nexport const timeLog = function (s) {\n  return function () {\n    console.timeLog(s);\n  };\n};\n\nexport const timeEnd = function (s) {\n  return function () {\n    console.timeEnd(s);\n  };\n};\n\nexport const clear = function () {\n  console.clear();\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar warnShow = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (a) {\n        return $foreign.warn(show(a));\n    };\n};\nvar logShow = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (a) {\n        return $foreign.log(show(a));\n    };\n};\nvar infoShow = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (a) {\n        return $foreign.info(show(a));\n    };\n};\nvar errorShow = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (a) {\n        return $foreign.error(show(a));\n    };\n};\nvar debugShow = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (a) {\n        return $foreign.debug(show(a));\n    };\n};\nexport {\n    log,\n    warn,\n    error,\n    info,\n    debug,\n    time,\n    timeLog,\n    timeEnd,\n    clear\n} from \"./foreign.js\";\nexport {\n    logShow,\n    warnShow,\n    errorShow,\n    infoShow,\n    debugShow\n};\n","var getEffProp = function (name) {\n  return function (node) {\n    return function () {\n      return node[name];\n    };\n  };\n};\n\nexport const children = getEffProp(\"children\");\nexport const _firstElementChild = getEffProp(\"firstElementChild\");\nexport const _lastElementChild = getEffProp(\"lastElementChild\");\nexport const childElementCount = getEffProp(\"childElementCount\");\n\nexport function _querySelector(selector) {\n  return function (node) {\n    return function () {\n      return node.querySelector(selector);\n    };\n  };\n}\n\nexport function querySelectorAll(selector) {\n  return function (node) {\n    return function () {\n      return node.querySelectorAll(selector);\n    };\n  };\n}\n","/* eslint-disable no-eq-null, eqeqeq */\n\nconst nullImpl = null;\nexport { nullImpl as null };\n\nexport function nullable(a, r, f) {\n  return a == null ? r : f(a);\n}\n\nexport function notNull(x) {\n  return x;\n}\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar toNullable = /* #__PURE__ */ Data_Maybe.maybe($foreign[\"null\"])($foreign.notNull);\nvar toMaybe = function (n) {\n    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);\n};\nvar showNullable = function (dictShow) {\n    return {\n        show: (function () {\n            var $17 = Data_Maybe.maybe(\"null\")(Data_Show.show(dictShow));\n            return function ($18) {\n                return $17(toMaybe($18));\n            };\n        })()\n    };\n};\nvar eqNullable = function (dictEq) {\n    return {\n        eq: Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe)\n    };\n};\nvar ordNullable = function (dictOrd) {\n    var eqNullable1 = eqNullable(dictOrd.Eq0());\n    return {\n        compare: Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe),\n        Eq0: function () {\n            return eqNullable1;\n        }\n    };\n};\nvar eq1Nullable = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqNullable(dictEq));\n    }\n};\nvar ord1Nullable = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordNullable(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Nullable;\n    }\n};\nexport {\n    null,\n    notNull\n} from \"./foreign.js\";\nexport {\n    toMaybe,\n    toNullable,\n    showNullable,\n    eqNullable,\n    eq1Nullable,\n    ordNullable,\n    ord1Nullable\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar QuerySelector = function (x) {\n    return x;\n};\nvar querySelector = function (qs) {\n    var $2 = map(Data_Nullable.toMaybe);\n    var $3 = $foreign[\"_querySelector\"](qs);\n    return function ($4) {\n        return $2($3($4));\n    };\n};\nvar ordQuerySelector = Data_Ord.ordString;\nvar newtypeQuerySelector = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar lastElementChild = /* #__PURE__ */ (function () {\n    var $5 = map(Data_Nullable.toMaybe);\n    return function ($6) {\n        return $5($foreign[\"_lastElementChild\"]($6));\n    };\n})();\nvar firstElementChild = /* #__PURE__ */ (function () {\n    var $7 = map(Data_Nullable.toMaybe);\n    return function ($8) {\n        return $7($foreign[\"_firstElementChild\"]($8));\n    };\n})();\nvar eqQuerySelector = Data_Eq.eqString;\nexport {\n    children,\n    childElementCount,\n    querySelectorAll\n} from \"./foreign.js\";\nexport {\n    firstElementChild,\n    lastElementChild,\n    QuerySelector,\n    querySelector,\n    eqQuerySelector,\n    ordQuerySelector,\n    newtypeQuerySelector\n};\n","export function eventListener(fn) {\n  return function () {\n    return function (event) {\n      return fn(event)();\n    };\n  };\n}\n\nexport function addEventListenerWithOptions(type) {\n  return function (listener) {\n    return function (options) {\n      return function (target) {\n        return function () {\n          return target.addEventListener(type, listener, options);\n        };\n      };\n    };\n  };\n}\n\nexport function addEventListener(type) {\n  return function (listener) {\n    return function (useCapture) {\n      return function (target) {\n        return function () {\n          return target.addEventListener(type, listener, useCapture);\n        };\n      };\n    };\n  };\n}\n\nexport function removeEventListener(type) {\n  return function (listener) {\n    return function (useCapture) {\n      return function (target) {\n        return function () {\n          return target.removeEventListener(type, listener, useCapture);\n        };\n      };\n    };\n  };\n}\n\nexport function dispatchEvent(event) {\n  return function (target) {\n    return function () {\n      return target.dispatchEvent(event);\n    };\n  };\n}\n","const windowImpl = function () {\n  return window;\n};\nexport { windowImpl as window };\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nvar unsafeReadProtoTagged = function (name) {\n    return function (value) {\n        return $foreign[\"_unsafeReadProtoTagged\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);\n    };\n};\nexport {\n    unsafeReadProtoTagged\n};\n","export function _unsafeReadProtoTagged(nothing, just, name, value) {\n  if (typeof window !== \"undefined\") {\n    var ty = window[name];\n    if (ty != null && value instanceof ty) {\n      return just(value);\n    }\n  }\n  var obj = value;\n  while (obj != null) {\n    var proto = Object.getPrototypeOf(obj);\n    var constructorName = proto.constructor.name;\n    if (constructorName === name) {\n      return just(value);\n    } else if (constructorName === \"Object\") {\n      return nothing;\n    }\n    obj = proto;\n  }\n  return nothing;\n}\n","// Generated by purs version 0.15.7\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nvar Loading = /* #__PURE__ */ (function () {\n    function Loading() {\n\n    };\n    Loading.value = new Loading();\n    return Loading;\n})();\nvar Interactive = /* #__PURE__ */ (function () {\n    function Interactive() {\n\n    };\n    Interactive.value = new Interactive();\n    return Interactive;\n})();\nvar Complete = /* #__PURE__ */ (function () {\n    function Complete() {\n\n    };\n    Complete.value = new Complete();\n    return Complete;\n})();\nvar showReadyState = {\n    show: function (v) {\n        if (v instanceof Loading) {\n            return \"Loading\";\n        };\n        if (v instanceof Interactive) {\n            return \"Interactive\";\n        };\n        if (v instanceof Complete) {\n            return \"Complete\";\n        };\n        throw new Error(\"Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 16, column 10 - line 19, column 27): \" + [ v.constructor.name ]);\n    }\n};\nvar print = function (v) {\n    if (v instanceof Loading) {\n        return \"loading\";\n    };\n    if (v instanceof Interactive) {\n        return \"interactive\";\n    };\n    if (v instanceof Complete) {\n        return \"complete\";\n    };\n    throw new Error(\"Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 22, column 9 - line 25, column 25): \" + [ v.constructor.name ]);\n};\nvar parse = function (v) {\n    if (v === \"loading\") {\n        return new Data_Maybe.Just(Loading.value);\n    };\n    if (v === \"interactive\") {\n        return new Data_Maybe.Just(Interactive.value);\n    };\n    if (v === \"complete\") {\n        return new Data_Maybe.Just(Complete.value);\n    };\n    return Data_Maybe.Nothing.value;\n};\nvar eqReadyState = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof Loading && y instanceof Loading) {\n                return true;\n            };\n            if (x instanceof Interactive && y instanceof Interactive) {\n                return true;\n            };\n            if (x instanceof Complete && y instanceof Complete) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar ordReadyState = {\n    compare: function (x) {\n        return function (y) {\n            if (x instanceof Loading && y instanceof Loading) {\n                return Data_Ordering.EQ.value;\n            };\n            if (x instanceof Loading) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof Loading) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof Interactive && y instanceof Interactive) {\n                return Data_Ordering.EQ.value;\n            };\n            if (x instanceof Interactive) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof Interactive) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof Complete && y instanceof Complete) {\n                return Data_Ordering.EQ.value;\n            };\n            throw new Error(\"Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return eqReadyState;\n    }\n};\nexport {\n    Loading,\n    Interactive,\n    Complete,\n    print,\n    parse,\n    eqReadyState,\n    ordReadyState,\n    showReadyState\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_HTML_HTMLDocument_ReadyState from \"../Web.HTML.HTMLDocument.ReadyState/index.js\";\nimport * as Web_HTML_HTMLDocument_VisibilityState from \"../Web.HTML.HTMLDocument.VisibilityState/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar visibilityState = function (doc) {\n    return map((function () {\n        var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_VisibilityState.Visible.value);\n        return function ($3) {\n            return $2(Web_HTML_HTMLDocument_VisibilityState.parse($3));\n        };\n    })())(function () {\n        return $foreign[\"_visibilityState\"](doc);\n    });\n};\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toDocument = Unsafe_Coerce.unsafeCoerce;\nvar title = function (doc) {\n    return function () {\n        return $foreign[\"_title\"](doc);\n    };\n};\nvar setTitle = function (newTitle) {\n    return function (doc) {\n        return function () {\n            return $foreign[\"_setTitle\"](newTitle, doc);\n        };\n    };\n};\nvar referrer = function (doc) {\n    return function () {\n        return $foreign[\"_referrer\"](doc);\n    };\n};\nvar readyState = function (doc) {\n    return map((function () {\n        var $4 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);\n        return function ($5) {\n            return $4(Web_HTML_HTMLDocument_ReadyState.parse($5));\n        };\n    })())(function () {\n        return $foreign[\"_readyState\"](doc);\n    });\n};\nvar head = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_head\"](doc);\n    });\n};\nvar fromParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromNonElementParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromDocument = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar documentElement = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_documentElement\"](doc);\n    });\n};\nvar currentScript = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_currentScript\"](doc);\n    });\n};\nvar body = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_body\"](doc);\n    });\n};\nvar activeElement = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_activeElement\"](doc);\n    });\n};\nexport {\n    fromDocument,\n    fromNode,\n    fromParentNode,\n    fromNonElementParentNode,\n    fromEventTarget,\n    toDocument,\n    toNode,\n    toParentNode,\n    toNonElementParentNode,\n    toEventTarget,\n    documentElement,\n    head,\n    body,\n    readyState,\n    visibilityState,\n    activeElement,\n    currentScript,\n    referrer,\n    title,\n    setTitle\n};\n","export function _documentElement(doc) {\n  return doc.documentElement;\n}\n\nexport function _head(doc) {\n  return doc.head;\n}\n\nexport function _body(doc) {\n  return doc.body;\n}\n\nexport function _readyState(doc) {\n  return doc.readyState;\n}\n\nexport function _visibilityState(doc) {\n  return doc.readyState;\n}\n\nexport function _activeElement(doc) {\n  return doc.activeElement;\n}\n\nexport function _currentScript(doc) {\n  return doc.currentScript;\n}\n\nexport function _referrer(doc) {\n  return doc.referrer;\n}\n\nexport function _title(doc) {\n  return doc.title;\n}\n\nexport function _setTitle(title, doc) {\n  doc.title = title;\n}\n","export function _read(nothing, just, value) {\n  var tag = Object.prototype.toString.call(value);\n  if (tag.indexOf(\"[object HTML\") === 0 && tag.indexOf(\"Element]\") === tag.length - 8) {\n    return just(value);\n  } else {\n    return nothing;\n  }\n}\n\n// ----------------------------------------------------------------------------\n\nexport function title(elt) {\n  return function () {\n    return elt.title;\n  };\n}\n\nexport function setTitle(title) {\n  return function (elt) {\n    return function () {\n      elt.title = title;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function lang(elt) {\n  return function () {\n    return elt.lang;\n  };\n}\n\nexport function setLang(lang) {\n  return function (elt) {\n    return function () {\n      elt.lang = lang;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function dir(elt) {\n  return function () {\n    return elt.dir;\n  };\n}\n\nexport function setDir(dir) {\n  return function (elt) {\n    return function () {\n      elt.dir = dir;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function hidden(elt) {\n  return function () {\n    return elt.hidden;\n  };\n}\n\nexport function setHidden(hidden) {\n  return function (elt) {\n    return function () {\n      elt.hidden = hidden;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function tabIndex(elt) {\n  return function () {\n    return elt.tabIndex;\n  };\n}\n\nexport function setTabIndex(tabIndex) {\n  return function (elt) {\n    return function () {\n      elt.tabIndex = tabIndex;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function draggable(elt) {\n  return function () {\n    return elt.draggable;\n  };\n}\n\nexport function setDraggable(draggable) {\n  return function (elt) {\n    return function () {\n      elt.draggable = draggable;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function contentEditable(elt) {\n  return function () {\n    return elt.contentEditable;\n  };\n}\n\nexport function setContentEditable(contentEditable) {\n  return function (elt) {\n    return function () {\n      elt.contentEditable = contentEditable;\n    };\n  };\n}\n\nexport function isContentEditable(elt) {\n  return function () {\n    return elt.isContentEditable;\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function spellcheck(elt) {\n  return function () {\n    return elt.spellcheck;\n  };\n}\n\nexport function setSpellcheck(spellcheck) {\n  return function (elt) {\n    return function () {\n      elt.spellcheck = spellcheck;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function click(elt) {\n  return function () {\n    return elt.click();\n  };\n}\n\nexport function focus(elt) {\n  return function () {\n    return elt.focus();\n  };\n}\n\nexport function blur(elt) {\n  return function () {\n    return elt.blur();\n  };\n}\n\n// - CSSOM ---------------------------------------------------------------------\n\nexport function _offsetParent(el) {\n  return function () {\n    return el.offsetParent;\n  };\n}\n\nexport function offsetTop(el) {\n  return function () {\n    return el.offsetTop;\n  };\n}\n\nexport function offsetLeft(el) {\n  return function () {\n    return el.offsetLeft;\n  };\n}\n\nexport function offsetWidth(el) {\n  return function () {\n    return el.offsetWidth;\n  };\n}\n\nexport function offsetHeight(el) {\n  return function () {\n    return el.offsetHeight;\n  };\n}\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toElement = Unsafe_Coerce.unsafeCoerce;\nvar toChildNode = Unsafe_Coerce.unsafeCoerce;\nvar offsetParent = /* #__PURE__ */ (function () {\n    var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($3) {\n        return $2($foreign[\"_offsetParent\"]($3));\n    };\n})();\nvar fromParentNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromNonDocumentTypeChildNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromEventTarget = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromElement = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromChildNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nexport {\n    title,\n    setTitle,\n    lang,\n    setLang,\n    dir,\n    setDir,\n    hidden,\n    setHidden,\n    tabIndex,\n    setTabIndex,\n    draggable,\n    setDraggable,\n    contentEditable,\n    setContentEditable,\n    isContentEditable,\n    spellcheck,\n    setSpellcheck,\n    click,\n    focus,\n    blur,\n    offsetTop,\n    offsetLeft,\n    offsetWidth,\n    offsetHeight\n} from \"./foreign.js\";\nexport {\n    fromElement,\n    fromNode,\n    fromChildNode,\n    fromNonDocumentTypeChildNode,\n    fromParentNode,\n    fromEventTarget,\n    toElement,\n    toNode,\n    toChildNode,\n    toNonDocumentTypeChildNode,\n    toParentNode,\n    toEventTarget,\n    offsetParent\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toHTMLElement = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toElement = Unsafe_Coerce.unsafeCoerce;\nvar toChildNode = Unsafe_Coerce.unsafeCoerce;\nvar fromParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLIFrameElement\");\nvar fromNonDocumentTypeChildNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLIFrameElement\");\nvar fromNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLIFrameElement\");\nvar fromHTMLElement = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLIFrameElement\");\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLIFrameElement\");\nvar fromElement = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLIFrameElement\");\nvar fromChildNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLIFrameElement\");\nvar contentWindow = /* #__PURE__ */ (function () {\n    var $2 = map(Data_Nullable.toMaybe);\n    return function ($3) {\n        return $2($foreign[\"_contentWindow\"]($3));\n    };\n})();\nvar contentDocument = /* #__PURE__ */ (function () {\n    var $4 = map(Data_Nullable.toMaybe);\n    return function ($5) {\n        return $4($foreign[\"_contentDocument\"]($5));\n    };\n})();\nexport {\n    src,\n    setSrc,\n    srcdoc,\n    setSrcdoc,\n    name,\n    setName,\n    width,\n    setWidth,\n    height,\n    setHeight\n} from \"./foreign.js\";\nexport {\n    fromHTMLElement,\n    fromElement,\n    fromNode,\n    fromChildNode,\n    fromNonDocumentTypeChildNode,\n    fromParentNode,\n    fromEventTarget,\n    toHTMLElement,\n    toElement,\n    toNode,\n    toChildNode,\n    toNonDocumentTypeChildNode,\n    toParentNode,\n    toEventTarget,\n    contentDocument,\n    contentWindow\n};\n","export function src(iframe) {\n  return function () {\n    return iframe.src;\n  };\n}\n\nexport function setSrc(src) {\n  return function (iframe) {\n    return function () {\n      iframe.src = src;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function srcdoc(iframe) {\n  return function () {\n    return iframe.srcdoc;\n  };\n}\n\nexport function setSrcdoc(srcdoc) {\n  return function (iframe) {\n    return function () {\n      iframe.srcdoc = srcdoc;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function name(iframe) {\n  return function () {\n    return iframe.name;\n  };\n}\n\nexport function setName(name) {\n  return function (iframe) {\n    return function () {\n      iframe.name = name;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function width(iframe) {\n  return function () {\n    return iframe.width;\n  };\n}\n\nexport function setWidth(width) {\n  return function (iframe) {\n    return function () {\n      iframe.width = width;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function height(iframe) {\n  return function () {\n    return iframe.height;\n  };\n}\n\nexport function setHeight(height) {\n  return function (iframe) {\n    return function () {\n      iframe.height = height;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function _contentDocument(iframe) {\n  return function () {\n    return iframe.contentDocument;\n  };\n}\n\nexport function _contentWindow(iframe) {\n  return function () {\n    return iframe.contentWindow;\n  };\n}\n","export function document(window) {\n  return function () {\n    return window.document;\n  };\n}\n\nexport function navigator(window) {\n  return function () {\n    return window.navigator;\n  };\n}\n\nexport function location(window) {\n  return function () {\n    return window.location;\n  };\n}\n\nexport function history(window) {\n  return function() {\n    return window.history;\n  };\n}\n\nexport function innerWidth(window) {\n  return function () {\n    return window.innerWidth;\n  };\n}\n\nexport function innerHeight(window) {\n  return function () {\n    return window.innerHeight;\n  };\n}\n\nexport function alert(str) {\n  return function (window) {\n    return function () {\n      window.alert(str);\n    };\n  };\n}\n\nexport function confirm(str) {\n  return function (window) {\n    return function () {\n      return window.confirm(str);\n    };\n  };\n}\n\nexport function moveBy(xDelta) {\n  return function (yDelta) {\n    return function (window) {\n      return function () {\n        window.moveBy(xDelta, yDelta);\n      };\n    };\n  };\n}\n\nexport function moveTo(width) {\n  return function (height) {\n    return function (window) {\n      return function () {\n        window.moveTo(width, height);\n      };\n    };\n  };\n}\n\nexport function _open(url) {\n  return function (name) {\n    return function (features) {\n      return function (window) {\n        return function () {\n          return window.open(url, name, features);\n        };\n      };\n    };\n  };\n}\n\nexport function close(window) {\n  return function () {\n    return window.close();\n  };\n}\n\nexport function outerHeight(window) {\n  return function () {\n    return window.outerHeight;\n  };\n}\n\nexport function outerWidth(window) {\n  return function () {\n    return window.outerWidth;\n  };\n}\n\nexport function print(window) {\n  return function () {\n    window.print();\n  };\n}\n\nexport function _prompt(str) {\n  return function (defaultText) {\n    return function (window) {\n      return function () {\n        return window.prompt(str, defaultText);\n      };\n    };\n  };\n}\n\nexport function resizeBy(xDelta) {\n  return function (yDelta) {\n    return function (window) {\n      return function () {\n        window.resizeBy(xDelta, yDelta);\n      };\n    };\n  };\n}\n\nexport function resizeTo(width) {\n  return function (height) {\n    return function (window) {\n      return function () {\n        window.resizeTo(width, height);\n      };\n    };\n  };\n}\n\nexport function screenX(window) {\n  return function () {\n    return window.screenX;\n  };\n}\n\nexport function screenY(window) {\n  return function () {\n    return window.screenY;\n  };\n}\n\nexport function scroll(xCoord) {\n  return function (yCoord) {\n    return function (window) {\n      return function () {\n        window.scroll(xCoord, yCoord);\n      };\n    };\n  };\n}\n\nexport function scrollBy(xCoord) {\n  return function (yCoord) {\n    return function (window) {\n      return function () {\n        window.scrollBy(xCoord, yCoord);\n      };\n    };\n  };\n}\n\nexport function scrollX(window) {\n  return function () {\n    return window.scrollX;\n  };\n}\n\nexport function scrollY(window) {\n  return function () {\n    return window.scrollY;\n  };\n}\n\nexport function localStorage(window) {\n  return function () {\n    return window.localStorage;\n  };\n}\n\nexport function sessionStorage(window) {\n  return function () {\n    return window.sessionStorage;\n  };\n}\n\nexport function requestAnimationFrame(fn) {\n  return function(window) {\n    return function() {\n      return window.requestAnimationFrame(fn);\n    };\n  };\n}\n\nexport function cancelAnimationFrame(id) {\n  return function(window) {\n    return function() {\n      return window.cancelAnimationFrame(id);\n    };\n  };\n}\n\nexport function requestIdleCallback(opts) {\n  return function(fn) {\n    return function(window) {\n      return function() {\n        return window.requestIdleCallback(fn, opts);\n      };\n    };\n  };\n}\n\nexport function cancelIdleCallback(id) {\n  return function(window) {\n    return function() {\n      return window.cancelIdleCallback(id);\n    };\n  };\n}\n\nexport function parent(window) {\n  return function() {\n    return window.parent;\n  };\n}\n\nexport function _opener(window) {\n  return function() {\n    return window.opener;\n  };\n}\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordInt);\nvar RequestIdleCallbackId = function (x) {\n    return x;\n};\nvar RequestAnimationFrameId = function (x) {\n    return x;\n};\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar promptDefault = function (msg) {\n    return function (defaultText) {\n        return function (window) {\n            return map(Data_Nullable.toMaybe)($foreign[\"_prompt\"](msg)(defaultText)(window));\n        };\n    };\n};\nvar prompt = function (msg) {\n    return function (window) {\n        return map(Data_Nullable.toMaybe)($foreign[\"_prompt\"](msg)(\"\")(window));\n    };\n};\nvar opener = function (window) {\n    return map(Data_Nullable.toMaybe)($foreign[\"_opener\"](window));\n};\nvar open = function (url$prime) {\n    return function (name) {\n        return function (features) {\n            return function (window) {\n                return map(Data_Nullable.toMaybe)($foreign[\"_open\"](url$prime)(name)(features)(window));\n            };\n        };\n    };\n};\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Window\");\nvar eqRequestIdleCallbackId = {\n    eq: function (x) {\n        return function (y) {\n            return x === y;\n        };\n    }\n};\nvar ordRequestIdleCallbackId = {\n    compare: function (x) {\n        return function (y) {\n            return compare(x)(y);\n        };\n    },\n    Eq0: function () {\n        return eqRequestIdleCallbackId;\n    }\n};\nvar eqRequestAnimationFrameId = {\n    eq: function (x) {\n        return function (y) {\n            return x === y;\n        };\n    }\n};\nvar ordRequestAnimationFrameId = {\n    compare: function (x) {\n        return function (y) {\n            return compare(x)(y);\n        };\n    },\n    Eq0: function () {\n        return eqRequestAnimationFrameId;\n    }\n};\nexport {\n    document,\n    navigator,\n    location,\n    history,\n    innerWidth,\n    innerHeight,\n    alert,\n    confirm,\n    moveBy,\n    moveTo,\n    close,\n    outerHeight,\n    outerWidth,\n    print,\n    resizeBy,\n    resizeTo,\n    screenX,\n    screenY,\n    scroll,\n    scrollBy,\n    scrollX,\n    scrollY,\n    localStorage,\n    sessionStorage,\n    requestAnimationFrame,\n    cancelAnimationFrame,\n    requestIdleCallback,\n    cancelIdleCallback,\n    parent\n} from \"./foreign.js\";\nexport {\n    toEventTarget,\n    fromEventTarget,\n    open,\n    prompt,\n    promptDefault,\n    opener,\n    eqRequestAnimationFrameId,\n    ordRequestAnimationFrameId,\n    eqRequestIdleCallbackId,\n    ordRequestIdleCallbackId\n};\n","// Generated by purs version 0.15.7\nvar unload = \"unload\";\nvar toggle = \"toggle\";\nvar submit = \"submit\";\nvar storage = \"storage\";\nvar select = \"select\";\nvar reset = \"reset\";\nvar readystatechange = \"readystatechange\";\nvar progress = \"progress\";\nvar paste = \"paste\";\nvar online = \"online\";\nvar offline = \"offline\";\nvar message = \"message\";\nvar loadstart = \"loadstart\";\nvar loadend = \"loadend\";\nvar load = \"load\";\nvar languagechange = \"languagechange\";\nvar invalid = \"invalid\";\nvar input = \"input\";\nvar focus = \"focus\";\nvar error = \"error\";\nvar domcontentloaded = \"DOMContentLoaded\";\nvar cut = \"cut\";\nvar copy = \"copy\";\nvar close = \"close\";\nvar click = \"click\";\nvar change = \"change\";\nvar cancel = \"cancel\";\nvar blur = \"blur\";\nvar beforescriptexecute = \"beforescriptexecute\";\nvar beforeprint = \"beforeprint\";\nvar afterscriptexecute = \"afterscriptexecute\";\nvar afterprint = \"afterprint\";\nvar abort = \"abort\";\nexport {\n    abort,\n    afterprint,\n    afterscriptexecute,\n    beforeprint,\n    beforescriptexecute,\n    blur,\n    cancel,\n    change,\n    click,\n    close,\n    copy,\n    cut,\n    domcontentloaded,\n    error,\n    focus,\n    input,\n    invalid,\n    languagechange,\n    load,\n    loadend,\n    loadstart,\n    message,\n    offline,\n    online,\n    paste,\n    progress,\n    readystatechange,\n    reset,\n    select,\n    storage,\n    submit,\n    toggle,\n    unload\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Web_DOM_ParentNode from \"../Web.DOM.ParentNode/index.js\";\nimport * as Web_Event_EventTarget from \"../Web.Event.EventTarget/index.js\";\nimport * as Web_HTML from \"../Web.HTML/index.js\";\nimport * as Web_HTML_Event_EventTypes from \"../Web.HTML.Event.EventTypes/index.js\";\nimport * as Web_HTML_HTMLDocument from \"../Web.HTML.HTMLDocument/index.js\";\nimport * as Web_HTML_HTMLDocument_ReadyState from \"../Web.HTML.HTMLDocument.ReadyState/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nimport * as Web_HTML_Window from \"../Web.HTML.Window/index.js\";\nvar bind = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect.bindEffect);\nvar composeKleisliFlipped = /* #__PURE__ */ Control_Bind.composeKleisliFlipped(Effect.bindEffect);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);\nvar bindFlipped1 = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Maybe.bindMaybe);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff);\nvar selectElement = function (query) {\n    return bind(liftEffect(bindFlipped(composeKleisliFlipped((function () {\n        var $16 = Web_DOM_ParentNode.querySelector(query);\n        return function ($17) {\n            return $16(Web_HTML_HTMLDocument.toParentNode($17));\n        };\n    })())(Web_HTML_Window.document))(Web_HTML.window)))(function (mel) {\n        return pure(bindFlipped1(Web_HTML_HTMLElement.fromElement)(mel));\n    });\n};\nvar runHalogenAff = /* #__PURE__ */ Effect_Aff.runAff_(/* #__PURE__ */ Data_Either.either(Effect_Exception.throwException)(/* #__PURE__ */ Data_Function[\"const\"](/* #__PURE__ */ pure1(Data_Unit.unit))));\nvar awaitLoad = /* #__PURE__ */ Effect_Aff.makeAff(function (callback) {\n    return function __do() {\n        var rs = bindFlipped(Web_HTML_HTMLDocument.readyState)(bindFlipped(Web_HTML_Window.document)(Web_HTML.window))();\n        if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {\n            var et = map(Web_HTML_Window.toEventTarget)(Web_HTML.window)();\n            var listener = Web_Event_EventTarget.eventListener(function (v) {\n                return callback(new Data_Either.Right(Data_Unit.unit));\n            })();\n            Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();\n            return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));\n        };\n        callback(new Data_Either.Right(Data_Unit.unit))();\n        return Effect_Aff.nonCanceler;\n    };\n});\nvar awaitBody = /* #__PURE__ */ discard(Effect_Aff.bindAff)(awaitLoad)(function () {\n    return bind(selectElement(\"body\"))(function (body) {\n        return Data_Maybe.maybe(throwError(Effect_Exception.error(\"Could not find body\")))(pure)(body);\n    });\n});\nexport {\n    awaitLoad,\n    awaitBody,\n    selectElement,\n    runHalogenAff\n};\n","// Generated by purs version 0.15.7\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar runExists = Unsafe_Coerce.unsafeCoerce;\nvar mkExists = Unsafe_Coerce.unsafeCoerce;\nexport {\n    mkExists,\n    runExists\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Comonad from \"../Control.Comonad/index.js\";\nimport * as Control_Extend from \"../Control.Extend/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Distributive from \"../Data.Distributive/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Exists from \"../Data.Exists/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup_Foldable from \"../Data.Semigroup.Foldable/index.js\";\nimport * as Data_Semigroup_Traversable from \"../Data.Semigroup.Traversable/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nvar CoyonedaF = /* #__PURE__ */ (function () {\n    function CoyonedaF(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    CoyonedaF.create = function (value0) {\n        return function (value1) {\n            return new CoyonedaF(value0, value1);\n        };\n    };\n    return CoyonedaF;\n})();\nvar Coyoneda = function (x) {\n    return x;\n};\nvar unCoyoneda = function (f) {\n    return function (v) {\n        return Data_Exists.runExists(function (v1) {\n            return f(v1.value0)(v1.value1);\n        })(v);\n    };\n};\nvar lowerCoyoneda = function (dictFunctor) {\n    return unCoyoneda(Data_Functor.map(dictFunctor));\n};\nvar foldableCoyoneda = function (dictFoldable) {\n    var foldr = Data_Foldable.foldr(dictFoldable);\n    var foldl = Data_Foldable.foldl(dictFoldable);\n    var foldMap = Data_Foldable.foldMap(dictFoldable);\n    return {\n        foldr: function (f) {\n            return function (z) {\n                return unCoyoneda(function (k) {\n                    return foldr(function ($175) {\n                        return f(k($175));\n                    })(z);\n                });\n            };\n        },\n        foldl: function (f) {\n            return function (z) {\n                return unCoyoneda(function (k) {\n                    return foldl(function (x) {\n                        var $176 = f(x);\n                        return function ($177) {\n                            return $176(k($177));\n                        };\n                    })(z);\n                });\n            };\n        },\n        foldMap: function (dictMonoid) {\n            var foldMap1 = foldMap(dictMonoid);\n            return function (f) {\n                return unCoyoneda(function (k) {\n                    return foldMap1(function ($178) {\n                        return f(k($178));\n                    });\n                });\n            };\n        }\n    };\n};\nvar foldable1Coyoneda = function (dictFoldable1) {\n    var foldMap1 = Data_Semigroup_Foldable.foldMap1(dictFoldable1);\n    var foldableCoyoneda1 = foldableCoyoneda(dictFoldable1.Foldable0());\n    return {\n        foldMap1: function (dictSemigroup) {\n            var foldMap11 = foldMap1(dictSemigroup);\n            return function (f) {\n                return unCoyoneda(function (k) {\n                    return foldMap11(function ($179) {\n                        return f(k($179));\n                    });\n                });\n            };\n        },\n        foldr1: Data_Semigroup_Foldable.foldr1Default(foldable1Coyoneda(dictFoldable1)),\n        foldl1: Data_Semigroup_Foldable.foldl1Default(foldable1Coyoneda(dictFoldable1)),\n        Foldable0: function () {\n            return foldableCoyoneda1;\n        }\n    };\n};\nvar eqCoyoneda = function (dictFunctor) {\n    var lowerCoyoneda1 = lowerCoyoneda(dictFunctor);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq1(dictEq1);\n        return function (dictEq) {\n            var eq11 = eq1(dictEq);\n            return {\n                eq: function (x) {\n                    return function (y) {\n                        return eq11(lowerCoyoneda1(x))(lowerCoyoneda1(y));\n                    };\n                }\n            };\n        };\n    };\n};\nvar ordCoyoneda = function (dictFunctor) {\n    var lowerCoyoneda1 = lowerCoyoneda(dictFunctor);\n    var eqCoyoneda1 = eqCoyoneda(dictFunctor);\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare1(dictOrd1);\n        var eqCoyoneda2 = eqCoyoneda1(dictOrd1.Eq10());\n        return function (dictOrd) {\n            var compare11 = compare1(dictOrd);\n            var eqCoyoneda3 = eqCoyoneda2(dictOrd.Eq0());\n            return {\n                compare: function (x) {\n                    return function (y) {\n                        return compare11(lowerCoyoneda1(x))(lowerCoyoneda1(y));\n                    };\n                },\n                Eq0: function () {\n                    return eqCoyoneda3;\n                }\n            };\n        };\n    };\n};\nvar eq1Coyoneda = function (dictFunctor) {\n    var eqCoyoneda1 = eqCoyoneda(dictFunctor);\n    return function (dictEq1) {\n        var eqCoyoneda2 = eqCoyoneda1(dictEq1);\n        return {\n            eq1: function (dictEq) {\n                return Data_Eq.eq(eqCoyoneda2(dictEq));\n            }\n        };\n    };\n};\nvar ord1Coyoneda = function (dictFunctor) {\n    var ordCoyoneda1 = ordCoyoneda(dictFunctor);\n    var eq1Coyoneda1 = eq1Coyoneda(dictFunctor);\n    return function (dictOrd1) {\n        var ordCoyoneda2 = ordCoyoneda1(dictOrd1);\n        var eq1Coyoneda2 = eq1Coyoneda1(dictOrd1.Eq10());\n        return {\n            compare1: function (dictOrd) {\n                return Data_Ord.compare(ordCoyoneda2(dictOrd));\n            },\n            Eq10: function () {\n                return eq1Coyoneda2;\n            }\n        };\n    };\n};\nvar coyoneda = function (k) {\n    return function (fi) {\n        return Data_Exists.mkExists(new CoyonedaF(k, fi));\n    };\n};\nvar functorCoyoneda = {\n    map: function (f) {\n        return function (v) {\n            return Data_Exists.runExists(function (v1) {\n                return coyoneda(function ($180) {\n                    return f(v1.value0($180));\n                })(v1.value1);\n            })(v);\n        };\n    }\n};\nvar invatiantCoyoneda = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorCoyoneda)\n};\nvar hoistCoyoneda = function (nat) {\n    return function (v) {\n        return Data_Exists.runExists(function (v1) {\n            return coyoneda(v1.value0)(nat(v1.value1));\n        })(v);\n    };\n};\nvar liftCoyoneda = /* #__PURE__ */ coyoneda(/* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn));\nvar distributiveCoyoneda = function (dictDistributive) {\n    var collect = Data_Distributive.collect(dictDistributive);\n    var lowerCoyoneda1 = lowerCoyoneda(dictDistributive.Functor0());\n    return {\n        collect: function (dictFunctor) {\n            var collect1 = collect(dictFunctor);\n            return function (f) {\n                var $181 = collect1(function ($183) {\n                    return lowerCoyoneda1(f($183));\n                });\n                return function ($182) {\n                    return liftCoyoneda($181($182));\n                };\n            };\n        },\n        distribute: function (dictFunctor) {\n            var $184 = collect(dictFunctor)(lowerCoyoneda1);\n            return function ($185) {\n                return liftCoyoneda($184($185));\n            };\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        }\n    };\n};\nvar extendCoyoneda = function (dictExtend) {\n    var extend = Control_Extend.extend(dictExtend);\n    return {\n        extend: function (f) {\n            return function (v) {\n                return Data_Exists.runExists(function (v1) {\n                    return liftCoyoneda(extend((function () {\n                        var $186 = coyoneda(v1.value0);\n                        return function ($187) {\n                            return f($186($187));\n                        };\n                    })())(v1.value1));\n                })(v);\n            };\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        }\n    };\n};\nvar monadTransCoyoneda = {\n    lift: function (dictMonad) {\n        return liftCoyoneda;\n    }\n};\nvar traversableCoyoneda = function (dictTraversable) {\n    var traverse = Data_Traversable.traverse(dictTraversable);\n    var foldableCoyoneda1 = foldableCoyoneda(dictTraversable.Foldable1());\n    return {\n        traverse: function (dictApplicative) {\n            var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return function (f) {\n                return unCoyoneda(function (k) {\n                    var $188 = map(liftCoyoneda);\n                    var $189 = traverse1(function ($191) {\n                        return f(k($191));\n                    });\n                    return function ($190) {\n                        return $188($189($190));\n                    };\n                });\n            };\n        },\n        sequence: function (dictApplicative) {\n            var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return unCoyoneda(function (k) {\n                var $192 = map(liftCoyoneda);\n                var $193 = traverse1(k);\n                return function ($194) {\n                    return $192($193($194));\n                };\n            });\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        },\n        Foldable1: function () {\n            return foldableCoyoneda1;\n        }\n    };\n};\nvar traversable1Coyoneda = function (dictTraversable1) {\n    var traverse1 = Data_Semigroup_Traversable.traverse1(dictTraversable1);\n    var sequence1 = Data_Semigroup_Traversable.sequence1(dictTraversable1);\n    var Traversable1 = dictTraversable1.Traversable1();\n    var map = Data_Functor.map(Traversable1.Functor0());\n    var foldable1Coyoneda1 = foldable1Coyoneda(dictTraversable1.Foldable10());\n    var traversableCoyoneda1 = traversableCoyoneda(Traversable1);\n    return {\n        traverse1: function (dictApply) {\n            var map1 = Data_Functor.map(dictApply.Functor0());\n            var traverse11 = traverse1(dictApply);\n            return function (f) {\n                return unCoyoneda(function (k) {\n                    var $195 = map1(liftCoyoneda);\n                    var $196 = traverse11(function ($198) {\n                        return f(k($198));\n                    });\n                    return function ($197) {\n                        return $195($196($197));\n                    };\n                });\n            };\n        },\n        sequence1: function (dictApply) {\n            var map1 = Data_Functor.map(dictApply.Functor0());\n            var sequence11 = sequence1(dictApply);\n            return unCoyoneda(function (k) {\n                var $199 = map1(liftCoyoneda);\n                var $200 = map(k);\n                return function ($201) {\n                    return $199(sequence11($200($201)));\n                };\n            });\n        },\n        Foldable10: function () {\n            return foldable1Coyoneda1;\n        },\n        Traversable1: function () {\n            return traversableCoyoneda1;\n        }\n    };\n};\nvar comonadCoyoneda = function (dictComonad) {\n    var extract = Control_Comonad.extract(dictComonad);\n    var extendCoyoneda1 = extendCoyoneda(dictComonad.Extend0());\n    return {\n        extract: function (v) {\n            return Data_Exists.runExists(function (v1) {\n                return v1.value0(extract(v1.value1));\n            })(v);\n        },\n        Extend0: function () {\n            return extendCoyoneda1;\n        }\n    };\n};\nvar applyCoyoneda = function (dictApply) {\n    var apply = Control_Apply.apply(dictApply);\n    var lowerCoyoneda1 = lowerCoyoneda(dictApply.Functor0());\n    return {\n        apply: function (f) {\n            return function (g) {\n                return liftCoyoneda(apply(lowerCoyoneda1(f))(lowerCoyoneda1(g)));\n            };\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        }\n    };\n};\nvar bindCoyoneda = function (dictBind) {\n    var bindFlipped = Control_Bind.bindFlipped(dictBind);\n    var Apply0 = dictBind.Apply0();\n    var lowerCoyoneda1 = lowerCoyoneda(Apply0.Functor0());\n    var applyCoyoneda1 = applyCoyoneda(Apply0);\n    return {\n        bind: function (v) {\n            return function (f) {\n                return liftCoyoneda(Data_Exists.runExists(function (v1) {\n                    return bindFlipped(function ($202) {\n                        return lowerCoyoneda1(f(v1.value0($202)));\n                    })(v1.value1);\n                })(v));\n            };\n        },\n        Apply0: function () {\n            return applyCoyoneda1;\n        }\n    };\n};\nvar applicativeCoyoneda = function (dictApplicative) {\n    var applyCoyoneda1 = applyCoyoneda(dictApplicative.Apply0());\n    return {\n        pure: (function () {\n            var $203 = Control_Applicative.pure(dictApplicative);\n            return function ($204) {\n                return liftCoyoneda($203($204));\n            };\n        })(),\n        Apply0: function () {\n            return applyCoyoneda1;\n        }\n    };\n};\nvar monadCoyoneda = function (dictMonad) {\n    var applicativeCoyoneda1 = applicativeCoyoneda(dictMonad.Applicative0());\n    var bindCoyoneda1 = bindCoyoneda(dictMonad.Bind1());\n    return {\n        Applicative0: function () {\n            return applicativeCoyoneda1;\n        },\n        Bind1: function () {\n            return bindCoyoneda1;\n        }\n    };\n};\nvar altCoyoneda = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var lowerCoyoneda1 = lowerCoyoneda(dictAlt.Functor0());\n    return {\n        alt: function (x) {\n            return function (y) {\n                return liftCoyoneda(alt(lowerCoyoneda1(x))(lowerCoyoneda1(y)));\n            };\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        }\n    };\n};\nvar plusCoyoneda = function (dictPlus) {\n    var altCoyoneda1 = altCoyoneda(dictPlus.Alt0());\n    return {\n        empty: liftCoyoneda(Control_Plus.empty(dictPlus)),\n        Alt0: function () {\n            return altCoyoneda1;\n        }\n    };\n};\nvar alternativeCoyoneda = function (dictAlternative) {\n    var applicativeCoyoneda1 = applicativeCoyoneda(dictAlternative.Applicative0());\n    var plusCoyoneda1 = plusCoyoneda(dictAlternative.Plus1());\n    return {\n        Applicative0: function () {\n            return applicativeCoyoneda1;\n        },\n        Plus1: function () {\n            return plusCoyoneda1;\n        }\n    };\n};\nvar monadPlusCoyoneda = function (dictMonadPlus) {\n    var monadCoyoneda1 = monadCoyoneda(dictMonadPlus.Monad0());\n    var alternativeCoyoneda1 = alternativeCoyoneda(dictMonadPlus.Alternative1());\n    return {\n        Monad0: function () {\n            return monadCoyoneda1;\n        },\n        Alternative1: function () {\n            return alternativeCoyoneda1;\n        }\n    };\n};\nexport {\n    Coyoneda,\n    coyoneda,\n    unCoyoneda,\n    liftCoyoneda,\n    lowerCoyoneda,\n    hoistCoyoneda,\n    eqCoyoneda,\n    eq1Coyoneda,\n    ordCoyoneda,\n    ord1Coyoneda,\n    functorCoyoneda,\n    invatiantCoyoneda,\n    applyCoyoneda,\n    applicativeCoyoneda,\n    altCoyoneda,\n    plusCoyoneda,\n    alternativeCoyoneda,\n    bindCoyoneda,\n    monadCoyoneda,\n    monadTransCoyoneda,\n    monadPlusCoyoneda,\n    extendCoyoneda,\n    comonadCoyoneda,\n    foldableCoyoneda,\n    traversableCoyoneda,\n    foldable1Coyoneda,\n    traversable1Coyoneda,\n    distributiveCoyoneda\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Const from \"../Data.Const/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_App from \"../Data.Functor.App/index.js\";\nimport * as Data_Functor_Compose from \"../Data.Functor.Compose/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_Functor_Product from \"../Data.Functor.Product/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Maybe_First from \"../Data.Maybe.First/index.js\";\nimport * as Data_Maybe_Last from \"../Data.Maybe.Last/index.js\";\nimport * as Data_Monoid_Additive from \"../Data.Monoid.Additive/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Multiplicative from \"../Data.Monoid.Multiplicative/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar map3 = /* #__PURE__ */ Data_Functor.map(Data_Maybe_Last.functorLast);\nvar map4 = /* #__PURE__ */ Data_Functor.map(Data_Maybe_First.functorFirst);\nvar map5 = /* #__PURE__ */ Data_Functor.map(Data_Either.functorEither);\nvar map6 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Dual.functorDual);\nvar map7 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Disj.functorDisj);\nvar bimap1 = /* #__PURE__ */ Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither);\nvar map8 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Conj.functorConj);\nvar map9 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Additive.functorAdditive);\nvar mapWithIndex = function (dict) {\n    return dict.mapWithIndex;\n};\nvar mapDefault = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    return function (f) {\n        return mapWithIndex1(Data_Function[\"const\"](f));\n    };\n};\nvar functorWithIndexTuple = {\n    mapWithIndex: function (f) {\n        return map(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Tuple.functorTuple;\n    }\n};\nvar functorWithIndexProduct = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorProduct = Data_Functor_Product.functorProduct(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorProduct1 = functorProduct(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return bimap(mapWithIndex1(function ($63) {\n                        return f(Data_Either.Left.create($63));\n                    }))(mapWithIndex2(function ($64) {\n                        return f(Data_Either.Right.create($64));\n                    }))(v);\n                };\n            },\n            Functor0: function () {\n                return functorProduct1;\n            }\n        };\n    };\n};\nvar functorWithIndexMultiplicative = {\n    mapWithIndex: function (f) {\n        return map1(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Multiplicative.functorMultiplicative;\n    }\n};\nvar functorWithIndexMaybe = {\n    mapWithIndex: function (f) {\n        return map2(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe.functorMaybe;\n    }\n};\nvar functorWithIndexLast = {\n    mapWithIndex: function (f) {\n        return map3(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe_Last.functorLast;\n    }\n};\nvar functorWithIndexIdentity = {\n    mapWithIndex: function (f) {\n        return function (v) {\n            return f(Data_Unit.unit)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Identity.functorIdentity;\n    }\n};\nvar functorWithIndexFirst = {\n    mapWithIndex: function (f) {\n        return map4(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe_First.functorFirst;\n    }\n};\nvar functorWithIndexEither = {\n    mapWithIndex: function (f) {\n        return map5(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Either.functorEither;\n    }\n};\nvar functorWithIndexDual = {\n    mapWithIndex: function (f) {\n        return map6(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Dual.functorDual;\n    }\n};\nvar functorWithIndexDisj = {\n    mapWithIndex: function (f) {\n        return map7(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Disj.functorDisj;\n    }\n};\nvar functorWithIndexCoproduct = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorCoproduct = Data_Functor_Coproduct.functorCoproduct(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorCoproduct1 = functorCoproduct(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return bimap1(mapWithIndex1(function ($65) {\n                        return f(Data_Either.Left.create($65));\n                    }))(mapWithIndex2(function ($66) {\n                        return f(Data_Either.Right.create($66));\n                    }))(v);\n                };\n            },\n            Functor0: function () {\n                return functorCoproduct1;\n            }\n        };\n    };\n};\nvar functorWithIndexConst = {\n    mapWithIndex: function (v) {\n        return function (v1) {\n            return v1;\n        };\n    },\n    Functor0: function () {\n        return Data_Const.functorConst;\n    }\n};\nvar functorWithIndexConj = {\n    mapWithIndex: function (f) {\n        return map8(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Conj.functorConj;\n    }\n};\nvar functorWithIndexCompose = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorCompose = Data_Functor_Compose.functorCompose(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorCompose1 = functorCompose(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return mapWithIndex1((function () {\n                        var $67 = Data_Tuple.curry(f);\n                        return function ($68) {\n                            return mapWithIndex2($67($68));\n                        };\n                    })())(v);\n                };\n            },\n            Functor0: function () {\n                return functorCompose1;\n            }\n        };\n    };\n};\nvar functorWithIndexArray = {\n    mapWithIndex: $foreign.mapWithIndexArray,\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar functorWithIndexApp = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorApp = Data_Functor_App.functorApp(dictFunctorWithIndex.Functor0());\n    return {\n        mapWithIndex: function (f) {\n            return function (v) {\n                return mapWithIndex1(f)(v);\n            };\n        },\n        Functor0: function () {\n            return functorApp;\n        }\n    };\n};\nvar functorWithIndexAdditive = {\n    mapWithIndex: function (f) {\n        return map9(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Additive.functorAdditive;\n    }\n};\nexport {\n    mapWithIndex,\n    mapDefault,\n    functorWithIndexArray,\n    functorWithIndexMaybe,\n    functorWithIndexFirst,\n    functorWithIndexLast,\n    functorWithIndexAdditive,\n    functorWithIndexDual,\n    functorWithIndexConj,\n    functorWithIndexDisj,\n    functorWithIndexMultiplicative,\n    functorWithIndexEither,\n    functorWithIndexTuple,\n    functorWithIndexIdentity,\n    functorWithIndexConst,\n    functorWithIndexProduct,\n    functorWithIndexCoproduct,\n    functorWithIndexCompose,\n    functorWithIndexApp\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semigroup_Foldable from \"../Data.Semigroup.Foldable/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar NonEmpty = /* #__PURE__ */ (function () {\n    function NonEmpty(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    NonEmpty.create = function (value0) {\n        return function (value1) {\n            return new NonEmpty(value0, value1);\n        };\n    };\n    return NonEmpty;\n})();\nvar unfoldable1NonEmpty = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return {\n        unfoldr1: function (f) {\n            return function (b) {\n                return Data_Tuple.uncurry(NonEmpty.create)(map(unfoldr(map1(f)))(f(b)));\n            };\n        }\n    };\n};\nvar tail = function (v) {\n    return v.value1;\n};\nvar singleton = function (dictPlus) {\n    var empty = Control_Plus.empty(dictPlus);\n    return function (a) {\n        return new NonEmpty(a, empty);\n    };\n};\nvar showNonEmpty = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                return \"(NonEmpty \" + (show(v.value0) + (\" \" + (show1(v.value1) + \")\")));\n            }\n        };\n    };\n};\nvar semigroupNonEmpty = function (dictApplicative) {\n    var pure = Control_Applicative.pure(dictApplicative);\n    return function (dictSemigroup) {\n        var append1 = Data_Semigroup.append(dictSemigroup);\n        return {\n            append: function (v) {\n                return function (v1) {\n                    return new NonEmpty(v.value0, append1(v.value1)(append1(pure(v1.value0))(v1.value1)));\n                };\n            }\n        };\n    };\n};\nvar oneOf = function (dictAlternative) {\n    var alt = Control_Alt.alt((dictAlternative.Plus1()).Alt0());\n    var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n    return function (v) {\n        return alt(pure(v.value0))(v.value1);\n    };\n};\nvar head = function (v) {\n    return v.value0;\n};\nvar functorNonEmpty = function (dictFunctor) {\n    var map2 = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return function (m) {\n                return new NonEmpty(f(m.value0), map2(f)(m.value1));\n            };\n        }\n    };\n};\nvar functorWithIndex = function (dictFunctorWithIndex) {\n    var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex);\n    var functorNonEmpty1 = functorNonEmpty(dictFunctorWithIndex.Functor0());\n    return {\n        mapWithIndex: function (f) {\n            return function (v) {\n                return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), mapWithIndex(function ($245) {\n                    return f(Data_Maybe.Just.create($245));\n                })(v.value1));\n            };\n        },\n        Functor0: function () {\n            return functorNonEmpty1;\n        }\n    };\n};\nvar fromNonEmpty = function (f) {\n    return function (v) {\n        return f(v.value0)(v.value1);\n    };\n};\nvar foldableNonEmpty = function (dictFoldable) {\n    var foldMap = Data_Foldable.foldMap(dictFoldable);\n    var foldl = Data_Foldable.foldl(dictFoldable);\n    var foldr = Data_Foldable.foldr(dictFoldable);\n    return {\n        foldMap: function (dictMonoid) {\n            var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n            var foldMap1 = foldMap(dictMonoid);\n            return function (f) {\n                return function (v) {\n                    return append1(f(v.value0))(foldMap1(f)(v.value1));\n                };\n            };\n        },\n        foldl: function (f) {\n            return function (b) {\n                return function (v) {\n                    return foldl(f)(f(b)(v.value0))(v.value1);\n                };\n            };\n        },\n        foldr: function (f) {\n            return function (b) {\n                return function (v) {\n                    return f(v.value0)(foldr(f)(b)(v.value1));\n                };\n            };\n        }\n    };\n};\nvar foldableWithIndexNonEmpty = function (dictFoldableWithIndex) {\n    var foldMapWithIndex = Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex);\n    var foldlWithIndex = Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex);\n    var foldrWithIndex = Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex);\n    var foldableNonEmpty1 = foldableNonEmpty(dictFoldableWithIndex.Foldable0());\n    return {\n        foldMapWithIndex: function (dictMonoid) {\n            var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n            var foldMapWithIndex1 = foldMapWithIndex(dictMonoid);\n            return function (f) {\n                return function (v) {\n                    return append1(f(Data_Maybe.Nothing.value)(v.value0))(foldMapWithIndex1(function ($246) {\n                        return f(Data_Maybe.Just.create($246));\n                    })(v.value1));\n                };\n            };\n        },\n        foldlWithIndex: function (f) {\n            return function (b) {\n                return function (v) {\n                    return foldlWithIndex(function ($247) {\n                        return f(Data_Maybe.Just.create($247));\n                    })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);\n                };\n            };\n        },\n        foldrWithIndex: function (f) {\n            return function (b) {\n                return function (v) {\n                    return f(Data_Maybe.Nothing.value)(v.value0)(foldrWithIndex(function ($248) {\n                        return f(Data_Maybe.Just.create($248));\n                    })(b)(v.value1));\n                };\n            };\n        },\n        Foldable0: function () {\n            return foldableNonEmpty1;\n        }\n    };\n};\nvar traversableNonEmpty = function (dictTraversable) {\n    var sequence = Data_Traversable.sequence(dictTraversable);\n    var traverse = Data_Traversable.traverse(dictTraversable);\n    var functorNonEmpty1 = functorNonEmpty(dictTraversable.Functor0());\n    var foldableNonEmpty1 = foldableNonEmpty(dictTraversable.Foldable1());\n    return {\n        sequence: function (dictApplicative) {\n            var Apply0 = dictApplicative.Apply0();\n            var apply = Control_Apply.apply(Apply0);\n            var map2 = Data_Functor.map(Apply0.Functor0());\n            var sequence1 = sequence(dictApplicative);\n            return function (v) {\n                return apply(map2(NonEmpty.create)(v.value0))(sequence1(v.value1));\n            };\n        },\n        traverse: function (dictApplicative) {\n            var Apply0 = dictApplicative.Apply0();\n            var apply = Control_Apply.apply(Apply0);\n            var map2 = Data_Functor.map(Apply0.Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return function (f) {\n                return function (v) {\n                    return apply(map2(NonEmpty.create)(f(v.value0)))(traverse1(f)(v.value1));\n                };\n            };\n        },\n        Functor0: function () {\n            return functorNonEmpty1;\n        },\n        Foldable1: function () {\n            return foldableNonEmpty1;\n        }\n    };\n};\nvar traversableWithIndexNonEmpty = function (dictTraversableWithIndex) {\n    var traverseWithIndex = Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex);\n    var functorWithIndex1 = functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());\n    var foldableWithIndexNonEmpty1 = foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());\n    var traversableNonEmpty1 = traversableNonEmpty(dictTraversableWithIndex.Traversable2());\n    return {\n        traverseWithIndex: function (dictApplicative) {\n            var Apply0 = dictApplicative.Apply0();\n            var apply = Control_Apply.apply(Apply0);\n            var map2 = Data_Functor.map(Apply0.Functor0());\n            var traverseWithIndex1 = traverseWithIndex(dictApplicative);\n            return function (f) {\n                return function (v) {\n                    return apply(map2(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(traverseWithIndex1(function ($249) {\n                        return f(Data_Maybe.Just.create($249));\n                    })(v.value1));\n                };\n            };\n        },\n        FunctorWithIndex0: function () {\n            return functorWithIndex1;\n        },\n        FoldableWithIndex1: function () {\n            return foldableWithIndexNonEmpty1;\n        },\n        Traversable2: function () {\n            return traversableNonEmpty1;\n        }\n    };\n};\nvar foldable1NonEmpty = function (dictFoldable) {\n    var foldl = Data_Foldable.foldl(dictFoldable);\n    var foldr = Data_Foldable.foldr(dictFoldable);\n    var foldableNonEmpty1 = foldableNonEmpty(dictFoldable);\n    return {\n        foldMap1: function (dictSemigroup) {\n            var append1 = Data_Semigroup.append(dictSemigroup);\n            return function (f) {\n                return function (v) {\n                    return foldl(function (s) {\n                        return function (a1) {\n                            return append1(s)(f(a1));\n                        };\n                    })(f(v.value0))(v.value1);\n                };\n            };\n        },\n        foldr1: function (f) {\n            return function (v) {\n                return Data_Maybe.maybe(v.value0)(f(v.value0))(foldr(function (a1) {\n                    var $250 = Data_Maybe.maybe(a1)(f(a1));\n                    return function ($251) {\n                        return Data_Maybe.Just.create($250($251));\n                    };\n                })(Data_Maybe.Nothing.value)(v.value1));\n            };\n        },\n        foldl1: function (f) {\n            return function (v) {\n                return foldl(f)(v.value0)(v.value1);\n            };\n        },\n        Foldable0: function () {\n            return foldableNonEmpty1;\n        }\n    };\n};\nvar foldl1 = function (dictFoldable) {\n    return Data_Semigroup_Foldable.foldl1(foldable1NonEmpty(dictFoldable));\n};\nvar eqNonEmpty = function (dictEq1) {\n    var eq1 = Data_Eq.eq1(dictEq1);\n    return function (dictEq) {\n        var eq = Data_Eq.eq(dictEq);\n        var eq11 = eq1(dictEq);\n        return {\n            eq: function (x) {\n                return function (y) {\n                    return eq(x.value0)(y.value0) && eq11(x.value1)(y.value1);\n                };\n            }\n        };\n    };\n};\nvar ordNonEmpty = function (dictOrd1) {\n    var compare1 = Data_Ord.compare1(dictOrd1);\n    var eqNonEmpty1 = eqNonEmpty(dictOrd1.Eq10());\n    return function (dictOrd) {\n        var compare = Data_Ord.compare(dictOrd);\n        var compare11 = compare1(dictOrd);\n        var eqNonEmpty2 = eqNonEmpty1(dictOrd.Eq0());\n        return {\n            compare: function (x) {\n                return function (y) {\n                    var v = compare(x.value0)(y.value0);\n                    if (v instanceof Data_Ordering.LT) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (v instanceof Data_Ordering.GT) {\n                        return Data_Ordering.GT.value;\n                    };\n                    return compare11(x.value1)(y.value1);\n                };\n            },\n            Eq0: function () {\n                return eqNonEmpty2;\n            }\n        };\n    };\n};\nvar eq1NonEmpty = function (dictEq1) {\n    var eqNonEmpty1 = eqNonEmpty(dictEq1);\n    return {\n        eq1: function (dictEq) {\n            return Data_Eq.eq(eqNonEmpty1(dictEq));\n        }\n    };\n};\nvar ord1NonEmpty = function (dictOrd1) {\n    var ordNonEmpty1 = ordNonEmpty(dictOrd1);\n    var eq1NonEmpty1 = eq1NonEmpty(dictOrd1.Eq10());\n    return {\n        compare1: function (dictOrd) {\n            return Data_Ord.compare(ordNonEmpty1(dictOrd));\n        },\n        Eq10: function () {\n            return eq1NonEmpty1;\n        }\n    };\n};\nexport {\n    NonEmpty,\n    singleton,\n    foldl1,\n    fromNonEmpty,\n    oneOf,\n    head,\n    tail,\n    showNonEmpty,\n    eqNonEmpty,\n    eq1NonEmpty,\n    ordNonEmpty,\n    ord1NonEmpty,\n    functorNonEmpty,\n    functorWithIndex,\n    foldableNonEmpty,\n    foldableWithIndexNonEmpty,\n    traversableNonEmpty,\n    traversableWithIndexNonEmpty,\n    foldable1NonEmpty,\n    unfoldable1NonEmpty,\n    semigroupNonEmpty\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semigroup_Traversable from \"../Data.Semigroup.Traversable/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar add = /* #__PURE__ */ Data_Semiring.add(Data_Semiring.semiringInt);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Nil = /* #__PURE__ */ (function () {\n    function Nil() {\n\n    };\n    Nil.value = new Nil();\n    return Nil;\n})();\nvar Cons = /* #__PURE__ */ (function () {\n    function Cons(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Cons.create = function (value0) {\n        return function (value1) {\n            return new Cons(value0, value1);\n        };\n    };\n    return Cons;\n})();\nvar NonEmptyList = function (x) {\n    return x;\n};\nvar toList = function (v) {\n    return new Cons(v.value0, v.value1);\n};\nvar newtypeNonEmptyList = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar nelCons = function (a) {\n    return function (v) {\n        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));\n    };\n};\nvar listMap = function (f) {\n    var chunkedRevMap = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {\n                    $tco_var_v = new Cons(v1, v);\n                    $copy_v1 = v1.value1.value1.value1;\n                    return;\n                };\n                var unrolledMap = function (v2) {\n                    if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {\n                        return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));\n                    };\n                    if (v2 instanceof Cons && v2.value1 instanceof Nil) {\n                        return new Cons(f(v2.value0), Nil.value);\n                    };\n                    return Nil.value;\n                };\n                var reverseUnrolledMap = function ($copy_v2) {\n                    return function ($copy_v3) {\n                        var $tco_var_v2 = $copy_v2;\n                        var $tco_done1 = false;\n                        var $tco_result;\n                        function $tco_loop(v2, v3) {\n                            if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {\n                                $tco_var_v2 = v2.value1;\n                                $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));\n                                return;\n                            };\n                            $tco_done1 = true;\n                            return v3;\n                        };\n                        while (!$tco_done1) {\n                            $tco_result = $tco_loop($tco_var_v2, $copy_v3);\n                        };\n                        return $tco_result;\n                    };\n                };\n                $tco_done = true;\n                return reverseUnrolledMap(v)(unrolledMap(v1));\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return chunkedRevMap(Nil.value);\n};\nvar functorList = {\n    map: listMap\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorList);\nvar functorNonEmptyList = /* #__PURE__ */ Data_NonEmpty.functorNonEmpty(functorList);\nvar foldableList = {\n    foldr: function (f) {\n        return function (b) {\n            var rev = (function () {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1) {\n                            if (v1 instanceof Nil) {\n                                $tco_done = true;\n                                return v;\n                            };\n                            if (v1 instanceof Cons) {\n                                $tco_var_v = new Cons(v1.value0, v);\n                                $copy_v1 = v1.value1;\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): \" + [ v.constructor.name, v1.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go(Nil.value);\n            })();\n            var $284 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);\n            return function ($285) {\n                return $284(rev($285));\n            };\n        };\n    },\n    foldl: function (f) {\n        var go = function ($copy_b) {\n            return function ($copy_v) {\n                var $tco_var_b = $copy_b;\n                var $tco_done1 = false;\n                var $tco_result;\n                function $tco_loop(b, v) {\n                    if (v instanceof Nil) {\n                        $tco_done1 = true;\n                        return b;\n                    };\n                    if (v instanceof Cons) {\n                        $tco_var_b = f(b)(v.value0);\n                        $copy_v = v.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done1) {\n                    $tco_result = $tco_loop($tco_var_b, $copy_v);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    },\n    foldMap: function (dictMonoid) {\n        var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return Data_Foldable.foldl(foldableList)(function (acc) {\n                var $286 = append2(acc);\n                return function ($287) {\n                    return $286(f($287));\n                };\n            })(mempty);\n        };\n    }\n};\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(foldableList);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(foldableList);\nvar intercalate = /* #__PURE__ */ Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString);\nvar foldableNonEmptyList = /* #__PURE__ */ Data_NonEmpty.foldableNonEmpty(foldableList);\nvar foldableWithIndexList = {\n    foldrWithIndex: function (f) {\n        return function (b) {\n            return function (xs) {\n                var v = (function () {\n                    var rev = foldl(function (v1) {\n                        return function (a) {\n                            return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));\n                        };\n                    });\n                    return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);\n                })();\n                return Data_Tuple.snd(foldl(function (v1) {\n                    return function (a) {\n                        return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));\n                    };\n                })(new Data_Tuple.Tuple(v.value0, b))(v.value1));\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (acc) {\n            var $288 = foldl(function (v) {\n                return function (a) {\n                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));\n                };\n            })(new Data_Tuple.Tuple(0, acc));\n            return function ($289) {\n                return Data_Tuple.snd($288($289));\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {\n                return function (acc) {\n                    var $290 = append2(acc);\n                    var $291 = f(i);\n                    return function ($292) {\n                        return $290($291($292));\n                    };\n                };\n            })(mempty);\n        };\n    },\n    Foldable0: function () {\n        return foldableList;\n    }\n};\nvar foldableWithIndexNonEmpty = /* #__PURE__ */ Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList);\nvar foldMapWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexNonEmpty);\nvar foldlWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexNonEmpty);\nvar foldrWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexNonEmpty);\nvar foldrWithIndex1 = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList);\nvar foldlWithIndex1 = /* #__PURE__ */ Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList);\nvar foldableWithIndexNonEmptyList = {\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMapWithIndex1 = foldMapWithIndex(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMapWithIndex1((function () {\n                    var $293 = Data_Maybe.maybe(0)(add(1));\n                    return function ($294) {\n                        return f($293($294));\n                    };\n                })())(v);\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (b) {\n            return function (v) {\n                return foldlWithIndex((function () {\n                    var $295 = Data_Maybe.maybe(0)(add(1));\n                    return function ($296) {\n                        return f($295($296));\n                    };\n                })())(b)(v);\n            };\n        };\n    },\n    foldrWithIndex: function (f) {\n        return function (b) {\n            return function (v) {\n                return foldrWithIndex((function () {\n                    var $297 = Data_Maybe.maybe(0)(add(1));\n                    return function ($298) {\n                        return f($297($298));\n                    };\n                })())(b)(v);\n            };\n        };\n    },\n    Foldable0: function () {\n        return foldableNonEmptyList;\n    }\n};\nvar functorWithIndexList = {\n    mapWithIndex: function (f) {\n        return foldrWithIndex1(function (i) {\n            return function (x) {\n                return function (acc) {\n                    return new Cons(f(i)(x), acc);\n                };\n            };\n        })(Nil.value);\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(/* #__PURE__ */ Data_NonEmpty.functorWithIndex(functorWithIndexList));\nvar functorWithIndexNonEmptyList = {\n    mapWithIndex: function (fn) {\n        return function (v) {\n            return mapWithIndex((function () {\n                var $299 = Data_Maybe.maybe(0)(add(1));\n                return function ($300) {\n                    return fn($299($300));\n                };\n            })())(v);\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar semigroupList = {\n    append: function (xs) {\n        return function (ys) {\n            return foldr(Cons.create)(ys)(xs);\n        };\n    }\n};\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(semigroupList);\nvar monoidList = /* #__PURE__ */ (function () {\n    return {\n        mempty: Nil.value,\n        Semigroup0: function () {\n            return semigroupList;\n        }\n    };\n})();\nvar semigroupNonEmptyList = {\n    append: function (v) {\n        return function (as$prime) {\n            return new Data_NonEmpty.NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));\n        };\n    }\n};\nvar showList = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof Nil) {\n                return \"Nil\";\n            };\n            return \"(\" + (intercalate(\" : \")(map(show)(v)) + \" : Nil)\");\n        }\n    };\n};\nvar showNonEmptyList = function (dictShow) {\n    var show = Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)));\n    return {\n        show: function (v) {\n            return \"(NonEmptyList \" + (show(v) + \")\");\n        }\n    };\n};\nvar traversableList = {\n    traverse: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var $301 = map1(foldl(Data_Function.flip(Cons.create))(Nil.value));\n            var $302 = foldl(function (acc) {\n                var $304 = lift2(Data_Function.flip(Cons.create))(acc);\n                return function ($305) {\n                    return $304(f($305));\n                };\n            })(pure1(Nil.value));\n            return function ($303) {\n                return $301($302($303));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableList)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorList;\n    },\n    Foldable1: function () {\n        return foldableList;\n    }\n};\nvar traversableNonEmptyList = /* #__PURE__ */ Data_NonEmpty.traversableNonEmpty(traversableList);\nvar traversableWithIndexList = {\n    traverseWithIndex: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var rev = foldl(Data_Function.flip(Cons.create))(Nil.value);\n            var $306 = map1(rev);\n            var $307 = foldlWithIndex1(function (i) {\n                return function (acc) {\n                    var $309 = lift2(Data_Function.flip(Cons.create))(acc);\n                    var $310 = f(i);\n                    return function ($311) {\n                        return $309($310($311));\n                    };\n                };\n            })(pure1(Nil.value));\n            return function ($308) {\n                return $306($307($308));\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexList;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexList;\n    },\n    Traversable2: function () {\n        return traversableList;\n    }\n};\nvar traverseWithIndex = /* #__PURE__ */ Data_TraversableWithIndex.traverseWithIndex(/* #__PURE__ */ Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList));\nvar traversableWithIndexNonEmptyList = {\n    traverseWithIndex: function (dictApplicative) {\n        var map1 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        var traverseWithIndex1 = traverseWithIndex(dictApplicative);\n        return function (f) {\n            return function (v) {\n                return map1(NonEmptyList)(traverseWithIndex1((function () {\n                    var $312 = Data_Maybe.maybe(0)(add(1));\n                    return function ($313) {\n                        return f($312($313));\n                    };\n                })())(v));\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexNonEmptyList;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexNonEmptyList;\n    },\n    Traversable2: function () {\n        return traversableNonEmptyList;\n    }\n};\nvar unfoldable1List = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = new Cons(v.value0, memo);\n                            return;\n                        };\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return foldl(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));\n                        };\n                        throw new Error(\"Failed pattern match at Data.List.Types (line 135, column 22 - line 137, column 61): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(Nil.value);\n        };\n    }\n};\nvar unfoldableList = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return foldl(Data_Function.flip(Cons.create))(Nil.value)(memo);\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = new Cons(v.value0.value0, memo);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.List.Types (line 142, column 22 - line 144, column 52): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(Nil.value);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1List;\n    }\n};\nvar unfoldable1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);\nvar foldable1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.foldable1NonEmpty(foldableList);\nvar extendNonEmptyList = {\n    extend: function (f) {\n        return function (v) {\n            var go = function (a) {\n                return function (v1) {\n                    return {\n                        val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),\n                        acc: new Cons(a, v1.acc)\n                    };\n                };\n            };\n            return new Data_NonEmpty.NonEmpty(f(v), (foldr(go)({\n                val: Nil.value,\n                acc: Nil.value\n            })(v.value1)).val);\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar extendList = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Nil) {\n                return Nil.value;\n            };\n            if (v1 instanceof Cons) {\n                var go = function (a$prime) {\n                    return function (v2) {\n                        var acc$prime = new Cons(a$prime, v2.acc);\n                        return {\n                            val: new Cons(v(acc$prime), v2.val),\n                            acc: acc$prime\n                        };\n                    };\n                };\n                return new Cons(v(v1), (foldr(go)({\n                    val: Nil.value,\n                    acc: Nil.value\n                })(v1.value1)).val);\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 180, column 1 - line 187, column 42): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar eq1List = {\n    eq1: function (dictEq) {\n        var eq = Data_Eq.eq(dictEq);\n        return function (xs) {\n            return function (ys) {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        return function ($copy_v2) {\n                            var $tco_var_v = $copy_v;\n                            var $tco_var_v1 = $copy_v1;\n                            var $tco_done = false;\n                            var $tco_result;\n                            function $tco_loop(v, v1, v2) {\n                                if (!v2) {\n                                    $tco_done = true;\n                                    return false;\n                                };\n                                if (v instanceof Nil && v1 instanceof Nil) {\n                                    $tco_done = true;\n                                    return v2;\n                                };\n                                if (v instanceof Cons && v1 instanceof Cons) {\n                                    $tco_var_v = v.value1;\n                                    $tco_var_v1 = v1.value1;\n                                    $copy_v2 = v2 && eq(v1.value0)(v.value0);\n                                    return;\n                                };\n                                $tco_done = true;\n                                return false;\n                            };\n                            while (!$tco_done) {\n                                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                            };\n                            return $tco_result;\n                        };\n                    };\n                };\n                return go(xs)(ys)(true);\n            };\n        };\n    }\n};\nvar eq1 = /* #__PURE__ */ Data_Eq.eq1(eq1List);\nvar eqNonEmpty = /* #__PURE__ */ Data_NonEmpty.eqNonEmpty(eq1List);\nvar eq1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.eq1NonEmpty(eq1List);\nvar eqList = function (dictEq) {\n    return {\n        eq: eq1(dictEq)\n    };\n};\nvar eqNonEmptyList = function (dictEq) {\n    return eqNonEmpty(dictEq);\n};\nvar ord1List = {\n    compare1: function (dictOrd) {\n        var compare = Data_Ord.compare(dictOrd);\n        return function (xs) {\n            return function (ys) {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1) {\n                            if (v instanceof Nil && v1 instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.EQ.value;\n                            };\n                            if (v instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.LT.value;\n                            };\n                            if (v1 instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.GT.value;\n                            };\n                            if (v instanceof Cons && v1 instanceof Cons) {\n                                var v2 = compare(v.value0)(v1.value0);\n                                if (v2 instanceof Data_Ordering.EQ) {\n                                    $tco_var_v = v.value1;\n                                    $copy_v1 = v1.value1;\n                                    return;\n                                };\n                                $tco_done = true;\n                                return v2;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List.Types (line 60, column 5 - line 60, column 20): \" + [ v.constructor.name, v1.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go(xs)(ys);\n            };\n        };\n    },\n    Eq10: function () {\n        return eq1List;\n    }\n};\nvar compare1 = /* #__PURE__ */ Data_Ord.compare1(ord1List);\nvar ordNonEmpty = /* #__PURE__ */ Data_NonEmpty.ordNonEmpty(ord1List);\nvar ord1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.ord1NonEmpty(ord1List);\nvar ordList = function (dictOrd) {\n    var eqList1 = eqList(dictOrd.Eq0());\n    return {\n        compare: compare1(dictOrd),\n        Eq0: function () {\n            return eqList1;\n        }\n    };\n};\nvar ordNonEmptyList = function (dictOrd) {\n    return ordNonEmpty(dictOrd);\n};\nvar comonadNonEmptyList = {\n    extract: function (v) {\n        return v.value0;\n    },\n    Extend0: function () {\n        return extendNonEmptyList;\n    }\n};\nvar applyList = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Nil) {\n                return Nil.value;\n            };\n            if (v instanceof Cons) {\n                return append1(map(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyList);\nvar applyNonEmptyList = {\n    apply: function (v) {\n        return function (v1) {\n            return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), append1(apply(v.value1)(new Cons(v1.value0, Nil.value)))(apply(new Cons(v.value0, v.value1))(v1.value1)));\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar bindList = {\n    bind: function (v) {\n        return function (v1) {\n            if (v instanceof Nil) {\n                return Nil.value;\n            };\n            if (v instanceof Cons) {\n                return append1(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 164, column 1 - line 166, column 37): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Apply0: function () {\n        return applyList;\n    }\n};\nvar bind = /* #__PURE__ */ Control_Bind.bind(bindList);\nvar bindNonEmptyList = {\n    bind: function (v) {\n        return function (f) {\n            var v1 = f(v.value0);\n            return new Data_NonEmpty.NonEmpty(v1.value0, append1(v1.value1)(bind(v.value1)(function ($314) {\n                return toList(f($314));\n            })));\n        };\n    },\n    Apply0: function () {\n        return applyNonEmptyList;\n    }\n};\nvar applicativeList = {\n    pure: function (a) {\n        return new Cons(a, Nil.value);\n    },\n    Apply0: function () {\n        return applyList;\n    }\n};\nvar monadList = {\n    Applicative0: function () {\n        return applicativeList;\n    },\n    Bind1: function () {\n        return bindList;\n    }\n};\nvar altNonEmptyList = {\n    alt: /* #__PURE__ */ Data_Semigroup.append(semigroupNonEmptyList),\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar altList = {\n    alt: append1,\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar plusList = /* #__PURE__ */ (function () {\n    return {\n        empty: Nil.value,\n        Alt0: function () {\n            return altList;\n        }\n    };\n})();\nvar alternativeList = {\n    Applicative0: function () {\n        return applicativeList;\n    },\n    Plus1: function () {\n        return plusList;\n    }\n};\nvar monadPlusList = {\n    Monad0: function () {\n        return monadList;\n    },\n    Alternative1: function () {\n        return alternativeList;\n    }\n};\nvar applicativeNonEmptyList = {\n    pure: /* #__PURE__ */ (function () {\n        var $315 = Data_NonEmpty.singleton(plusList);\n        return function ($316) {\n            return NonEmptyList($315($316));\n        };\n    })(),\n    Apply0: function () {\n        return applyNonEmptyList;\n    }\n};\nvar pure = /* #__PURE__ */ Control_Applicative.pure(applicativeNonEmptyList);\nvar monadNonEmptyList = {\n    Applicative0: function () {\n        return applicativeNonEmptyList;\n    },\n    Bind1: function () {\n        return bindNonEmptyList;\n    }\n};\nvar traversable1NonEmptyList = {\n    traverse1: function (dictApply) {\n        var Functor0 = dictApply.Functor0();\n        var mapFlipped = Data_Functor.mapFlipped(Functor0);\n        var lift2 = Control_Apply.lift2(dictApply);\n        var map1 = Data_Functor.map(Functor0);\n        return function (f) {\n            return function (v) {\n                return mapFlipped(foldl(function (acc) {\n                    var $317 = lift2(Data_Function.flip(nelCons))(acc);\n                    return function ($318) {\n                        return $317(f($318));\n                    };\n                })(map1(pure)(f(v.value0)))(v.value1))(function (v1) {\n                    return foldl(Data_Function.flip(nelCons))(pure(v1.value0))(v1.value1);\n                });\n            };\n        };\n    },\n    sequence1: function (dictApply) {\n        return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(identity);\n    },\n    Foldable10: function () {\n        return foldable1NonEmptyList;\n    },\n    Traversable1: function () {\n        return traversableNonEmptyList;\n    }\n};\nexport {\n    Nil,\n    Cons,\n    NonEmptyList,\n    toList,\n    nelCons,\n    showList,\n    eqList,\n    eq1List,\n    ordList,\n    ord1List,\n    semigroupList,\n    monoidList,\n    functorList,\n    functorWithIndexList,\n    foldableList,\n    foldableWithIndexList,\n    unfoldable1List,\n    unfoldableList,\n    traversableList,\n    traversableWithIndexList,\n    applyList,\n    applicativeList,\n    bindList,\n    monadList,\n    altList,\n    plusList,\n    alternativeList,\n    monadPlusList,\n    extendList,\n    newtypeNonEmptyList,\n    eqNonEmptyList,\n    ordNonEmptyList,\n    eq1NonEmptyList,\n    ord1NonEmptyList,\n    showNonEmptyList,\n    functorNonEmptyList,\n    applyNonEmptyList,\n    applicativeNonEmptyList,\n    bindNonEmptyList,\n    monadNonEmptyList,\n    altNonEmptyList,\n    extendNonEmptyList,\n    comonadNonEmptyList,\n    semigroupNonEmptyList,\n    foldableNonEmptyList,\n    traversableNonEmptyList,\n    foldable1NonEmptyList,\n    unfoldable1NonEmptyList,\n    functorWithIndexNonEmptyList,\n    foldableWithIndexNonEmptyList,\n    traversableWithIndexNonEmptyList,\n    traversable1NonEmptyList\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_List_Internal from \"../Data.List.Internal/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_List_Types.foldableList);\nvar tailRecM2 = /* #__PURE__ */ Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar sequence = /* #__PURE__ */ Data_Traversable.sequence(Data_List_Types.traversableList);\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_List_Types.foldableList);\nvar any = /* #__PURE__ */ Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_List_Types.semigroupList);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Data_List_Types.bindList);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Pattern = function (x) {\n    return x;\n};\nvar updateAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0 && v2 instanceof Data_List_Types.Cons) {\n                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(updateAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar unzip = /* #__PURE__ */ (function () {\n    return foldr(function (v) {\n        return function (v1) {\n            return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));\n        };\n    })(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));\n})();\nvar uncons = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just({\n            head: v.value0,\n            tail: v.value1\n        });\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): \" + [ v.constructor.name ]);\n};\nvar toUnfoldable = function (dictUnfoldable) {\n    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {\n        return map(function (rec) {\n            return new Data_Tuple.Tuple(rec.head, rec.tail);\n        })(uncons(xs));\n    });\n};\nvar tail = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just(v.value1);\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): \" + [ v.constructor.name ]);\n};\nvar stripPrefix = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (v) {\n        return function (s) {\n            var go = function (prefix) {\n                return function (input) {\n                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && eq2(prefix.value0)(input.value0))) {\n                        return new Data_Maybe.Just(new Control_Monad_Rec_Class.Loop({\n                            a: prefix.value1,\n                            b: input.value1\n                        }));\n                    };\n                    if (prefix instanceof Data_List_Types.Nil) {\n                        return new Data_Maybe.Just(new Control_Monad_Rec_Class.Done(input));\n                    };\n                    return Data_Maybe.Nothing.value;\n                };\n            };\n            return tailRecM2(go)(v)(s);\n        };\n    };\n};\nvar span = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {\n            var v2 = span(v)(v1.value1);\n            return {\n                init: new Data_List_Types.Cons(v1.value0, v2.init),\n                rest: v2.rest\n            };\n        };\n        return {\n            init: Data_List_Types.Nil.value,\n            rest: v1\n        };\n    };\n};\nvar snoc = function (xs) {\n    return function (x) {\n        return foldr(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);\n    };\n};\nvar singleton = function (a) {\n    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);\n};\nvar sortBy = function (cmp) {\n    var merge = function (v) {\n        return function (v1) {\n            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {\n                if (eq(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {\n                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));\n                };\n                if (Data_Boolean.otherwise) {\n                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));\n                };\n            };\n            if (v instanceof Data_List_Types.Nil) {\n                return v1;\n            };\n            if (v1 instanceof Data_List_Types.Nil) {\n                return v;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 466, column 3 - line 466, column 38): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n    var mergePairs = function (v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {\n            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));\n        };\n        return v;\n    };\n    var mergeAll = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return v.value0;\n            };\n            $copy_v = mergePairs(v);\n            return;\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    var sequences = function (v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {\n            if (eq(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {\n                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);\n            };\n            if (Data_Boolean.otherwise) {\n                return ascending(v.value1.value0)(function (v1) {\n                    return new Data_List_Types.Cons(v.value0, v1);\n                })(v.value1.value1);\n            };\n        };\n        return singleton(v);\n    };\n    var descending = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done1 = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Cons && eq(cmp(v)(v2.value0))(Data_Ordering.GT.value)) {\n                        $tco_var_v = v2.value0;\n                        $tco_var_v1 = new Data_List_Types.Cons(v, v1);\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    $tco_done1 = true;\n                    return new Data_List_Types.Cons(new Data_List_Types.Cons(v, v1), sequences(v2));\n                };\n                while (!$tco_done1) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    var ascending = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done2 = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Cons && notEq(cmp(v)(v2.value0))(Data_Ordering.GT.value)) {\n                        $tco_var_v = v2.value0;\n                        $tco_var_v1 = function (ys) {\n                            return v1(new Data_List_Types.Cons(v, ys));\n                        };\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    $tco_done2 = true;\n                    return new Data_List_Types.Cons(v1(singleton(v)), sequences(v2));\n                };\n                while (!$tco_done2) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    return function ($444) {\n        return mergeAll(sequences($444));\n    };\n};\nvar sort = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (xs) {\n        return sortBy(compare)(xs);\n    };\n};\nvar tails = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return singleton(Data_List_Types.Nil.value);\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_List_Types.Cons(v, tails(v.value1));\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 641, column 1 - line 641, column 43): \" + [ v.constructor.name ]);\n};\nvar showPattern = function (dictShow) {\n    var show = Data_Show.show(Data_List_Types.showList(dictShow));\n    return {\n        show: function (v) {\n            return \"(Pattern \" + (show(v) + \")\");\n        }\n    };\n};\nvar reverse = /* #__PURE__ */ (function () {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return v;\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                    $copy_v1 = v1.value1;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n})();\nvar take = /* #__PURE__ */ (function () {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v1 < 1) {\n                        $tco_done = true;\n                        return reverse(v);\n                    };\n                    if (v2 instanceof Data_List_Types.Nil) {\n                        $tco_done = true;\n                        return reverse(v);\n                    };\n                    if (v2 instanceof Data_List_Types.Cons) {\n                        $tco_var_v = new Data_List_Types.Cons(v2.value0, v);\n                        $tco_var_v1 = v1 - 1 | 0;\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 513, column 3 - line 513, column 35): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n})();\nvar takeWhile = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Cons && p(v1.value0)) {\n                    $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                    $copy_v1 = v1.value1;\n                    return;\n                };\n                $tco_done = true;\n                return reverse(v);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar unsnoc = function (lst) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return new Data_Maybe.Just({\n                        revInit: v1,\n                        last: v.value0\n                    });\n                };\n                if (v instanceof Data_List_Types.Cons) {\n                    $tco_var_v = v.value1;\n                    $copy_v1 = new Data_List_Types.Cons(v.value0, v1);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 270, column 3 - line 270, column 21): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return map(function (h) {\n        return {\n            init: reverse(h.revInit),\n            last: h.last\n        };\n    })(go(lst)(Data_List_Types.Nil.value));\n};\nvar zipWith = function (f) {\n    return function (xs) {\n        return function (ys) {\n            var go = function ($copy_v) {\n                return function ($copy_v1) {\n                    return function ($copy_v2) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_var_v1 = $copy_v1;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1, v2) {\n                            if (v instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v2;\n                            };\n                            if (v1 instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v2;\n                            };\n                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {\n                                $tco_var_v = v.value1;\n                                $tco_var_v1 = v1.value1;\n                                $copy_v2 = new Data_List_Types.Cons(f(v.value0)(v1.value0), v2);\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List (line 779, column 3 - line 779, column 21): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                        };\n                        return $tco_result;\n                    };\n                };\n            };\n            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));\n        };\n    };\n};\nvar zip = /* #__PURE__ */ (function () {\n    return zipWith(Data_Tuple.Tuple.create);\n})();\nvar zipWithA = function (dictApplicative) {\n    var sequence1 = sequence(dictApplicative);\n    return function (f) {\n        return function (xs) {\n            return function (ys) {\n                return sequence1(zipWith(f)(xs)(ys));\n            };\n        };\n    };\n};\nvar range = function (start) {\n    return function (end) {\n        if (start === end) {\n            return singleton(start);\n        };\n        if (Data_Boolean.otherwise) {\n            var go = function ($copy_s) {\n                return function ($copy_e) {\n                    return function ($copy_step) {\n                        return function ($copy_rest) {\n                            var $tco_var_s = $copy_s;\n                            var $tco_var_e = $copy_e;\n                            var $tco_var_step = $copy_step;\n                            var $tco_done = false;\n                            var $tco_result;\n                            function $tco_loop(s, e, step, rest) {\n                                if (s === e) {\n                                    $tco_done = true;\n                                    return new Data_List_Types.Cons(s, rest);\n                                };\n                                if (Data_Boolean.otherwise) {\n                                    $tco_var_s = s + step | 0;\n                                    $tco_var_e = e;\n                                    $tco_var_step = step;\n                                    $copy_rest = new Data_List_Types.Cons(s, rest);\n                                    return;\n                                };\n                                throw new Error(\"Failed pattern match at Data.List (line 148, column 3 - line 149, column 65): \" + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);\n                            };\n                            while (!$tco_done) {\n                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);\n                            };\n                            return $tco_result;\n                        };\n                    };\n                };\n            };\n            return go(end)(start)((function () {\n                var $325 = start > end;\n                if ($325) {\n                    return 1;\n                };\n                return -1 | 0;\n            })())(Data_List_Types.Nil.value);\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 144, column 1 - line 144, column 32): \" + [ start.constructor.name, end.constructor.name ]);\n    };\n};\nvar partition = function (p) {\n    return function (xs) {\n        var select = function (x) {\n            return function (v) {\n                var $328 = p(x);\n                if ($328) {\n                    return {\n                        no: v.no,\n                        yes: new Data_List_Types.Cons(x, v.yes)\n                    };\n                };\n                return {\n                    no: new Data_List_Types.Cons(x, v.no),\n                    yes: v.yes\n                };\n            };\n        };\n        return foldr(select)({\n            no: Data_List_Types.Nil.value,\n            yes: Data_List_Types.Nil.value\n        })(xs);\n    };\n};\nvar $$null = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return true;\n    };\n    return false;\n};\nvar nubBy = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Nil) {\n                        $tco_done = true;\n                        return v1;\n                    };\n                    if (v2 instanceof Data_List_Types.Cons) {\n                        var v3 = Data_List_Internal.insertAndLookupBy(p)(v2.value0)(v);\n                        if (v3.found) {\n                            $tco_var_v = v3.result;\n                            $tco_var_v1 = v1;\n                            $copy_v2 = v2.value1;\n                            return;\n                        };\n                        $tco_var_v = v3.result;\n                        $tco_var_v1 = new Data_List_Types.Cons(v2.value0, v1);\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 673, column 5 - line 673, column 23): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    var $445 = go(Data_List_Internal.emptySet)(Data_List_Types.Nil.value);\n    return function ($446) {\n        return reverse($445($446));\n    };\n};\nvar nub = function (dictOrd) {\n    return nubBy(Data_Ord.compare(dictOrd));\n};\nvar newtypePattern = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar mapMaybe = function (f) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return reverse(v);\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    var v2 = f(v1.value0);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        $tco_var_v = v;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    if (v2 instanceof Data_Maybe.Just) {\n                        $tco_var_v = new Data_List_Types.Cons(v2.value0, v);\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): \" + [ v2.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar manyRec = function (dictMonadRec) {\n    var bind1 = Control_Bind.bind((dictMonadRec.Monad0()).Bind1());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    return function (dictAlternative) {\n        var Alt0 = (dictAlternative.Plus1()).Alt0();\n        var alt = Control_Alt.alt(Alt0);\n        var map1 = Data_Functor.map(Alt0.Functor0());\n        var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n        return function (p) {\n            var go = function (acc) {\n                return bind1(alt(map1(Control_Monad_Rec_Class.Loop.create)(p))(pure(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (aa) {\n                    return pure(bimap(function (v) {\n                        return new Data_List_Types.Cons(v, acc);\n                    })(function (v) {\n                        return reverse(acc);\n                    })(aa));\n                });\n            };\n            return tailRecM(go)(Data_List_Types.Nil.value);\n        };\n    };\n};\nvar someRec = function (dictMonadRec) {\n    var manyRec1 = manyRec(dictMonadRec);\n    return function (dictAlternative) {\n        var apply = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n        var map1 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n        var manyRec2 = manyRec1(dictAlternative);\n        return function (v) {\n            return apply(map1(Data_List_Types.Cons.create)(v))(manyRec2(v));\n        };\n    };\n};\nvar some = function (dictAlternative) {\n    var apply = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n    var map1 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n    return function (dictLazy) {\n        var defer = Control_Lazy.defer(dictLazy);\n        return function (v) {\n            return apply(map1(Data_List_Types.Cons.create)(v))(defer(function (v1) {\n                return many(dictAlternative)(dictLazy)(v);\n            }));\n        };\n    };\n};\nvar many = function (dictAlternative) {\n    var alt = Control_Alt.alt((dictAlternative.Plus1()).Alt0());\n    var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n    return function (dictLazy) {\n        return function (v) {\n            return alt(some(dictAlternative)(dictLazy)(v))(pure(Data_List_Types.Nil.value));\n        };\n    };\n};\nvar length = /* #__PURE__ */ foldl(function (acc) {\n    return function (v) {\n        return acc + 1 | 0;\n    };\n})(0);\nvar last = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return new Data_Maybe.Just(v.value0);\n        };\n        if (v instanceof Data_List_Types.Cons) {\n            $copy_v = v.value1;\n            return;\n        };\n        $tco_done = true;\n        return Data_Maybe.Nothing.value;\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar insertBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Data_List_Types.Nil) {\n                return singleton(v1);\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                var v3 = v(v1)(v2.value0);\n                if (v3 instanceof Data_Ordering.GT) {\n                    return new Data_List_Types.Cons(v2.value0, insertBy(v)(v1)(v2.value1));\n                };\n                return new Data_List_Types.Cons(v1, v2);\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 216, column 1 - line 216, column 68): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar insertAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0) {\n                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(insertAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    return insertBy(Data_Ord.compare(dictOrd));\n};\nvar init = function (lst) {\n    return map(function (v) {\n        return v.init;\n    })(unsnoc(lst));\n};\nvar index = function ($copy_v) {\n    return function ($copy_v1) {\n        var $tco_var_v = $copy_v;\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v, v1) {\n            if (v instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Data_List_Types.Cons && v1 === 0) {\n                $tco_done = true;\n                return new Data_Maybe.Just(v.value0);\n            };\n            if (v instanceof Data_List_Types.Cons) {\n                $tco_var_v = v.value1;\n                $copy_v1 = v1 - 1 | 0;\n                return;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n        };\n        return $tco_result;\n    };\n};\nvar head = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just(v.value0);\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): \" + [ v.constructor.name ]);\n};\nvar transpose = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_List_Types.Nil.value;\n    };\n    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {\n        return transpose(v.value1);\n    };\n    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {\n        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 813, column 1 - line 813, column 54): \" + [ v.constructor.name ]);\n};\nvar groupBy = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Nil) {\n            return Data_List_Types.Nil.value;\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            var v2 = span(v(v1.value0))(v1.value1);\n            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 609, column 1 - line 609, column 80): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar groupAllBy = function (p) {\n    var $447 = groupBy(function (x) {\n        return function (y) {\n            return eq(p(x)(y))(Data_Ordering.EQ.value);\n        };\n    });\n    var $448 = sortBy(p);\n    return function ($449) {\n        return $447($448($449));\n    };\n};\nvar group = function (dictEq) {\n    return groupBy(Data_Eq.eq(dictEq));\n};\nvar groupAll = function (dictOrd) {\n    var $450 = group(dictOrd.Eq0());\n    var $451 = sort(dictOrd);\n    return function ($452) {\n        return $450($451($452));\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);\n};\nvar foldM = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_List_Types.Nil) {\n                    return pure(v1);\n                };\n                if (v2 instanceof Data_List_Types.Cons) {\n                    return bind1(v(v1)(v2.value0))(function (b$prime) {\n                        return foldM(dictMonad)(v)(b$prime)(v2.value1);\n                    });\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 824, column 1 - line 824, column 72): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    };\n};\nvar findIndex = function (fn) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Cons) {\n                    if (fn(v1.value0)) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(v);\n                    };\n                    if (Data_Boolean.otherwise) {\n                        $tco_var_v = v + 1 | 0;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                };\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 301, column 3 - line 301, column 35): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(0);\n};\nvar findLastIndex = function (fn) {\n    return function (xs) {\n        return map(function (v) {\n            return (length(xs) - 1 | 0) - v | 0;\n        })(findIndex(fn)(reverse(xs)));\n    };\n};\nvar filterM = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (v) {\n        return function (v1) {\n            if (v1 instanceof Data_List_Types.Nil) {\n                return pure(Data_List_Types.Nil.value);\n            };\n            if (v1 instanceof Data_List_Types.Cons) {\n                return bind1(v(v1.value0))(function (b) {\n                    return bind1(filterM(dictMonad)(v)(v1.value1))(function (xs$prime) {\n                        return pure((function () {\n                            if (b) {\n                                return new Data_List_Types.Cons(v1.value0, xs$prime);\n                            };\n                            return xs$prime;\n                        })());\n                    });\n                });\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 403, column 1 - line 403, column 75): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar filter = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return reverse(v);\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    if (p(v1.value0)) {\n                        $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    if (Data_Boolean.otherwise) {\n                        $tco_var_v = v;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar intersectBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v1 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            if (v2 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            return filter(function (x) {\n                return any(v(x))(v2);\n            })(v1);\n        };\n    };\n};\nvar intersect = function (dictEq) {\n    return intersectBy(Data_Eq.eq(dictEq));\n};\nvar nubByEq = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Nil) {\n            return Data_List_Types.Nil.value;\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            return new Data_List_Types.Cons(v1.value0, nubByEq(v)(filter(function (y) {\n                return !v(v1.value0)(y);\n            })(v1.value1)));\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 705, column 1 - line 705, column 61): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar nubEq = function (dictEq) {\n    return nubByEq(Data_Eq.eq(dictEq));\n};\nvar eqPattern = function (dictEq) {\n    var eq2 = Data_Eq.eq(Data_List_Types.eqList(dictEq));\n    return {\n        eq: function (x) {\n            return function (y) {\n                return eq2(x)(y);\n            };\n        }\n    };\n};\nvar ordPattern = function (dictOrd) {\n    var compare = Data_Ord.compare(Data_List_Types.ordList(dictOrd));\n    var eqPattern1 = eqPattern(dictOrd.Eq0());\n    return {\n        compare: function (x) {\n            return function (y) {\n                return compare(x)(y);\n            };\n        },\n        Eq0: function () {\n            return eqPattern1;\n        }\n    };\n};\nvar elemLastIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findLastIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar elemIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar dropWhile = function (p) {\n    var go = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Data_List_Types.Cons && p(v.value0)) {\n                $copy_v = v.value1;\n                return;\n            };\n            $tco_done = true;\n            return v;\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    return go;\n};\nvar dropEnd = function (n) {\n    return function (xs) {\n        return take(length(xs) - n | 0)(xs);\n    };\n};\nvar drop = function ($copy_v) {\n    return function ($copy_v1) {\n        var $tco_var_v = $copy_v;\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v, v1) {\n            if (v < 1) {\n                $tco_done = true;\n                return v1;\n            };\n            if (v1 instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return Data_List_Types.Nil.value;\n            };\n            if (v1 instanceof Data_List_Types.Cons) {\n                $tco_var_v = v - 1 | 0;\n                $copy_v1 = v1.value1;\n                return;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 536, column 1 - line 536, column 42): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n        };\n        return $tco_result;\n    };\n};\nvar slice = function (start) {\n    return function (end) {\n        return function (xs) {\n            return take(end - start | 0)(drop(start)(xs));\n        };\n    };\n};\nvar takeEnd = function (n) {\n    return function (xs) {\n        return drop(length(xs) - n | 0)(xs);\n    };\n};\nvar deleteBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {\n                return v2.value1;\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 732, column 1 - line 732, column 67): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar unionBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return append1(xs)(foldl(Data_Function.flip(deleteBy(eq2)))(nubByEq(eq2)(ys))(xs));\n        };\n    };\n};\nvar union = function (dictEq) {\n    return unionBy(Data_Eq.eq(dictEq));\n};\nvar deleteAt = function (v) {\n    return function (v1) {\n        if (v === 0 && v1 instanceof Data_List_Types.Cons) {\n            return new Data_Maybe.Just(v1.value1);\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            return map(function (v2) {\n                return new Data_List_Types.Cons(v1.value0, v2);\n            })(deleteAt(v - 1 | 0)(v1.value1));\n        };\n        return Data_Maybe.Nothing.value;\n    };\n};\nvar $$delete = function (dictEq) {\n    return deleteBy(Data_Eq.eq(dictEq));\n};\nvar difference = function (dictEq) {\n    return foldl(Data_Function.flip($$delete(dictEq)));\n};\nvar concatMap = /* #__PURE__ */ Data_Function.flip(bind);\nvar concat = function (v) {\n    return bind(v)(identity);\n};\nvar catMaybes = /* #__PURE__ */ mapMaybe(identity);\nvar alterAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0 && v2 instanceof Data_List_Types.Cons) {\n                return new Data_Maybe.Just((function () {\n                    var v3 = v1(v2.value0);\n                    if (v3 instanceof Data_Maybe.Nothing) {\n                        return v2.value1;\n                    };\n                    if (v3 instanceof Data_Maybe.Just) {\n                        return new Data_List_Types.Cons(v3.value0, v2.value1);\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 352, column 3 - line 354, column 23): \" + [ v3.constructor.name ]);\n                })());\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(alterAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar modifyAt = function (n) {\n    return function (f) {\n        return alterAt(n)(function ($453) {\n            return Data_Maybe.Just.create(f($453));\n        });\n    };\n};\nexport {\n    toUnfoldable,\n    fromFoldable,\n    singleton,\n    range,\n    some,\n    someRec,\n    many,\n    manyRec,\n    $$null as null,\n    length,\n    snoc,\n    insert,\n    insertBy,\n    head,\n    last,\n    tail,\n    init,\n    uncons,\n    unsnoc,\n    index,\n    elemIndex,\n    elemLastIndex,\n    findIndex,\n    findLastIndex,\n    insertAt,\n    deleteAt,\n    updateAt,\n    modifyAt,\n    alterAt,\n    reverse,\n    concat,\n    concatMap,\n    filter,\n    filterM,\n    mapMaybe,\n    catMaybes,\n    sort,\n    sortBy,\n    Pattern,\n    stripPrefix,\n    slice,\n    take,\n    takeEnd,\n    takeWhile,\n    drop,\n    dropEnd,\n    dropWhile,\n    span,\n    group,\n    groupAll,\n    groupBy,\n    groupAllBy,\n    partition,\n    nub,\n    nubBy,\n    nubEq,\n    nubByEq,\n    union,\n    unionBy,\n    $$delete as delete,\n    deleteBy,\n    difference,\n    intersect,\n    intersectBy,\n    zipWith,\n    zipWithA,\n    zip,\n    unzip,\n    transpose,\n    foldM,\n    eqPattern,\n    ordPattern,\n    newtypePattern,\n    showPattern\n};\nexport {\n    all,\n    any,\n    elem,\n    find,\n    findMap,\n    fold,\n    foldMap,\n    foldl,\n    foldr,\n    intercalate,\n    notElem\n} from \"../Data.Foldable/index.js\";\nexport {\n    Cons,\n    Nil\n} from \"../Data.List.Types/index.js\";\nexport {\n    scanl,\n    scanr\n} from \"../Data.Traversable/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Lazy from \"../Data.List.Lazy/index.js\";\nimport * as Data_List_Lazy_Types from \"../Data.List.Lazy.Types/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Partial_Unsafe from \"../Partial.Unsafe/index.js\";\nvar all = /* #__PURE__ */ Data_Foldable.all(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_List_Types.foldableList);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Data_List_Types.applicativeList);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_List_Types.semigroupList);\nvar nub = /* #__PURE__ */ Data_List.nub(Data_Ord.ordInt);\nvar Leaf = /* #__PURE__ */ (function () {\n    function Leaf() {\n\n    };\n    Leaf.value = new Leaf();\n    return Leaf;\n})();\nvar Two = /* #__PURE__ */ (function () {\n    function Two(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Two.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Two(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Two;\n})();\nvar Three = /* #__PURE__ */ (function () {\n    function Three(value0, value1, value2, value3, value4, value5, value6) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n        this.value4 = value4;\n        this.value5 = value5;\n        this.value6 = value6;\n    };\n    Three.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return function (value4) {\n                        return function (value5) {\n                            return function (value6) {\n                                return new Three(value0, value1, value2, value3, value4, value5, value6);\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n    return Three;\n})();\nvar TwoLeft = /* #__PURE__ */ (function () {\n    function TwoLeft(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    TwoLeft.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new TwoLeft(value0, value1, value2);\n            };\n        };\n    };\n    return TwoLeft;\n})();\nvar TwoRight = /* #__PURE__ */ (function () {\n    function TwoRight(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    TwoRight.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new TwoRight(value0, value1, value2);\n            };\n        };\n    };\n    return TwoRight;\n})();\nvar ThreeLeft = /* #__PURE__ */ (function () {\n    function ThreeLeft(value0, value1, value2, value3, value4, value5) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n        this.value4 = value4;\n        this.value5 = value5;\n    };\n    ThreeLeft.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return function (value4) {\n                        return function (value5) {\n                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);\n                        };\n                    };\n                };\n            };\n        };\n    };\n    return ThreeLeft;\n})();\nvar ThreeMiddle = /* #__PURE__ */ (function () {\n    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n        this.value4 = value4;\n        this.value5 = value5;\n    };\n    ThreeMiddle.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return function (value4) {\n                        return function (value5) {\n                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);\n                        };\n                    };\n                };\n            };\n        };\n    };\n    return ThreeMiddle;\n})();\nvar ThreeRight = /* #__PURE__ */ (function () {\n    function ThreeRight(value0, value1, value2, value3, value4, value5) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n        this.value4 = value4;\n        this.value5 = value5;\n    };\n    ThreeRight.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return function (value4) {\n                        return function (value5) {\n                            return new ThreeRight(value0, value1, value2, value3, value4, value5);\n                        };\n                    };\n                };\n            };\n        };\n    };\n    return ThreeRight;\n})();\nvar KickUp = /* #__PURE__ */ (function () {\n    function KickUp(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    KickUp.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new KickUp(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return KickUp;\n})();\nvar size = function (v) {\n    if (v instanceof Leaf) {\n        return 0;\n    };\n    if (v instanceof Two) {\n        return (1 + size(v.value0) | 0) + size(v.value3) | 0;\n    };\n    if (v instanceof Three) {\n        return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;\n    };\n    throw new Error(\"Failed pattern match at Data.Map.Internal (line 705, column 1 - line 705, column 35): \" + [ v.constructor.name ]);\n};\nvar singleton = function (k) {\n    return function (v) {\n        return new Two(Leaf.value, k, v, Leaf.value);\n    };\n};\nvar toUnfoldable = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return function (m) {\n        var go = function ($copy_v) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v) {\n                if (v instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                if (v instanceof Data_List_Types.Cons) {\n                    if (v.value0 instanceof Leaf) {\n                        $copy_v = v.value1;\n                        return;\n                    };\n                    if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));\n                    };\n                    if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));\n                    };\n                    if (v.value0 instanceof Two) {\n                        $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));\n                        return;\n                    };\n                    if (v.value0 instanceof Three) {\n                        $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 624, column 18 - line 633, column 71): \" + [ v.value0.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 623, column 3 - line 623, column 19): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_v);\n            };\n            return $tco_result;\n        };\n        return unfoldr(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));\n    };\n};\nvar toUnfoldable1 = /* #__PURE__ */ toUnfoldable(Data_List_Lazy_Types.unfoldableList);\nvar toUnfoldable2 = /* #__PURE__ */ toUnfoldable(Data_List_Types.unfoldableList);\nvar toAscArray = /* #__PURE__ */ toUnfoldable(Data_Unfoldable.unfoldableArray);\nvar toUnfoldableUnordered = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return function (m) {\n        var go = function ($copy_v) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v) {\n                if (v instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                if (v instanceof Data_List_Types.Cons) {\n                    if (v.value0 instanceof Leaf) {\n                        $copy_v = v.value1;\n                        return;\n                    };\n                    if (v.value0 instanceof Two) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, v.value1))));\n                    };\n                    if (v.value0 instanceof Three) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(v.value0.value6, v.value1))))));\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 645, column 18 - line 650, column 77): \" + [ v.value0.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 644, column 3 - line 644, column 19): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_v);\n            };\n            return $tco_result;\n        };\n        return unfoldr(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));\n    };\n};\nvar showTree = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return function (v) {\n            if (v instanceof Leaf) {\n                return \"Leaf\";\n            };\n            if (v instanceof Two) {\n                return \"Two (\" + (showTree(dictShow)(dictShow1)(v.value0) + (\") (\" + (show(v.value1) + (\") (\" + (show1(v.value2) + (\") (\" + (showTree(dictShow)(dictShow1)(v.value3) + \")\")))))));\n            };\n            if (v instanceof Three) {\n                return \"Three (\" + (showTree(dictShow)(dictShow1)(v.value0) + (\") (\" + (show(v.value1) + (\") (\" + (show1(v.value2) + (\") (\" + (showTree(dictShow)(dictShow1)(v.value3) + (\") (\" + (show(v.value4) + (\") (\" + (show1(v.value5) + (\") (\" + (showTree(dictShow)(dictShow1)(v.value6) + \")\")))))))))))));\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 194, column 1 - line 194, column 62): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar showMap = function (dictShow) {\n    var showTuple = Data_Tuple.showTuple(dictShow);\n    return function (dictShow1) {\n        var show = Data_Show.show(Data_Show.showArray(showTuple(dictShow1)));\n        return {\n            show: function (m) {\n                return \"(fromFoldable \" + (show(toAscArray(m)) + \")\");\n            }\n        };\n    };\n};\nvar lookupLE = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Two) {\n                var v2 = compare(k)(v.value1);\n                if (v2 instanceof Data_Ordering.EQ) {\n                    return new Data_Maybe.Just({\n                        key: v.value1,\n                        value: v.value2\n                    });\n                };\n                if (v2 instanceof Data_Ordering.GT) {\n                    return new Data_Maybe.Just(Data_Maybe.fromMaybe({\n                        key: v.value1,\n                        value: v.value2\n                    })(go(v.value3)));\n                };\n                if (v2 instanceof Data_Ordering.LT) {\n                    return go(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 266, column 33 - line 269, column 20): \" + [ v2.constructor.name ]);\n            };\n            if (v instanceof Three) {\n                var v3 = compare(k)(v.value4);\n                if (v3 instanceof Data_Ordering.EQ) {\n                    return new Data_Maybe.Just({\n                        key: v.value4,\n                        value: v.value5\n                    });\n                };\n                if (v3 instanceof Data_Ordering.GT) {\n                    return new Data_Maybe.Just(Data_Maybe.fromMaybe({\n                        key: v.value4,\n                        value: v.value5\n                    })(go(v.value6)));\n                };\n                if (v3 instanceof Data_Ordering.LT) {\n                    return go(new Two(v.value0, v.value1, v.value2, v.value3));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 270, column 45 - line 273, column 36): \" + [ v3.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 265, column 5 - line 265, column 22): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar lookupGE = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Two) {\n                var v2 = compare(k)(v.value1);\n                if (v2 instanceof Data_Ordering.EQ) {\n                    return new Data_Maybe.Just({\n                        key: v.value1,\n                        value: v.value2\n                    });\n                };\n                if (v2 instanceof Data_Ordering.LT) {\n                    return new Data_Maybe.Just(Data_Maybe.fromMaybe({\n                        key: v.value1,\n                        value: v.value2\n                    })(go(v.value0)));\n                };\n                if (v2 instanceof Data_Ordering.GT) {\n                    return go(v.value3);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 300, column 33 - line 303, column 21): \" + [ v2.constructor.name ]);\n            };\n            if (v instanceof Three) {\n                var v3 = compare(k)(v.value1);\n                if (v3 instanceof Data_Ordering.EQ) {\n                    return new Data_Maybe.Just({\n                        key: v.value1,\n                        value: v.value2\n                    });\n                };\n                if (v3 instanceof Data_Ordering.LT) {\n                    return new Data_Maybe.Just(Data_Maybe.fromMaybe({\n                        key: v.value1,\n                        value: v.value2\n                    })(go(v.value0)));\n                };\n                if (v3 instanceof Data_Ordering.GT) {\n                    return go(new Two(v.value3, v.value4, v.value5, v.value6));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 304, column 45 - line 307, column 37): \" + [ v3.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 299, column 5 - line 299, column 22): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar lookup = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function ($copy_v) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                if (v instanceof Two) {\n                    var v2 = compare(k)(v.value1);\n                    if (v2 instanceof Data_Ordering.EQ) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(v.value2);\n                    };\n                    if (v2 instanceof Data_Ordering.LT) {\n                        $copy_v = v.value0;\n                        return;\n                    };\n                    $copy_v = v.value3;\n                    return;\n                };\n                if (v instanceof Three) {\n                    var v3 = compare(k)(v.value1);\n                    if (v3 instanceof Data_Ordering.EQ) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(v.value2);\n                    };\n                    var v4 = compare(k)(v.value4);\n                    if (v4 instanceof Data_Ordering.EQ) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(v.value5);\n                    };\n                    if (v3 instanceof Data_Ordering.LT) {\n                        $copy_v = v.value0;\n                        return;\n                    };\n                    if (v4 instanceof Data_Ordering.GT) {\n                        $copy_v = v.value6;\n                        return;\n                    };\n                    $copy_v = v.value3;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_v);\n            };\n            return $tco_result;\n        };\n        return go;\n    };\n};\nvar member = function (dictOrd) {\n    var lookup1 = lookup(dictOrd);\n    return function (k) {\n        return function (m) {\n            return Data_Maybe.isJust(lookup1(k)(m));\n        };\n    };\n};\nvar isSubmap = function (dictOrd) {\n    var lookup1 = lookup(dictOrd);\n    return function (dictEq) {\n        var eq1 = Data_Eq.eq(Data_Maybe.eqMaybe(dictEq));\n        return function (m1) {\n            return function (m2) {\n                var f = function (v) {\n                    return eq1(lookup1(v.value0)(m2))(new Data_Maybe.Just(v.value1));\n                };\n                return all(f)(toUnfoldable1(m1));\n            };\n        };\n    };\n};\nvar isEmpty = function (v) {\n    if (v instanceof Leaf) {\n        return true;\n    };\n    return false;\n};\nvar functorMap = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v1 instanceof Two) {\n                return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));\n            };\n            if (v1 instanceof Three) {\n                return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 116, column 1 - line 119, column 110): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar functorWithIndexMap = {\n    mapWithIndex: function (v) {\n        return function (v1) {\n            if (v1 instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v1 instanceof Two) {\n                return new Two(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3));\n            };\n            if (v1 instanceof Three) {\n                return new Three(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3), v1.value4, v(v1.value4)(v1.value5), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value6));\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 121, column 1 - line 124, column 152): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorMap;\n    }\n};\nvar fromZipper = function ($copy_dictOrd) {\n    return function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_dictOrd = $copy_dictOrd;\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(dictOrd, v, v1) {\n                if (v instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return v1;\n                };\n                if (v instanceof Data_List_Types.Cons) {\n                    if (v.value0 instanceof TwoLeft) {\n                        $tco_var_dictOrd = dictOrd;\n                        $tco_var_v = v.value1;\n                        $copy_v1 = new Two(v1, v.value0.value0, v.value0.value1, v.value0.value2);\n                        return;\n                    };\n                    if (v.value0 instanceof TwoRight) {\n                        $tco_var_dictOrd = dictOrd;\n                        $tco_var_v = v.value1;\n                        $copy_v1 = new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1);\n                        return;\n                    };\n                    if (v.value0 instanceof ThreeLeft) {\n                        $tco_var_dictOrd = dictOrd;\n                        $tco_var_v = v.value1;\n                        $copy_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);\n                        return;\n                    };\n                    if (v.value0 instanceof ThreeMiddle) {\n                        $tco_var_dictOrd = dictOrd;\n                        $tco_var_v = v.value1;\n                        $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1, v.value0.value3, v.value0.value4, v.value0.value5);\n                        return;\n                    };\n                    if (v.value0 instanceof ThreeRight) {\n                        $tco_var_dictOrd = dictOrd;\n                        $tco_var_v = v.value1;\n                        $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, v1);\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 462, column 3 - line 467, column 88): \" + [ v.value0.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 459, column 1 - line 459, column 80): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    var fromZipper1 = fromZipper(dictOrd);\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        return function (v) {\n            var up = function ($copy_v1) {\n                return function ($copy_v2) {\n                    var $tco_var_v1 = $copy_v1;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(v1, v2) {\n                        if (v1 instanceof Data_List_Types.Nil) {\n                            $tco_done = true;\n                            return new Two(v2.value0, v2.value1, v2.value2, v2.value3);\n                        };\n                        if (v1 instanceof Data_List_Types.Cons) {\n                            if (v1.value0 instanceof TwoLeft) {\n                                $tco_done = true;\n                                return fromZipper1(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));\n                            };\n                            if (v1.value0 instanceof TwoRight) {\n                                $tco_done = true;\n                                return fromZipper1(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));\n                            };\n                            if (v1.value0 instanceof ThreeLeft) {\n                                $tco_var_v1 = v1.value1;\n                                $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));\n                                return;\n                            };\n                            if (v1.value0 instanceof ThreeMiddle) {\n                                $tco_var_v1 = v1.value1;\n                                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));\n                                return;\n                            };\n                            if (v1.value0 instanceof ThreeRight) {\n                                $tco_var_v1 = v1.value1;\n                                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 498, column 5 - line 503, column 108): \" + [ v1.value0.constructor.name, v2.constructor.name ]);\n                        };\n                        throw new Error(\"Failed pattern match at Data.Map.Internal (line 495, column 3 - line 495, column 56): \" + [ v1.constructor.name, v2.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_v1, $copy_v2);\n                    };\n                    return $tco_result;\n                };\n            };\n            var down = function ($copy_v1) {\n                return function ($copy_v2) {\n                    var $tco_var_v1 = $copy_v1;\n                    var $tco_done1 = false;\n                    var $tco_result;\n                    function $tco_loop(v1, v2) {\n                        if (v2 instanceof Leaf) {\n                            $tco_done1 = true;\n                            return up(v1)(new KickUp(Leaf.value, k, v, Leaf.value));\n                        };\n                        if (v2 instanceof Two) {\n                            var v3 = compare(k)(v2.value1);\n                            if (v3 instanceof Data_Ordering.EQ) {\n                                $tco_done1 = true;\n                                return fromZipper1(v1)(new Two(v2.value0, k, v, v2.value3));\n                            };\n                            if (v3 instanceof Data_Ordering.LT) {\n                                $tco_var_v1 = new Data_List_Types.Cons(new TwoLeft(v2.value1, v2.value2, v2.value3), v1);\n                                $copy_v2 = v2.value0;\n                                return;\n                            };\n                            $tco_var_v1 = new Data_List_Types.Cons(new TwoRight(v2.value0, v2.value1, v2.value2), v1);\n                            $copy_v2 = v2.value3;\n                            return;\n                        };\n                        if (v2 instanceof Three) {\n                            var v3 = compare(k)(v2.value1);\n                            if (v3 instanceof Data_Ordering.EQ) {\n                                $tco_done1 = true;\n                                return fromZipper1(v1)(new Three(v2.value0, k, v, v2.value3, v2.value4, v2.value5, v2.value6));\n                            };\n                            var v4 = compare(k)(v2.value4);\n                            if (v4 instanceof Data_Ordering.EQ) {\n                                $tco_done1 = true;\n                                return fromZipper1(v1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, k, v, v2.value6));\n                            };\n                            if (v3 instanceof Data_Ordering.LT) {\n                                $tco_var_v1 = new Data_List_Types.Cons(new ThreeLeft(v2.value1, v2.value2, v2.value3, v2.value4, v2.value5, v2.value6), v1);\n                                $copy_v2 = v2.value0;\n                                return;\n                            };\n                            if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {\n                                $tco_var_v1 = new Data_List_Types.Cons(new ThreeMiddle(v2.value0, v2.value1, v2.value2, v2.value4, v2.value5, v2.value6), v1);\n                                $copy_v2 = v2.value3;\n                                return;\n                            };\n                            $tco_var_v1 = new Data_List_Types.Cons(new ThreeRight(v2.value0, v2.value1, v2.value2, v2.value3, v2.value4, v2.value5), v1);\n                            $copy_v2 = v2.value6;\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.Map.Internal (line 478, column 3 - line 478, column 55): \" + [ v1.constructor.name, v2.constructor.name ]);\n                    };\n                    while (!$tco_done1) {\n                        $tco_result = $tco_loop($tco_var_v1, $copy_v2);\n                    };\n                    return $tco_result;\n                };\n            };\n            return down(Data_List_Types.Nil.value);\n        };\n    };\n};\nvar pop = function (dictOrd) {\n    var fromZipper1 = fromZipper(dictOrd);\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var up = function ($copy_ctxs) {\n            return function ($copy_tree) {\n                var $tco_var_ctxs = $copy_ctxs;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(ctxs, tree) {\n                    if (ctxs instanceof Data_List_Types.Nil) {\n                        $tco_done = true;\n                        return tree;\n                    };\n                    if (ctxs instanceof Data_List_Types.Cons) {\n                        if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));\n                        };\n                        if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));\n                        };\n                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {\n                            $tco_var_ctxs = ctxs.value1;\n                            $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);\n                            return;\n                        };\n                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {\n                            $tco_var_ctxs = ctxs.value1;\n                            $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);\n                            return;\n                        };\n                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));\n                        };\n                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));\n                        };\n                        if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));\n                        };\n                        if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));\n                        };\n                        if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));\n                        };\n                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));\n                        };\n                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));\n                        };\n                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));\n                        };\n                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));\n                        };\n                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));\n                        };\n                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));\n                        };\n                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));\n                        };\n                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {\n                            $tco_done = true;\n                            return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));\n                        };\n                        $tco_done = true;\n                        return Partial_Unsafe.unsafeCrashWith(\"The impossible happened in partial function `up`.\");\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 552, column 5 - line 573, column 86): \" + [ ctxs.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);\n                };\n                return $tco_result;\n            };\n        };\n        var removeMaxNode = function ($copy_ctx) {\n            return function ($copy_m) {\n                var $tco_var_ctx = $copy_ctx;\n                var $tco_done1 = false;\n                var $tco_result;\n                function $tco_loop(ctx, m) {\n                    if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {\n                        $tco_done1 = true;\n                        return up(ctx)(Leaf.value);\n                    };\n                    if (m instanceof Two) {\n                        $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);\n                        $copy_m = m.value3;\n                        return;\n                    };\n                    if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {\n                        $tco_done1 = true;\n                        return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);\n                    };\n                    if (m instanceof Three) {\n                        $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);\n                        $copy_m = m.value6;\n                        return;\n                    };\n                    $tco_done1 = true;\n                    return Partial_Unsafe.unsafeCrashWith(\"The impossible happened in partial function `removeMaxNode`.\");\n                };\n                while (!$tco_done1) {\n                    $tco_result = $tco_loop($tco_var_ctx, $copy_m);\n                };\n                return $tco_result;\n            };\n        };\n        var maxNode = function ($copy_m) {\n            var $tco_done2 = false;\n            var $tco_result;\n            function $tco_loop(m) {\n                if (m instanceof Two && m.value3 instanceof Leaf) {\n                    $tco_done2 = true;\n                    return {\n                        key: m.value1,\n                        value: m.value2\n                    };\n                };\n                if (m instanceof Two) {\n                    $copy_m = m.value3;\n                    return;\n                };\n                if (m instanceof Three && m.value6 instanceof Leaf) {\n                    $tco_done2 = true;\n                    return {\n                        key: m.value4,\n                        value: m.value5\n                    };\n                };\n                if (m instanceof Three) {\n                    $copy_m = m.value6;\n                    return;\n                };\n                $tco_done2 = true;\n                return Partial_Unsafe.unsafeCrashWith(\"The impossible happened in partial function `maxNode`.\");\n            };\n            while (!$tco_done2) {\n                $tco_result = $tco_loop($copy_m);\n            };\n            return $tco_result;\n        };\n        var down = function ($copy_ctx) {\n            return function ($copy_m) {\n                var $tco_var_ctx = $copy_ctx;\n                var $tco_done3 = false;\n                var $tco_result;\n                function $tco_loop(ctx, m) {\n                    if (m instanceof Leaf) {\n                        $tco_done3 = true;\n                        return Data_Maybe.Nothing.value;\n                    };\n                    if (m instanceof Two) {\n                        var v = compare(k)(m.value1);\n                        if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {\n                            $tco_done3 = true;\n                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));\n                        };\n                        if (v instanceof Data_Ordering.EQ) {\n                            var max = maxNode(m.value0);\n                            $tco_done3 = true;\n                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));\n                        };\n                        if (v instanceof Data_Ordering.LT) {\n                            $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);\n                            $copy_m = m.value0;\n                            return;\n                        };\n                        $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);\n                        $copy_m = m.value3;\n                        return;\n                    };\n                    if (m instanceof Three) {\n                        var leaves = (function () {\n                            if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {\n                                return true;\n                            };\n                            return false;\n                        })();\n                        var v = compare(k)(m.value4);\n                        var v3 = compare(k)(m.value1);\n                        if (leaves && v3 instanceof Data_Ordering.EQ) {\n                            $tco_done3 = true;\n                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper1(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));\n                        };\n                        if (leaves && v instanceof Data_Ordering.EQ) {\n                            $tco_done3 = true;\n                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper1(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));\n                        };\n                        if (v3 instanceof Data_Ordering.EQ) {\n                            var max = maxNode(m.value0);\n                            $tco_done3 = true;\n                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));\n                        };\n                        if (v instanceof Data_Ordering.EQ) {\n                            var max = maxNode(m.value3);\n                            $tco_done3 = true;\n                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));\n                        };\n                        if (v3 instanceof Data_Ordering.LT) {\n                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);\n                            $copy_m = m.value0;\n                            return;\n                        };\n                        if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {\n                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);\n                            $copy_m = m.value3;\n                            return;\n                        };\n                        $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);\n                        $copy_m = m.value6;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 525, column 16 - line 548, column 80): \" + [ m.constructor.name ]);\n                };\n                while (!$tco_done3) {\n                    $tco_result = $tco_loop($tco_var_ctx, $copy_m);\n                };\n                return $tco_result;\n            };\n        };\n        return down(Data_List_Types.Nil.value);\n    };\n};\nvar foldableMap = {\n    foldr: function (f) {\n        return function (z) {\n            return function (m) {\n                if (m instanceof Leaf) {\n                    return z;\n                };\n                if (m instanceof Two) {\n                    return Data_Foldable.foldr(foldableMap)(f)(f(m.value2)(Data_Foldable.foldr(foldableMap)(f)(z)(m.value3)))(m.value0);\n                };\n                if (m instanceof Three) {\n                    return Data_Foldable.foldr(foldableMap)(f)(f(m.value2)(Data_Foldable.foldr(foldableMap)(f)(f(m.value5)(Data_Foldable.foldr(foldableMap)(f)(z)(m.value6)))(m.value3)))(m.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 133, column 17 - line 136, column 85): \" + [ m.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (m) {\n                if (m instanceof Leaf) {\n                    return z;\n                };\n                if (m instanceof Two) {\n                    return Data_Foldable.foldl(foldableMap)(f)(f(Data_Foldable.foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3);\n                };\n                if (m instanceof Three) {\n                    return Data_Foldable.foldl(foldableMap)(f)(f(Data_Foldable.foldl(foldableMap)(f)(f(Data_Foldable.foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 137, column 17 - line 140, column 85): \" + [ m.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        return function (f) {\n            return function (m) {\n                if (m instanceof Leaf) {\n                    return mempty;\n                };\n                if (m instanceof Two) {\n                    return append2(Data_Foldable.foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append2(f(m.value2))(Data_Foldable.foldMap(foldableMap)(dictMonoid)(f)(m.value3)));\n                };\n                if (m instanceof Three) {\n                    return append2(Data_Foldable.foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append2(f(m.value2))(append2(Data_Foldable.foldMap(foldableMap)(dictMonoid)(f)(m.value3))(append2(f(m.value5))(Data_Foldable.foldMap(foldableMap)(dictMonoid)(f)(m.value6)))));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 141, column 17 - line 144, column 93): \" + [ m.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldableWithIndexMap = {\n    foldrWithIndex: function (f) {\n        return function (z) {\n            return function (m) {\n                if (m instanceof Leaf) {\n                    return z;\n                };\n                if (m instanceof Two) {\n                    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value3)))(m.value0);\n                };\n                if (m instanceof Three) {\n                    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(f)(f(m.value4)(m.value5)(Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value6)))(m.value3)))(m.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 147, column 26 - line 150, column 120): \" + [ m.constructor.name ]);\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (z) {\n            return function (m) {\n                if (m instanceof Leaf) {\n                    return z;\n                };\n                if (m instanceof Two) {\n                    return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3);\n                };\n                if (m instanceof Three) {\n                    return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexMap)(f)(f(m.value4)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 151, column 26 - line 154, column 120): \" + [ m.constructor.name ]);\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        return function (f) {\n            return function (m) {\n                if (m instanceof Leaf) {\n                    return mempty;\n                };\n                if (m instanceof Two) {\n                    return append2(Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append2(f(m.value1)(m.value2))(Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3)));\n                };\n                if (m instanceof Three) {\n                    return append2(Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append2(f(m.value1)(m.value2))(append2(Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3))(append2(f(m.value4)(m.value5))(Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value6)))));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 155, column 26 - line 158, column 128): \" + [ m.constructor.name ]);\n            };\n        };\n    },\n    Foldable0: function () {\n        return foldableMap;\n    }\n};\nvar foldrWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap);\nvar foldlWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexMap);\nvar keys = /* #__PURE__ */ (function () {\n    return foldrWithIndex(function (k) {\n        return function (v) {\n            return function (acc) {\n                return new Data_List_Types.Cons(k, acc);\n            };\n        };\n    })(Data_List_Types.Nil.value);\n})();\nvar traversableMap = {\n    traverse: function (dictApplicative) {\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Leaf) {\n                    return pure1(Leaf.value);\n                };\n                if (v1 instanceof Two) {\n                    return apply(apply(apply(map1(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(pure1(v1.value1)))(v(v1.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value3));\n                };\n                if (v1 instanceof Three) {\n                    return apply(apply(apply(apply(apply(apply(map1(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(pure1(v1.value1)))(v(v1.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value3)))(pure1(v1.value4)))(v(v1.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value6));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 160, column 1 - line 175, column 31): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableMap)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorMap;\n    },\n    Foldable1: function () {\n        return foldableMap;\n    }\n};\nvar traversableWithIndexMap = {\n    traverseWithIndex: function (dictApplicative) {\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Leaf) {\n                    return pure1(Leaf.value);\n                };\n                if (v1 instanceof Two) {\n                    return apply(apply(apply(map1(Two.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value0)))(pure1(v1.value1)))(v(v1.value1)(v1.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value3));\n                };\n                if (v1 instanceof Three) {\n                    return apply(apply(apply(apply(apply(apply(map1(Three.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value0)))(pure1(v1.value1)))(v(v1.value1)(v1.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value3)))(pure1(v1.value4)))(v(v1.value4)(v1.value5)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value6));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 177, column 1 - line 191, column 40): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexMap;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexMap;\n    },\n    Traversable2: function () {\n        return traversableMap;\n    }\n};\nvar values = /* #__PURE__ */ (function () {\n    return Data_Foldable.foldr(foldableMap)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);\n})();\nvar foldSubmapBy = function (dictOrd) {\n    var lessThan = Data_Ord.lessThan(dictOrd);\n    var greaterThan = Data_Ord.greaterThan(dictOrd);\n    var lessThanOrEq = Data_Ord.lessThanOrEq(dictOrd);\n    return function (appendFn) {\n        return function (memptyValue) {\n            return function (kmin) {\n                return function (kmax) {\n                    return function (f) {\n                        var tooSmall = (function () {\n                            if (kmin instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThan(k)(kmin.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](false);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 363, column 7 - line 367, column 22): \" + [ kmin.constructor.name ]);\n                        })();\n                        var tooLarge = (function () {\n                            if (kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return greaterThan(k)(kmax.value0);\n                                };\n                            };\n                            if (kmax instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](false);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 370, column 7 - line 374, column 22): \" + [ kmax.constructor.name ]);\n                        })();\n                        var inBounds = (function () {\n                            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThanOrEq(kmin.value0)(k) && lessThanOrEq(k)(kmax.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {\n                                return function (k) {\n                                    return lessThanOrEq(kmin.value0)(k);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThanOrEq(k)(kmax.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](true);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 377, column 7 - line 385, column 21): \" + [ kmin.constructor.name, kmax.constructor.name ]);\n                        })();\n                        var go = function (v) {\n                            if (v instanceof Leaf) {\n                                return memptyValue;\n                            };\n                            if (v instanceof Two) {\n                                return appendFn(appendFn((function () {\n                                    var $819 = tooSmall(v.value1);\n                                    if ($819) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value0);\n                                })())((function () {\n                                    var $820 = inBounds(v.value1);\n                                    if ($820) {\n                                        return f(v.value1)(v.value2);\n                                    };\n                                    return memptyValue;\n                                })()))((function () {\n                                    var $821 = tooLarge(v.value1);\n                                    if ($821) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value3);\n                                })());\n                            };\n                            if (v instanceof Three) {\n                                return appendFn(appendFn(appendFn(appendFn((function () {\n                                    var $826 = tooSmall(v.value1);\n                                    if ($826) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value0);\n                                })())((function () {\n                                    var $827 = inBounds(v.value1);\n                                    if ($827) {\n                                        return f(v.value1)(v.value2);\n                                    };\n                                    return memptyValue;\n                                })()))((function () {\n                                    var $828 = tooSmall(v.value4) || tooLarge(v.value1);\n                                    if ($828) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value3);\n                                })()))((function () {\n                                    var $829 = inBounds(v.value4);\n                                    if ($829) {\n                                        return f(v.value4)(v.value5);\n                                    };\n                                    return memptyValue;\n                                })()))((function () {\n                                    var $830 = tooLarge(v.value4);\n                                    if ($830) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value6);\n                                })());\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 403, column 10 - line 415, column 67): \" + [ v.constructor.name ]);\n                        };\n                        return go;\n                    };\n                };\n            };\n        };\n    };\n};\nvar foldSubmap = function (dictOrd) {\n    var foldSubmapBy1 = foldSubmapBy(dictOrd);\n    return function (dictMonoid) {\n        return foldSubmapBy1(Data_Semigroup.append(dictMonoid.Semigroup0()))(Data_Monoid.mempty(dictMonoid));\n    };\n};\nvar findMin = /* #__PURE__ */ (function () {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Leaf) {\n                    $tco_done = true;\n                    return v;\n                };\n                if (v1 instanceof Two) {\n                    $tco_var_v = new Data_Maybe.Just({\n                        key: v1.value1,\n                        value: v1.value2\n                    });\n                    $copy_v1 = v1.value0;\n                    return;\n                };\n                if (v1 instanceof Three) {\n                    $tco_var_v = new Data_Maybe.Just({\n                        key: v1.value1,\n                        value: v1.value2\n                    });\n                    $copy_v1 = v1.value0;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 338, column 5 - line 338, column 22): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_Maybe.Nothing.value);\n})();\nvar lookupGT = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Two) {\n                var v2 = compare(k)(v.value1);\n                if (v2 instanceof Data_Ordering.EQ) {\n                    return findMin(v.value3);\n                };\n                if (v2 instanceof Data_Ordering.LT) {\n                    return new Data_Maybe.Just(Data_Maybe.fromMaybe({\n                        key: v.value1,\n                        value: v.value2\n                    })(go(v.value0)));\n                };\n                if (v2 instanceof Data_Ordering.GT) {\n                    return go(v.value3);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 317, column 33 - line 320, column 21): \" + [ v2.constructor.name ]);\n            };\n            if (v instanceof Three) {\n                var v3 = compare(k)(v.value1);\n                if (v3 instanceof Data_Ordering.EQ) {\n                    return findMin(new Two(v.value3, v.value4, v.value5, v.value6));\n                };\n                if (v3 instanceof Data_Ordering.LT) {\n                    return new Data_Maybe.Just(Data_Maybe.fromMaybe({\n                        key: v.value1,\n                        value: v.value2\n                    })(go(v.value0)));\n                };\n                if (v3 instanceof Data_Ordering.GT) {\n                    return go(new Two(v.value3, v.value4, v.value5, v.value6));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 321, column 45 - line 324, column 37): \" + [ v3.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 316, column 5 - line 316, column 22): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar findMax = /* #__PURE__ */ (function () {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Leaf) {\n                    $tco_done = true;\n                    return v;\n                };\n                if (v1 instanceof Two) {\n                    $tco_var_v = new Data_Maybe.Just({\n                        key: v1.value1,\n                        value: v1.value2\n                    });\n                    $copy_v1 = v1.value3;\n                    return;\n                };\n                if (v1 instanceof Three) {\n                    $tco_var_v = new Data_Maybe.Just({\n                        key: v1.value4,\n                        value: v1.value5\n                    });\n                    $copy_v1 = v1.value6;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 330, column 5 - line 330, column 22): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_Maybe.Nothing.value);\n})();\nvar lookupLT = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Two) {\n                var v2 = compare(k)(v.value1);\n                if (v2 instanceof Data_Ordering.EQ) {\n                    return findMax(v.value0);\n                };\n                if (v2 instanceof Data_Ordering.GT) {\n                    return new Data_Maybe.Just(Data_Maybe.fromMaybe({\n                        key: v.value1,\n                        value: v.value2\n                    })(go(v.value3)));\n                };\n                if (v2 instanceof Data_Ordering.LT) {\n                    return go(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 283, column 33 - line 286, column 20): \" + [ v2.constructor.name ]);\n            };\n            if (v instanceof Three) {\n                var v3 = compare(k)(v.value4);\n                if (v3 instanceof Data_Ordering.EQ) {\n                    return findMax(new Two(v.value0, v.value1, v.value2, v.value3));\n                };\n                if (v3 instanceof Data_Ordering.GT) {\n                    return new Data_Maybe.Just(Data_Maybe.fromMaybe({\n                        key: v.value4,\n                        value: v.value5\n                    })(go(v.value6)));\n                };\n                if (v3 instanceof Data_Ordering.LT) {\n                    return go(new Two(v.value0, v.value1, v.value2, v.value3));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 287, column 45 - line 290, column 36): \" + [ v3.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 282, column 5 - line 282, column 22): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar eqMap = function (dictEq) {\n    var eqTuple = Data_Tuple.eqTuple(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(Data_Eq.eqArray(eqTuple(dictEq1)));\n        return {\n            eq: function (m1) {\n                return function (m2) {\n                    return eq1(toAscArray(m1))(toAscArray(m2));\n                };\n            }\n        };\n    };\n};\nvar ordMap = function (dictOrd) {\n    var ordTuple = Data_Tuple.ordTuple(dictOrd);\n    var eqMap1 = eqMap(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare = Data_Ord.compare(Data_Ord.ordArray(ordTuple(dictOrd1)));\n        var eqMap2 = eqMap1(dictOrd1.Eq0());\n        return {\n            compare: function (m1) {\n                return function (m2) {\n                    return compare(toAscArray(m1))(toAscArray(m2));\n                };\n            },\n            Eq0: function () {\n                return eqMap2;\n            }\n        };\n    };\n};\nvar eq1Map = function (dictEq) {\n    var eqMap1 = eqMap(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqMap1(dictEq1));\n        }\n    };\n};\nvar ord1Map = function (dictOrd) {\n    var ordMap1 = ordMap(dictOrd);\n    var eq1Map1 = eq1Map(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordMap1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Map1;\n        }\n    };\n};\nvar empty = /* #__PURE__ */ (function () {\n    return Leaf.value;\n})();\nvar fromFoldable = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (dictFoldable) {\n        return Data_Foldable.foldl(dictFoldable)(function (m) {\n            return function (v) {\n                return insert1(v.value0)(v.value1)(m);\n            };\n        })(empty);\n    };\n};\nvar filterWithKey = function (dictOrd) {\n    var fromFoldable1 = fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList);\n    return function (predicate) {\n        var $927 = Data_List_Lazy.filter(Data_Tuple.uncurry(predicate));\n        return function ($928) {\n            return fromFoldable1($927(toUnfoldable1($928)));\n        };\n    };\n};\nvar filter = function (dictOrd) {\n    var filterWithKey1 = filterWithKey(dictOrd);\n    return function (predicate) {\n        return filterWithKey1(Data_Function[\"const\"](predicate));\n    };\n};\nvar filterKeys = function (dictOrd) {\n    var filterWithKey1 = filterWithKey(dictOrd);\n    return function (predicate) {\n        return filterWithKey1(function ($929) {\n            return Data_Function[\"const\"](predicate($929));\n        });\n    };\n};\nvar fromFoldableWithIndex = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (dictFoldableWithIndex) {\n        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function (k) {\n            return function (m) {\n                return function (v) {\n                    return insert1(k)(v)(m);\n                };\n            };\n        })(empty);\n    };\n};\nvar intersectionWith = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var insert1 = insert(dictOrd);\n    return function (f) {\n        return function (m1) {\n            return function (m2) {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        return function ($copy_v2) {\n                            var $tco_var_v = $copy_v;\n                            var $tco_var_v1 = $copy_v1;\n                            var $tco_done = false;\n                            var $tco_result;\n                            function $tco_loop(v, v1, v2) {\n                                if (v instanceof Data_List_Types.Nil) {\n                                    $tco_done = true;\n                                    return v2;\n                                };\n                                if (v1 instanceof Data_List_Types.Nil) {\n                                    $tco_done = true;\n                                    return v2;\n                                };\n                                if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {\n                                    var v3 = compare(v.value0.value0)(v1.value0.value0);\n                                    if (v3 instanceof Data_Ordering.LT) {\n                                        $tco_var_v = v.value1;\n                                        $tco_var_v1 = v1;\n                                        $copy_v2 = v2;\n                                        return;\n                                    };\n                                    if (v3 instanceof Data_Ordering.EQ) {\n                                        $tco_var_v = v.value1;\n                                        $tco_var_v1 = v1.value1;\n                                        $copy_v2 = insert1(v.value0.value0)(f(v.value0.value1)(v1.value0.value1))(v2);\n                                        return;\n                                    };\n                                    if (v3 instanceof Data_Ordering.GT) {\n                                        $tco_var_v = v;\n                                        $tco_var_v1 = v1.value1;\n                                        $copy_v2 = v2;\n                                        return;\n                                    };\n                                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 684, column 5 - line 687, column 27): \" + [ v3.constructor.name ]);\n                                };\n                                throw new Error(\"Failed pattern match at Data.Map.Internal (line 681, column 3 - line 681, column 17): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                            };\n                            while (!$tco_done) {\n                                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                            };\n                            return $tco_result;\n                        };\n                    };\n                };\n                return go(toUnfoldable2(m1))(toUnfoldable2(m2))(empty);\n            };\n        };\n    };\n};\nvar intersection = function (dictOrd) {\n    return intersectionWith(dictOrd)(Data_Function[\"const\"]);\n};\nvar mapMaybeWithKey = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (f) {\n        return foldrWithIndex(function (k) {\n            return function (a) {\n                return function (acc) {\n                    return Data_Maybe.maybe(acc)(function (b) {\n                        return insert1(k)(b)(acc);\n                    })(f(k)(a));\n                };\n            };\n        })(empty);\n    };\n};\nvar mapMaybe = function (dictOrd) {\n    var $930 = mapMaybeWithKey(dictOrd);\n    return function ($931) {\n        return $930(Data_Function[\"const\"]($931));\n    };\n};\nvar $$delete = function (dictOrd) {\n    var pop1 = pop(dictOrd);\n    return function (k) {\n        return function (m) {\n            return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop1(k)(m));\n        };\n    };\n};\nvar difference = function (dictOrd) {\n    var delete1 = $$delete(dictOrd);\n    return function (m1) {\n        return function (m2) {\n            return foldl(Data_Function.flip(delete1))(m1)(keys(m2));\n        };\n    };\n};\nvar checkValid = function (tree) {\n    var allHeights = function (v) {\n        if (v instanceof Leaf) {\n            return pure(0);\n        };\n        if (v instanceof Two) {\n            return map(function (n) {\n                return n + 1 | 0;\n            })(append1(allHeights(v.value0))(allHeights(v.value3)));\n        };\n        if (v instanceof Three) {\n            return map(function (n) {\n                return n + 1 | 0;\n            })(append1(allHeights(v.value0))(append1(allHeights(v.value3))(allHeights(v.value6))));\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 229, column 3 - line 229, column 36): \" + [ v.constructor.name ]);\n    };\n    return Data_List.length(nub(allHeights(tree))) === 1;\n};\nvar catMaybes = function (dictOrd) {\n    return mapMaybe(dictOrd)(identity);\n};\nvar applyMap = function (dictOrd) {\n    return {\n        apply: intersectionWith(dictOrd)(identity),\n        Functor0: function () {\n            return functorMap;\n        }\n    };\n};\nvar bindMap = function (dictOrd) {\n    var mapMaybeWithKey1 = mapMaybeWithKey(dictOrd);\n    var lookup1 = lookup(dictOrd);\n    var applyMap1 = applyMap(dictOrd);\n    return {\n        bind: function (m) {\n            return function (f) {\n                return mapMaybeWithKey1(function (k) {\n                    var $932 = lookup1(k);\n                    return function ($933) {\n                        return $932(f($933));\n                    };\n                })(m);\n            };\n        },\n        Apply0: function () {\n            return applyMap1;\n        }\n    };\n};\nvar alter = function (dictOrd) {\n    var lookup1 = lookup(dictOrd);\n    var delete1 = $$delete(dictOrd);\n    var insert1 = insert(dictOrd);\n    return function (f) {\n        return function (k) {\n            return function (m) {\n                var v = f(lookup1(k)(m));\n                if (v instanceof Data_Maybe.Nothing) {\n                    return delete1(k)(m);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return insert1(k)(v.value0)(m);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 596, column 15 - line 598, column 25): \" + [ v.constructor.name ]);\n            };\n        };\n    };\n};\nvar fromFoldableWith = function (dictOrd) {\n    var alter1 = alter(dictOrd);\n    return function (dictFoldable) {\n        var foldl1 = Data_Foldable.foldl(dictFoldable);\n        return function (f) {\n            var combine = function (v) {\n                return function (v1) {\n                    if (v1 instanceof Data_Maybe.Just) {\n                        return new Data_Maybe.Just(f(v)(v1.value0));\n                    };\n                    if (v1 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just(v);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 613, column 3 - line 613, column 38): \" + [ v.constructor.name, v1.constructor.name ]);\n                };\n            };\n            return foldl1(function (m) {\n                return function (v) {\n                    return alter1(combine(v.value1))(v.value0)(m);\n                };\n            })(empty);\n        };\n    };\n};\nvar insertWith = function (dictOrd) {\n    var alter1 = alter(dictOrd);\n    return function (f) {\n        return function (k) {\n            return function (v) {\n                return alter1((function () {\n                    var $934 = Data_Maybe.maybe(v)(Data_Function.flip(f)(v));\n                    return function ($935) {\n                        return Data_Maybe.Just.create($934($935));\n                    };\n                })())(k);\n            };\n        };\n    };\n};\nvar unionWith = function (dictOrd) {\n    var alter1 = alter(dictOrd);\n    return function (f) {\n        return function (m1) {\n            return function (m2) {\n                var go = function (k) {\n                    return function (m) {\n                        return function (v) {\n                            return alter1((function () {\n                                var $936 = Data_Maybe.maybe(v)(f(v));\n                                return function ($937) {\n                                    return Data_Maybe.Just.create($936($937));\n                                };\n                            })())(k)(m);\n                        };\n                    };\n                };\n                return foldlWithIndex(go)(m2)(m1);\n            };\n        };\n    };\n};\nvar semigroupMap = function () {\n    return function (dictOrd) {\n        var unionWith1 = unionWith(dictOrd);\n        return function (dictSemigroup) {\n            var append2 = Data_Semigroup.append(dictSemigroup);\n            return {\n                append: function (l) {\n                    return function (r) {\n                        return unionWith1(append2)(l)(r);\n                    };\n                }\n            };\n        };\n    };\n};\nvar semigroupMap1 = /* #__PURE__ */ semigroupMap();\nvar monoidSemigroupMap = function () {\n    return function (dictOrd) {\n        var semigroupMap2 = semigroupMap1(dictOrd);\n        return function (dictSemigroup) {\n            var semigroupMap3 = semigroupMap2(dictSemigroup);\n            return {\n                mempty: empty,\n                Semigroup0: function () {\n                    return semigroupMap3;\n                }\n            };\n        };\n    };\n};\nvar union = function (dictOrd) {\n    return unionWith(dictOrd)(Data_Function[\"const\"]);\n};\nvar submap = function (dictOrd) {\n    var foldSubmapBy1 = foldSubmapBy(dictOrd);\n    var union1 = union(dictOrd);\n    return function (kmin) {\n        return function (kmax) {\n            return foldSubmapBy1(union1)(empty)(kmin)(kmax)(singleton);\n        };\n    };\n};\nvar unions = function (dictOrd) {\n    var union1 = union(dictOrd);\n    return function (dictFoldable) {\n        return Data_Foldable.foldl(dictFoldable)(union1)(empty);\n    };\n};\nvar update = function (dictOrd) {\n    var alter1 = alter(dictOrd);\n    return function (f) {\n        return function (k) {\n            return function (m) {\n                return alter1(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);\n            };\n        };\n    };\n};\nvar altMap = function (dictOrd) {\n    return {\n        alt: union(dictOrd),\n        Functor0: function () {\n            return functorMap;\n        }\n    };\n};\nvar plusMap = function (dictOrd) {\n    var altMap1 = altMap(dictOrd);\n    return {\n        empty: empty,\n        Alt0: function () {\n            return altMap1;\n        }\n    };\n};\nexport {\n    Leaf,\n    Two,\n    Three,\n    showTree,\n    empty,\n    isEmpty,\n    singleton,\n    checkValid,\n    insert,\n    insertWith,\n    lookup,\n    lookupLE,\n    lookupLT,\n    lookupGE,\n    lookupGT,\n    findMin,\n    findMax,\n    foldSubmap,\n    submap,\n    fromFoldable,\n    fromFoldableWith,\n    fromFoldableWithIndex,\n    toUnfoldable,\n    toUnfoldableUnordered,\n    $$delete as delete,\n    pop,\n    member,\n    alter,\n    update,\n    keys,\n    values,\n    union,\n    unionWith,\n    unions,\n    intersection,\n    intersectionWith,\n    difference,\n    isSubmap,\n    size,\n    filterWithKey,\n    filterKeys,\n    filter,\n    mapMaybeWithKey,\n    mapMaybe,\n    catMaybes,\n    eq1Map,\n    eqMap,\n    ord1Map,\n    ordMap,\n    showMap,\n    semigroupMap,\n    monoidSemigroupMap,\n    altMap,\n    plusMap,\n    functorMap,\n    functorWithIndexMap,\n    applyMap,\n    bindMap,\n    foldableMap,\n    foldableWithIndexMap,\n    traversableMap,\n    traversableWithIndexMap\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid_Alternate from \"../Data.Monoid.Alternate/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Halogen_Data_OrdBox from \"../Halogen.Data.OrdBox/index.js\";\nvar un = /* #__PURE__ */ Data_Newtype.un();\nvar ordTuple = /* #__PURE__ */ Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox);\nvar foldSubmap = /* #__PURE__ */ Data_Map_Internal.foldSubmap(ordTuple);\nvar pop1 = /* #__PURE__ */ Data_Map_Internal.pop(ordTuple);\nvar lookup1 = /* #__PURE__ */ Data_Map_Internal.lookup(ordTuple);\nvar insert1 = /* #__PURE__ */ Data_Map_Internal.insert(ordTuple);\nvar SlotStorage = function (x) {\n    return x;\n};\nvar slots = function () {\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return function (dictOrd) {\n            var foldSubmap1 = foldSubmap(Data_Monoid_Alternate.monoidAlternate(Data_Map_Internal.plusMap(dictOrd)));\n            return function (sym) {\n                return function (v) {\n                    var key = reflectSymbol(sym);\n                    var go = function (v1) {\n                        return function (val) {\n                            if (key === v1.value0) {\n                                return Data_Map_Internal.singleton(Halogen_Data_OrdBox.unOrdBox(v1.value1))(val);\n                            };\n                            if (Data_Boolean.otherwise) {\n                                return Data_Map_Internal.empty;\n                            };\n                            throw new Error(\"Failed pattern match at Halogen.Data.Slot (line 121, column 3 - line 123, column 38): \" + [ v1.constructor.name, val.constructor.name ]);\n                        };\n                    };\n                    return un(Data_Monoid_Alternate.Alternate)(foldSubmap1(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(go)(v));\n                };\n            };\n        };\n    };\n};\nvar pop = function () {\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return function (dictOrd) {\n            var mkOrdBox = Halogen_Data_OrdBox.mkOrdBox(dictOrd);\n            return function (sym) {\n                return function (key) {\n                    return function (v) {\n                        return pop1(new Data_Tuple.Tuple(reflectSymbol(sym), mkOrdBox(key)))(v);\n                    };\n                };\n            };\n        };\n    };\n};\nvar lookup = function () {\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return function (dictOrd) {\n            var mkOrdBox = Halogen_Data_OrdBox.mkOrdBox(dictOrd);\n            return function (sym) {\n                return function (key) {\n                    return function (v) {\n                        return lookup1(new Data_Tuple.Tuple(reflectSymbol(sym), mkOrdBox(key)))(v);\n                    };\n                };\n            };\n        };\n    };\n};\nvar insert = function () {\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return function (dictOrd) {\n            var mkOrdBox = Halogen_Data_OrdBox.mkOrdBox(dictOrd);\n            return function (sym) {\n                return function (key) {\n                    return function (val) {\n                        return function (v) {\n                            return insert1(new Data_Tuple.Tuple(reflectSymbol(sym), mkOrdBox(key)))(val)(v);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar foreachSlot = function (dictApplicative) {\n    var traverse_ = Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap);\n    return function (v) {\n        return function (k) {\n            return traverse_(function ($54) {\n                return k($54);\n            })(v);\n        };\n    };\n};\nvar empty = Data_Map_Internal.empty;\nexport {\n    empty,\n    lookup,\n    insert,\n    pop,\n    slots,\n    foreachSlot\n};\n","export const _localeCompare = function (lt) {\n  return function (eq) {\n    return function (gt) {\n      return function (s1) {\n        return function (s2) {\n          var result = s1.localeCompare(s2);\n          return result < 0 ? lt : result > 0 ? gt : eq;\n        };\n      };\n    };\n  };\n};\n\nexport const replace = function (s1) {\n  return function (s2) {\n    return function (s3) {\n      return s3.replace(s1, s2);\n    };\n  };\n};\n\nexport const replaceAll = function (s1) {\n  return function (s2) {\n    return function (s3) {\n      return s3.replace(new RegExp(s1.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"), \"g\"), s2); // eslint-disable-line no-useless-escape\n    };\n  };\n};\n\nexport const split = function (sep) {\n  return function (s) {\n    return s.split(sep);\n  };\n};\n\nexport const toLower = function (s) {\n  return s.toLowerCase();\n};\n\nexport const toUpper = function (s) {\n  return s.toUpperCase();\n};\n\nexport const trim = function (s) {\n  return s.trim();\n};\n\nexport const joinWith = function (s) {\n  return function (xs) {\n    return xs.join(s);\n  };\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nvar $$null = function (s) {\n    return s === \"\";\n};\nvar localeCompare = /* #__PURE__ */ (function () {\n    return $foreign[\"_localeCompare\"](Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);\n})();\nexport {\n    replace,\n    replaceAll,\n    split,\n    toLower,\n    toUpper,\n    trim,\n    joinWith\n} from \"./foreign.js\";\nexport {\n    $$null as null,\n    localeCompare\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nvar RefLabel = function (x) {\n    return x;\n};\nvar RefUpdate = /* #__PURE__ */ (function () {\n    function RefUpdate(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    RefUpdate.create = function (value0) {\n        return function (value1) {\n            return new RefUpdate(value0, value1);\n        };\n    };\n    return RefUpdate;\n})();\nvar Action = /* #__PURE__ */ (function () {\n    function Action(value0) {\n        this.value0 = value0;\n    };\n    Action.create = function (value0) {\n        return new Action(value0);\n    };\n    return Action;\n})();\nvar ordRefLabel = Data_Ord.ordString;\nvar newtypeRefLabel = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar functorInput = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof RefUpdate) {\n                return new RefUpdate(m.value0, m.value1);\n            };\n            if (m instanceof Action) {\n                return new Action(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Query.Input (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar eqRefLabel = Data_Eq.eqString;\nexport {\n    RefLabel,\n    RefUpdate,\n    Action,\n    newtypeRefLabel,\n    eqRefLabel,\n    ordRefLabel,\n    functorInput\n};\n","//------------------------------------------------------------------------------\n// Array creation --------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const range = function (start) {\n  return function (end) {\n    var step = start > end ? -1 : 1;\n    var result = new Array(step * (end - start) + 1);\n    var i = start, n = 0;\n    while (i !== end) {\n      result[n++] = i;\n      i += step;\n    }\n    result[n] = i;\n    return result;\n  };\n};\n\nvar replicateFill = function (count) {\n  return function (value) {\n    if (count < 1) {\n      return [];\n    }\n    var result = new Array(count);\n    return result.fill(value);\n  };\n};\n\nvar replicatePolyfill = function (count) {\n  return function (value) {\n    var result = [];\n    var n = 0;\n    for (var i = 0; i < count; i++) {\n      result[n++] = value;\n    }\n    return result;\n  };\n};\n\n// In browsers that have Array.prototype.fill we use it, as it's faster.\nexport const replicate = typeof Array.prototype.fill === \"function\" ? replicateFill : replicatePolyfill;\n\nexport const fromFoldableImpl = (function () {\n  function Cons(head, tail) {\n    this.head = head;\n    this.tail = tail;\n  }\n  var emptyList = {};\n\n  function curryCons(head) {\n    return function (tail) {\n      return new Cons(head, tail);\n    };\n  }\n\n  function listToArray(list) {\n    var result = [];\n    var count = 0;\n    var xs = list;\n    while (xs !== emptyList) {\n      result[count++] = xs.head;\n      xs = xs.tail;\n    }\n    return result;\n  }\n\n  return function (foldr) {\n    return function (xs) {\n      return listToArray(foldr(curryCons)(emptyList)(xs));\n    };\n  };\n})();\n\n//------------------------------------------------------------------------------\n// Array size ------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const length = function (xs) {\n  return xs.length;\n};\n\n//------------------------------------------------------------------------------\n// Non-indexed reads -----------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const unconsImpl = function (empty) {\n  return function (next) {\n    return function (xs) {\n      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));\n    };\n  };\n};\n\n//------------------------------------------------------------------------------\n// Indexed operations ----------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const indexImpl = function (just) {\n  return function (nothing) {\n    return function (xs) {\n      return function (i) {\n        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);\n      };\n    };\n  };\n};\n\nexport const findMapImpl = function (nothing) {\n  return function (isJust) {\n    return function (f) {\n      return function (xs) {\n        for (var i = 0; i < xs.length; i++) {\n          var result = f(xs[i]);\n          if (isJust(result)) return result;\n        }\n        return nothing;\n      };\n    };\n  };\n};\n\nexport const findIndexImpl = function (just) {\n  return function (nothing) {\n    return function (f) {\n      return function (xs) {\n        for (var i = 0, l = xs.length; i < l; i++) {\n          if (f(xs[i])) return just(i);\n        }\n        return nothing;\n      };\n    };\n  };\n};\n\nexport const findLastIndexImpl = function (just) {\n  return function (nothing) {\n    return function (f) {\n      return function (xs) {\n        for (var i = xs.length - 1; i >= 0; i--) {\n          if (f(xs[i])) return just(i);\n        }\n        return nothing;\n      };\n    };\n  };\n};\n\nexport const _insertAt = function (just) {\n  return function (nothing) {\n    return function (i) {\n      return function (a) {\n        return function (l) {\n          if (i < 0 || i > l.length) return nothing;\n          var l1 = l.slice();\n          l1.splice(i, 0, a);\n          return just(l1);\n        };\n      };\n    };\n  };\n};\n\nexport const _deleteAt = function (just) {\n  return function (nothing) {\n    return function (i) {\n      return function (l) {\n        if (i < 0 || i >= l.length) return nothing;\n        var l1 = l.slice();\n        l1.splice(i, 1);\n        return just(l1);\n      };\n    };\n  };\n};\n\nexport const _updateAt = function (just) {\n  return function (nothing) {\n    return function (i) {\n      return function (a) {\n        return function (l) {\n          if (i < 0 || i >= l.length) return nothing;\n          var l1 = l.slice();\n          l1[i] = a;\n          return just(l1);\n        };\n      };\n    };\n  };\n};\n\n//------------------------------------------------------------------------------\n// Transformations -------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const reverse = function (l) {\n  return l.slice().reverse();\n};\n\nexport const concat = function (xss) {\n  if (xss.length <= 10000) {\n    // This method is faster, but it crashes on big arrays.\n    // So we use it when can and fallback to simple variant otherwise.\n    return Array.prototype.concat.apply([], xss);\n  }\n\n  var result = [];\n  for (var i = 0, l = xss.length; i < l; i++) {\n    var xs = xss[i];\n    for (var j = 0, m = xs.length; j < m; j++) {\n      result.push(xs[j]);\n    }\n  }\n  return result;\n};\n\nexport const filter = function (f) {\n  return function (xs) {\n    return xs.filter(f);\n  };\n};\n\nexport const partition = function (f) {\n  return function (xs) {\n    var yes = [];\n    var no  = [];\n    for (var i = 0; i < xs.length; i++) {\n      var x = xs[i];\n      if (f(x))\n        yes.push(x);\n      else\n        no.push(x);\n    }\n    return { yes: yes, no: no };\n  };\n};\n\nexport const scanl = function (f) {\n  return function (b) {\n    return function (xs) {\n      var len = xs.length;\n      var acc = b;\n      var out = new Array(len);\n      for (var i = 0; i < len; i++) {\n        acc = f(acc)(xs[i]);\n        out[i] = acc;\n      }\n      return out;\n    };\n  };\n};\n\nexport const scanr = function (f) {\n  return function (b) {\n    return function (xs) {\n      var len = xs.length;\n      var acc = b;\n      var out = new Array(len);\n      for (var i = len - 1; i >= 0; i--) {\n        acc = f(xs[i])(acc);\n        out[i] = acc;\n      }\n      return out;\n    };\n  };\n};\n\n//------------------------------------------------------------------------------\n// Sorting ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const sortByImpl = (function () {\n  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {\n    var mid;\n    var i;\n    var j;\n    var k;\n    var x;\n    var y;\n    var c;\n\n    mid = from + ((to - from) >> 1);\n    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);\n    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);\n\n    i = from;\n    j = mid;\n    k = from;\n    while (i < mid && j < to) {\n      x = xs2[i];\n      y = xs2[j];\n      c = fromOrdering(compare(x)(y));\n      if (c > 0) {\n        xs1[k++] = y;\n        ++j;\n      }\n      else {\n        xs1[k++] = x;\n        ++i;\n      }\n    }\n    while (i < mid) {\n      xs1[k++] = xs2[i++];\n    }\n    while (j < to) {\n      xs1[k++] = xs2[j++];\n    }\n  }\n\n  return function (compare) {\n    return function (fromOrdering) {\n      return function (xs) {\n        var out;\n\n        if (xs.length < 2) return xs;\n\n        out = xs.slice(0);\n        mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);\n\n        return out;\n      };\n    };\n  };\n})();\n\n//------------------------------------------------------------------------------\n// Subarrays -------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const slice = function (s) {\n  return function (e) {\n    return function (l) {\n      return l.slice(s, e);\n    };\n  };\n};\n\n//------------------------------------------------------------------------------\n// Zipping ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const zipWith = function (f) {\n  return function (xs) {\n    return function (ys) {\n      var l = xs.length < ys.length ? xs.length : ys.length;\n      var result = new Array(l);\n      for (var i = 0; i < l; i++) {\n        result[i] = f(xs[i])(ys[i]);\n      }\n      return result;\n    };\n  };\n};\n\n//------------------------------------------------------------------------------\n// Folding ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const any = function (p) {\n  return function (xs) {\n    var len = xs.length;\n    for (var i = 0; i < len; i++) {\n      if (p(xs[i])) return true;\n    }\n    return false;\n  };\n};\n\nexport const all = function (p) {\n  return function (xs) {\n    var len = xs.length;\n    for (var i = 0; i < len; i++) {\n      if (!p(xs[i])) return false;\n    }\n    return true;\n  };\n};\n\n//------------------------------------------------------------------------------\n// Partial ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const unsafeIndexImpl = function (xs) {\n  return function (n) {\n    return xs[n];\n  };\n};\n","function newSTArray () {\n  return [];\n}\nexport { newSTArray as new };\n\nexport const peekImpl = function (just) {\n  return function (nothing) {\n    return function (i) {\n      return function (xs) {\n        return function () {\n          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;\n        };\n      };\n    };\n  };\n};\n\nexport const poke = function (i) {\n  return function (a) {\n    return function (xs) {\n      return function () {\n        var ret = i >= 0 && i < xs.length;\n        if (ret) xs[i] = a;\n        return ret;\n      };\n    };\n  };\n};\n\nexport const length = function (xs) {\n  return function () {\n    return xs.length;\n  };\n};\n\nexport const popImpl = function (just) {\n  return function (nothing) {\n    return function (xs) {\n      return function () {\n        return xs.length > 0 ? just(xs.pop()) : nothing;\n      };\n    };\n  };\n};\n\nexport const pushAll = function (as) {\n  return function (xs) {\n    return function () {\n      return xs.push.apply(xs, as);\n    };\n  };\n};\n\nexport const shiftImpl = function (just) {\n  return function (nothing) {\n    return function (xs) {\n      return function () {\n        return xs.length > 0 ? just(xs.shift()) : nothing;\n      };\n    };\n  };\n};\n\nexport const unshiftAll = function (as) {\n  return function (xs) {\n    return function () {\n      return xs.unshift.apply(xs, as);\n    };\n  };\n};\n\nexport const splice = function (i) {\n  return function (howMany) {\n    return function (bs) {\n      return function (xs) {\n        return function () {\n          return xs.splice.apply(xs, [i, howMany].concat(bs));\n        };\n      };\n    };\n  };\n};\n\nexport const unsafeFreeze = function (xs) {\n  return function () {\n    return xs;\n  };\n};\n\nexport const unsafeThaw = function (xs) {\n  return function () {\n    return xs;\n  };\n};\n\nfunction copyImpl(xs) {\n  return function () {\n    return xs.slice();\n  };\n}\n\nexport const freeze = copyImpl;\n\nexport const thaw = copyImpl;\n\nexport const sortByImpl = (function () {\n  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {\n    var mid;\n    var i;\n    var j;\n    var k;\n    var x;\n    var y;\n    var c;\n\n    mid = from + ((to - from) >> 1);\n    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);\n    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);\n\n    i = from;\n    j = mid;\n    k = from;\n    while (i < mid && j < to) {\n      x = xs2[i];\n      y = xs2[j];\n      c = fromOrdering(compare(x)(y));\n      if (c > 0) {\n        xs1[k++] = y;\n        ++j;\n      }\n      else {\n        xs1[k++] = x;\n        ++i;\n      }\n    }\n    while (i < mid) {\n      xs1[k++] = xs2[i++];\n    }\n    while (j < to) {\n      xs1[k++] = xs2[j++];\n    }\n  }\n\n  return function (compare) {\n    return function (fromOrdering) {\n      return function (xs) {\n        return function () {\n          if (xs.length < 2) return xs;\n\n          mergeFromTo(compare, fromOrdering, xs, xs.slice(0), 0, xs.length);\n\n          return xs;\n        };\n      };\n    };\n  };\n})();\n\nexport const toAssocArray = function (xs) {\n  return function () {\n    var n = xs.length;\n    var as = new Array(n);\n    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };\n    return as;\n  };\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nvar bind = /* #__PURE__ */ Control_Bind.bind(Control_Monad_ST_Internal.bindST);\nvar withArray = function (f) {\n    return function (xs) {\n        return function __do() {\n            var result = $foreign.thaw(xs)();\n            f(result)();\n            return $foreign.unsafeFreeze(result)();\n        };\n    };\n};\nvar unshift = function (a) {\n    return $foreign.unshiftAll([ a ]);\n};\nvar sortBy = function (comp) {\n    return $foreign.sortByImpl(comp)(function (v) {\n        if (v instanceof Data_Ordering.GT) {\n            return 1;\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return 0;\n        };\n        if (v instanceof Data_Ordering.LT) {\n            return -1 | 0;\n        };\n        throw new Error(\"Failed pattern match at Data.Array.ST (line 109, column 31 - line 112, column 11): \" + [ v.constructor.name ]);\n    });\n};\nvar sortWith = function (dictOrd) {\n    var comparing = Data_Ord.comparing(dictOrd);\n    return function (f) {\n        return sortBy(comparing(f));\n    };\n};\nvar sort = function (dictOrd) {\n    return sortBy(Data_Ord.compare(dictOrd));\n};\nvar shift = /* #__PURE__ */ (function () {\n    return $foreign.shiftImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar run = function (st) {\n    return bind(st)($foreign.unsafeFreeze)();\n};\nvar push = function (a) {\n    return $foreign.pushAll([ a ]);\n};\nvar pop = /* #__PURE__ */ (function () {\n    return $foreign.popImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar peek = /* #__PURE__ */ (function () {\n    return $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar modify = function (i) {\n    return function (f) {\n        return function (xs) {\n            return function __do() {\n                var entry = peek(i)(xs)();\n                if (entry instanceof Data_Maybe.Just) {\n                    return $foreign.poke(i)(f(entry.value0))(xs)();\n                };\n                if (entry instanceof Data_Maybe.Nothing) {\n                    return false;\n                };\n                throw new Error(\"Failed pattern match at Data.Array.ST (line 197, column 3 - line 199, column 26): \" + [ entry.constructor.name ]);\n            };\n        };\n    };\n};\nexport {\n    new,\n    poke,\n    length,\n    pushAll,\n    unshiftAll,\n    splice,\n    freeze,\n    thaw,\n    unsafeFreeze,\n    unsafeThaw,\n    toAssocArray\n} from \"./foreign.js\";\nexport {\n    run,\n    withArray,\n    peek,\n    modify,\n    pop,\n    push,\n    shift,\n    unshift,\n    sort,\n    sortBy,\n    sortWith\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Array_ST from \"../Data.Array.ST/index.js\";\nimport * as Data_Array_ST_Iterator from \"../Data.Array.ST.Iterator/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nvar sequence = /* #__PURE__ */ Data_Traversable.sequence(Data_Traversable.traversableArray);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST);\nvar map = /* #__PURE__ */ Data_Functor.map(Control_Monad_ST_Internal.functorST);\nvar when = /* #__PURE__ */ Control_Applicative.when(Control_Monad_ST_Internal.applicativeST);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar intercalate1 = /* #__PURE__ */ Data_Foldable.intercalate(Data_Foldable.foldableArray);\nvar apply = /* #__PURE__ */ Control_Apply.apply(Data_Maybe.applyMaybe);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar foldMap1 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableArray);\nvar fold1 = /* #__PURE__ */ Data_Foldable.fold(Data_Foldable.foldableArray);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar traverse = /* #__PURE__ */ Data_Traversable.traverse(Data_Traversable.traversableArray);\nvar zipWithA = function (dictApplicative) {\n    var sequence1 = sequence(dictApplicative);\n    return function (f) {\n        return function (xs) {\n            return function (ys) {\n                return sequence1($foreign.zipWith(f)(xs)(ys));\n            };\n        };\n    };\n};\nvar zip = /* #__PURE__ */ (function () {\n    return $foreign.zipWith(Data_Tuple.Tuple.create);\n})();\nvar updateAtIndices = function (dictFoldable) {\n    var traverse_1 = traverse_(dictFoldable);\n    return function (us) {\n        return function (xs) {\n            return Data_Array_ST.withArray(function (res) {\n                return traverse_1(function (v) {\n                    return Data_Array_ST.poke(v.value0)(v.value1)(res);\n                })(us);\n            })(xs)();\n        };\n    };\n};\nvar updateAt = /* #__PURE__ */ (function () {\n    return $foreign[\"_updateAt\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar unsafeIndex = function () {\n    return $foreign.unsafeIndexImpl;\n};\nvar unsafeIndex1 = /* #__PURE__ */ unsafeIndex();\nvar uncons = /* #__PURE__ */ (function () {\n    return $foreign.unconsImpl(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function (x) {\n        return function (xs) {\n            return new Data_Maybe.Just({\n                head: x,\n                tail: xs\n            });\n        };\n    });\n})();\nvar toUnfoldable = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return function (xs) {\n        var len = $foreign.length(xs);\n        var f = function (i) {\n            if (i < len) {\n                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex1(xs)(i), i + 1 | 0));\n            };\n            if (Data_Boolean.otherwise) {\n                return Data_Maybe.Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Array (line 158, column 3 - line 160, column 26): \" + [ i.constructor.name ]);\n        };\n        return unfoldr(f)(0);\n    };\n};\nvar take = function (n) {\n    return function (xs) {\n        var $149 = n < 1;\n        if ($149) {\n            return [  ];\n        };\n        return $foreign.slice(0)(n)(xs);\n    };\n};\nvar tail = /* #__PURE__ */ (function () {\n    return $foreign.unconsImpl(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function (v) {\n        return function (xs) {\n            return new Data_Maybe.Just(xs);\n        };\n    });\n})();\nvar splitAt = function (v) {\n    return function (v1) {\n        if (v <= 0) {\n            return {\n                before: [  ],\n                after: v1\n            };\n        };\n        return {\n            before: $foreign.slice(0)(v)(v1),\n            after: $foreign.slice(v)($foreign.length(v1))(v1)\n        };\n    };\n};\nvar sortBy = function (comp) {\n    return $foreign.sortByImpl(comp)(function (v) {\n        if (v instanceof Data_Ordering.GT) {\n            return 1;\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return 0;\n        };\n        if (v instanceof Data_Ordering.LT) {\n            return -1 | 0;\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 870, column 31 - line 873, column 11): \" + [ v.constructor.name ]);\n    });\n};\nvar sortWith = function (dictOrd) {\n    var comparing = Data_Ord.comparing(dictOrd);\n    return function (f) {\n        return sortBy(comparing(f));\n    };\n};\nvar sortWith1 = /* #__PURE__ */ sortWith(Data_Ord.ordInt);\nvar sort = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (xs) {\n        return sortBy(compare)(xs);\n    };\n};\nvar snoc = function (xs) {\n    return function (x) {\n        return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();\n    };\n};\nvar singleton = function (a) {\n    return [ a ];\n};\nvar $$null = function (xs) {\n    return $foreign.length(xs) === 0;\n};\nvar nubByEq = function (eq2) {\n    return function (xs) {\n        return (function __do() {\n            var arr = Data_Array_ST[\"new\"]();\n            Control_Monad_ST_Internal.foreach(xs)(function (x) {\n                return function __do() {\n                    var e = map((function () {\n                        var $183 = $foreign.any(function (v) {\n                            return eq2(v)(x);\n                        });\n                        return function ($184) {\n                            return !$183($184);\n                        };\n                    })())(Data_Array_ST.unsafeFreeze(arr))();\n                    return when(e)($$void(Data_Array_ST.push(x)(arr)))();\n                };\n            })();\n            return Data_Array_ST.unsafeFreeze(arr)();\n        })();\n    };\n};\nvar nubEq = function (dictEq) {\n    return nubByEq(Data_Eq.eq(dictEq));\n};\nvar modifyAtIndices = function (dictFoldable) {\n    var traverse_1 = traverse_(dictFoldable);\n    return function (is) {\n        return function (f) {\n            return function (xs) {\n                return Data_Array_ST.withArray(function (res) {\n                    return traverse_1(function (i) {\n                        return Data_Array_ST.modify(i)(f)(res);\n                    })(is);\n                })(xs)();\n            };\n        };\n    };\n};\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray);\nvar intersperse = function (a) {\n    return function (arr) {\n        var v = $foreign.length(arr);\n        if (v < 2) {\n            return arr;\n        };\n        if (Data_Boolean.otherwise) {\n            return Data_Array_ST.run((function () {\n                var unsafeGetElem = function (idx) {\n                    return unsafeIndex1(arr)(idx);\n                };\n                return function __do() {\n                    var out = Data_Array_ST[\"new\"]();\n                    Data_Array_ST.push(unsafeGetElem(0))(out)();\n                    Control_Monad_ST_Internal[\"for\"](1)(v)(function (idx) {\n                        return function __do() {\n                            Data_Array_ST.push(a)(out)();\n                            return $$void(Data_Array_ST.push(unsafeGetElem(idx))(out))();\n                        };\n                    })();\n                    return out;\n                };\n            })());\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 613, column 21 - line 622, column 19): \" + [ v.constructor.name ]);\n    };\n};\nvar intercalate = function (dictMonoid) {\n    return intercalate1(dictMonoid);\n};\nvar insertAt = /* #__PURE__ */ (function () {\n    return $foreign[\"_insertAt\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar init = function (xs) {\n    if ($$null(xs)) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (Data_Boolean.otherwise) {\n        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));\n    };\n    throw new Error(\"Failed pattern match at Data.Array (line 340, column 1 - line 340, column 45): \" + [ xs.constructor.name ]);\n};\nvar index = /* #__PURE__ */ (function () {\n    return $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar last = function (xs) {\n    return index(xs)($foreign.length(xs) - 1 | 0);\n};\nvar unsnoc = function (xs) {\n    return apply(map1(function (v) {\n        return function (v1) {\n            return {\n                init: v,\n                last: v1\n            };\n        };\n    })(init(xs)))(last(xs));\n};\nvar modifyAt = function (i) {\n    return function (f) {\n        return function (xs) {\n            var go = function (x) {\n                return updateAt(i)(f(x))(xs);\n            };\n            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));\n        };\n    };\n};\nvar span = function (p) {\n    return function (arr) {\n        var go = function ($copy_i) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(i) {\n                var v = index(arr)(i);\n                if (v instanceof Data_Maybe.Just) {\n                    var $156 = p(v.value0);\n                    if ($156) {\n                        $copy_i = i + 1 | 0;\n                        return;\n                    };\n                    $tco_done = true;\n                    return new Data_Maybe.Just(i);\n                };\n                if (v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 1005, column 5 - line 1007, column 25): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_i);\n            };\n            return $tco_result;\n        };\n        var breakIndex = go(0);\n        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {\n            return {\n                init: [  ],\n                rest: arr\n            };\n        };\n        if (breakIndex instanceof Data_Maybe.Just) {\n            return {\n                init: $foreign.slice(0)(breakIndex.value0)(arr),\n                rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)\n            };\n        };\n        if (breakIndex instanceof Data_Maybe.Nothing) {\n            return {\n                init: arr,\n                rest: [  ]\n            };\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 992, column 3 - line 998, column 30): \" + [ breakIndex.constructor.name ]);\n    };\n};\nvar takeWhile = function (p) {\n    return function (xs) {\n        return (span(p)(xs)).init;\n    };\n};\nvar unzip = function (xs) {\n    return (function __do() {\n        var fsts = Data_Array_ST[\"new\"]();\n        var snds = Data_Array_ST[\"new\"]();\n        var iter = Data_Array_ST_Iterator.iterator(function (v) {\n            return index(xs)(v);\n        })();\n        Data_Array_ST_Iterator.iterate(iter)(function (v) {\n            return function __do() {\n                $$void(Data_Array_ST.push(v.value0)(fsts))();\n                return $$void(Data_Array_ST.push(v.value1)(snds))();\n            };\n        })();\n        var fsts$prime = Data_Array_ST.unsafeFreeze(fsts)();\n        var snds$prime = Data_Array_ST.unsafeFreeze(snds)();\n        return new Data_Tuple.Tuple(fsts$prime, snds$prime);\n    })();\n};\nvar head = function (xs) {\n    return index(xs)(0);\n};\nvar nubBy = function (comp) {\n    return function (xs) {\n        var indexedAndSorted = sortBy(function (x) {\n            return function (y) {\n                return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));\n            };\n        })(mapWithIndex(Data_Tuple.Tuple.create)(xs));\n        var v = head(indexedAndSorted);\n        if (v instanceof Data_Maybe.Nothing) {\n            return [  ];\n        };\n        if (v instanceof Data_Maybe.Just) {\n            return map2(Data_Tuple.snd)(sortWith1(Data_Tuple.fst)((function __do() {\n                var result = Data_Array_ST.unsafeThaw(singleton(v.value0))();\n                Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v1) {\n                    return function __do() {\n                        var lst = map((function () {\n                            var $185 = function ($187) {\n                                return fromJust(last($187));\n                            };\n                            return function ($186) {\n                                return Data_Tuple.snd($185($186));\n                            };\n                        })())(Data_Array_ST.unsafeFreeze(result))();\n                        return when(notEq(comp(lst)(v1.value1))(Data_Ordering.EQ.value))($$void(Data_Array_ST.push(v1)(result)))();\n                    };\n                })();\n                return Data_Array_ST.unsafeFreeze(result)();\n            })()));\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 1085, column 17 - line 1093, column 29): \" + [ v.constructor.name ]);\n    };\n};\nvar nub = function (dictOrd) {\n    return nubBy(Data_Ord.compare(dictOrd));\n};\nvar groupBy = function (op) {\n    return function (xs) {\n        return (function __do() {\n            var result = Data_Array_ST[\"new\"]();\n            var iter = Data_Array_ST_Iterator.iterator(function (v) {\n                return index(xs)(v);\n            })();\n            Data_Array_ST_Iterator.iterate(iter)(function (x) {\n                return $$void(function __do() {\n                    var sub1 = Data_Array_ST[\"new\"]();\n                    Data_Array_ST.push(x)(sub1)();\n                    Data_Array_ST_Iterator.pushWhile(op(x))(iter)(sub1)();\n                    var grp = Data_Array_ST.unsafeFreeze(sub1)();\n                    return Data_Array_ST.push(grp)(result)();\n                });\n            })();\n            return Data_Array_ST.unsafeFreeze(result)();\n        })();\n    };\n};\nvar groupAllBy = function (cmp) {\n    var $188 = groupBy(function (x) {\n        return function (y) {\n            return eq1(cmp(x)(y))(Data_Ordering.EQ.value);\n        };\n    });\n    var $189 = sortBy(cmp);\n    return function ($190) {\n        return $188($189($190));\n    };\n};\nvar groupAll = function (dictOrd) {\n    return groupAllBy(Data_Ord.compare(dictOrd));\n};\nvar group = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (xs) {\n        return groupBy(eq2)(xs);\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));\n};\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableArray);\nvar transpose = function (xs) {\n    var buildNext = function (idx) {\n        return Data_Function.flip(foldl)(Data_Maybe.Nothing.value)(function (acc) {\n            return function (nextArr) {\n                return Data_Maybe.maybe(acc)(function (el) {\n                    return new Data_Maybe.Just(Data_Maybe.maybe([ el ])(Data_Function.flip(snoc)(el))(acc));\n                })(index(nextArr)(idx));\n            };\n        })(xs);\n    };\n    var go = function ($copy_idx) {\n        return function ($copy_allArrays) {\n            var $tco_var_idx = $copy_idx;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(idx, allArrays) {\n                var v = buildNext(idx);\n                if (v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return allArrays;\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    $tco_var_idx = idx + 1 | 0;\n                    $copy_allArrays = snoc(allArrays)(v.value0);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 816, column 22 - line 818, column 52): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_idx, $copy_allArrays);\n            };\n            return $tco_result;\n        };\n    };\n    return go(0)([  ]);\n};\nvar foldRecM = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n    var bind1 = Control_Bind.bind(Monad0.Bind1());\n    var tailRecM2 = Control_Monad_Rec_Class.tailRecM2(dictMonadRec);\n    return function (f) {\n        return function (b) {\n            return function (array) {\n                var go = function (res) {\n                    return function (i) {\n                        if (i >= $foreign.length(array)) {\n                            return pure1(new Control_Monad_Rec_Class.Done(res));\n                        };\n                        if (Data_Boolean.otherwise) {\n                            return bind1(f(res)(unsafeIndex1(array)(i)))(function (res$prime) {\n                                return pure1(new Control_Monad_Rec_Class.Loop({\n                                    a: res$prime,\n                                    b: i + 1 | 0\n                                }));\n                            });\n                        };\n                        throw new Error(\"Failed pattern match at Data.Array (line 1304, column 3 - line 1308, column 42): \" + [ res.constructor.name, i.constructor.name ]);\n                    };\n                };\n                return tailRecM2(go)(b)(0);\n            };\n        };\n    };\n};\nvar foldMap = function (dictMonoid) {\n    return foldMap1(dictMonoid);\n};\nvar foldM = function (dictMonad) {\n    var pure1 = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (f) {\n        return function (b) {\n            return $foreign.unconsImpl(function (v) {\n                return pure1(b);\n            })(function (a) {\n                return function (as) {\n                    return bind1(f(b)(a))(function (b$prime) {\n                        return foldM(dictMonad)(f)(b$prime)(as);\n                    });\n                };\n            });\n        };\n    };\n};\nvar fold = function (dictMonoid) {\n    return fold1(dictMonoid);\n};\nvar findMap = /* #__PURE__ */ (function () {\n    return $foreign.findMapImpl(Data_Maybe.Nothing.value)(Data_Maybe.isJust);\n})();\nvar findLastIndex = /* #__PURE__ */ (function () {\n    return $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar insertBy = function (cmp) {\n    return function (x) {\n        return function (ys) {\n            var i = Data_Maybe.maybe(0)(function (v) {\n                return v + 1 | 0;\n            })(findLastIndex(function (y) {\n                return eq1(cmp(x)(y))(Data_Ordering.GT.value);\n            })(ys));\n            return fromJust(insertAt(i)(x)(ys));\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    return insertBy(Data_Ord.compare(dictOrd));\n};\nvar findIndex = /* #__PURE__ */ (function () {\n    return $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar intersectBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return $foreign.filter(function (x) {\n                return Data_Maybe.isJust(findIndex(eq2(x))(ys));\n            })(xs);\n        };\n    };\n};\nvar intersect = function (dictEq) {\n    return intersectBy(Data_Eq.eq(dictEq));\n};\nvar find = function (f) {\n    return function (xs) {\n        return map1(unsafeIndex1(xs))(findIndex(f)(xs));\n    };\n};\nvar elemLastIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findLastIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar elemIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar notElem = function (dictEq) {\n    var elemIndex1 = elemIndex(dictEq);\n    return function (a) {\n        return function (arr) {\n            return Data_Maybe.isNothing(elemIndex1(a)(arr));\n        };\n    };\n};\nvar elem = function (dictEq) {\n    var elemIndex1 = elemIndex(dictEq);\n    return function (a) {\n        return function (arr) {\n            return Data_Maybe.isJust(elemIndex1(a)(arr));\n        };\n    };\n};\nvar dropWhile = function (p) {\n    return function (xs) {\n        return (span(p)(xs)).rest;\n    };\n};\nvar dropEnd = function (n) {\n    return function (xs) {\n        return take($foreign.length(xs) - n | 0)(xs);\n    };\n};\nvar drop = function (n) {\n    return function (xs) {\n        var $173 = n < 1;\n        if ($173) {\n            return xs;\n        };\n        return $foreign.slice(n)($foreign.length(xs))(xs);\n    };\n};\nvar takeEnd = function (n) {\n    return function (xs) {\n        return drop($foreign.length(xs) - n | 0)(xs);\n    };\n};\nvar deleteAt = /* #__PURE__ */ (function () {\n    return $foreign[\"_deleteAt\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar deleteBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2.length === 0) {\n                return [  ];\n            };\n            return Data_Maybe.maybe(v2)(function (i) {\n                return fromJust(deleteAt(i)(v2));\n            })(findIndex(v(v1))(v2));\n        };\n    };\n};\nvar unionBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return append(xs)(foldl(Data_Function.flip(deleteBy(eq2)))(nubByEq(eq2)(ys))(xs));\n        };\n    };\n};\nvar union = function (dictEq) {\n    return unionBy(Data_Eq.eq(dictEq));\n};\nvar $$delete = function (dictEq) {\n    return deleteBy(Data_Eq.eq(dictEq));\n};\nvar difference = function (dictEq) {\n    return foldr($$delete(dictEq));\n};\nvar cons = function (x) {\n    return function (xs) {\n        return append([ x ])(xs);\n    };\n};\nvar some = function (dictAlternative) {\n    var apply1 = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n    var map3 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n    return function (dictLazy) {\n        var defer = Control_Lazy.defer(dictLazy);\n        return function (v) {\n            return apply1(map3(cons)(v))(defer(function (v1) {\n                return many(dictAlternative)(dictLazy)(v);\n            }));\n        };\n    };\n};\nvar many = function (dictAlternative) {\n    var alt = Control_Alt.alt((dictAlternative.Plus1()).Alt0());\n    var pure1 = Control_Applicative.pure(dictAlternative.Applicative0());\n    return function (dictLazy) {\n        return function (v) {\n            return alt(some(dictAlternative)(dictLazy)(v))(pure1([  ]));\n        };\n    };\n};\nvar concatMap = /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ Control_Bind.bind(Control_Bind.bindArray));\nvar mapMaybe = function (f) {\n    return concatMap((function () {\n        var $191 = Data_Maybe.maybe([  ])(singleton);\n        return function ($192) {\n            return $191(f($192));\n        };\n    })());\n};\nvar filterA = function (dictApplicative) {\n    var traverse1 = traverse(dictApplicative);\n    var map3 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n    return function (p) {\n        var $193 = map3(mapMaybe(function (v) {\n            if (v.value1) {\n                return new Data_Maybe.Just(v.value0);\n            };\n            return Data_Maybe.Nothing.value;\n        }));\n        var $194 = traverse1(function (x) {\n            return map3(Data_Tuple.Tuple.create(x))(p(x));\n        });\n        return function ($195) {\n            return $193($194($195));\n        };\n    };\n};\nvar catMaybes = /* #__PURE__ */ mapMaybe(/* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn));\nvar alterAt = function (i) {\n    return function (f) {\n        return function (xs) {\n            var go = function (x) {\n                var v = f(x);\n                if (v instanceof Data_Maybe.Nothing) {\n                    return deleteAt(i)(xs);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return updateAt(i)(v.value0)(xs);\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 591, column 10 - line 593, column 32): \" + [ v.constructor.name ]);\n            };\n            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));\n        };\n    };\n};\nexport {\n    range,\n    replicate,\n    length,\n    reverse,\n    concat,\n    filter,\n    partition,\n    scanl,\n    scanr,\n    slice,\n    zipWith,\n    any,\n    all\n} from \"./foreign.js\";\nexport {\n    fromFoldable,\n    toUnfoldable,\n    singleton,\n    some,\n    many,\n    $$null as null,\n    cons,\n    snoc,\n    insert,\n    insertBy,\n    head,\n    last,\n    tail,\n    init,\n    uncons,\n    unsnoc,\n    index,\n    elem,\n    notElem,\n    elemIndex,\n    elemLastIndex,\n    find,\n    findMap,\n    findIndex,\n    findLastIndex,\n    insertAt,\n    deleteAt,\n    updateAt,\n    updateAtIndices,\n    modifyAt,\n    modifyAtIndices,\n    alterAt,\n    intersperse,\n    concatMap,\n    splitAt,\n    filterA,\n    mapMaybe,\n    catMaybes,\n    mapWithIndex,\n    foldl,\n    foldr,\n    foldMap,\n    fold,\n    intercalate,\n    transpose,\n    sort,\n    sortBy,\n    sortWith,\n    take,\n    takeEnd,\n    takeWhile,\n    drop,\n    dropEnd,\n    dropWhile,\n    span,\n    group,\n    groupAll,\n    groupBy,\n    groupAllBy,\n    nub,\n    nubEq,\n    nubBy,\n    nubByEq,\n    union,\n    unionBy,\n    $$delete as delete,\n    deleteBy,\n    difference,\n    intersect,\n    intersectBy,\n    zipWithA,\n    zip,\n    unzip,\n    foldM,\n    foldRecM,\n    unsafeIndex\n};\n","// Generated by purs version 0.15.7\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar Step = /* #__PURE__ */ (function () {\n    function Step(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Step.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Step(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Step;\n})();\nvar unStep = Unsafe_Coerce.unsafeCoerce;\nvar step = function (v, a) {\n    return v.value2(v.value1, a);\n};\nvar mkStep = Unsafe_Coerce.unsafeCoerce;\nvar halt = function (v) {\n    return v.value3(v.value1);\n};\nvar extract = /* #__PURE__ */ unStep(function (v) {\n    return v.value0;\n});\nexport {\n    Step,\n    mkStep,\n    unStep,\n    extract,\n    step,\n    halt\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar Namespace = function (x) {\n    return x;\n};\nvar ElemName = function (x) {\n    return x;\n};\nvar Text = /* #__PURE__ */ (function () {\n    function Text(value0) {\n        this.value0 = value0;\n    };\n    Text.create = function (value0) {\n        return new Text(value0);\n    };\n    return Text;\n})();\nvar Elem = /* #__PURE__ */ (function () {\n    function Elem(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Elem.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Elem(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Elem;\n})();\nvar Keyed = /* #__PURE__ */ (function () {\n    function Keyed(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Keyed.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Keyed(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Keyed;\n})();\nvar Widget = /* #__PURE__ */ (function () {\n    function Widget(value0) {\n        this.value0 = value0;\n    };\n    Widget.create = function (value0) {\n        return new Widget(value0);\n    };\n    return Widget;\n})();\nvar Grafted = /* #__PURE__ */ (function () {\n    function Grafted(value0) {\n        this.value0 = value0;\n    };\n    Grafted.create = function (value0) {\n        return new Grafted(value0);\n    };\n    return Grafted;\n})();\nvar Graft = /* #__PURE__ */ (function () {\n    function Graft(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    Graft.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new Graft(value0, value1, value2);\n            };\n        };\n    };\n    return Graft;\n})();\nvar unGraft = function (f) {\n    return function ($61) {\n        return f($61);\n    };\n};\nvar ordNamespace = Data_Ord.ordString;\nvar ordElemName = Data_Ord.ordString;\nvar newtypeNamespace = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeElemName = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar graft = Unsafe_Coerce.unsafeCoerce;\nvar functorGraft = {\n    map: function (g) {\n        return unGraft(function (v) {\n            return graft(new Graft(v.value0, function ($62) {\n                return g(v.value1($62));\n            }, v.value2));\n        });\n    }\n};\nvar map2 = /* #__PURE__ */ Data_Functor.map(functorGraft);\nvar functorVDom = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Text) {\n                return new Text(v1.value0);\n            };\n            if (v1 instanceof Grafted) {\n                return new Grafted(map2(v)(v1.value0));\n            };\n            return new Grafted(graft(new Graft(identity, v, v1)));\n        };\n    }\n};\nvar eqNamespace = Data_Eq.eqString;\nvar eqElemName = Data_Eq.eqString;\nvar bifunctorGraft = {\n    bimap: function (f) {\n        return function (g) {\n            return unGraft(function (v) {\n                return graft(new Graft(function ($63) {\n                    return f(v.value0($63));\n                }, function ($64) {\n                    return g(v.value1($64));\n                }, v.value2));\n            });\n        };\n    }\n};\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(bifunctorGraft);\nvar bifunctorVDom = {\n    bimap: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Text) {\n                    return new Text(v2.value0);\n                };\n                if (v2 instanceof Grafted) {\n                    return new Grafted(bimap(v)(v1)(v2.value0));\n                };\n                return new Grafted(graft(new Graft(v, v1, v2)));\n            };\n        };\n    }\n};\nvar runGraft = /* #__PURE__ */ unGraft(function (v) {\n    var go = function (v2) {\n        if (v2 instanceof Text) {\n            return new Text(v2.value0);\n        };\n        if (v2 instanceof Elem) {\n            return new Elem(v2.value0, v2.value1, v.value0(v2.value2), map(go)(v2.value3));\n        };\n        if (v2 instanceof Keyed) {\n            return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), map(map1(go))(v2.value3));\n        };\n        if (v2 instanceof Widget) {\n            return new Widget(v.value1(v2.value0));\n        };\n        if (v2 instanceof Grafted) {\n            return new Grafted(bimap(v.value0)(v.value1)(v2.value0));\n        };\n        throw new Error(\"Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): \" + [ v2.constructor.name ]);\n    };\n    return go(v.value2);\n});\nvar renderWidget = function (f) {\n    return function (g) {\n        return function (v) {\n            if (v instanceof Text) {\n                return new Text(v.value0);\n            };\n            if (v instanceof Elem) {\n                return new Elem(v.value0, v.value1, f(v.value2), map(renderWidget(f)(g))(v.value3));\n            };\n            if (v instanceof Keyed) {\n                return new Keyed(v.value0, v.value1, f(v.value2), map(map1(renderWidget(f)(g)))(v.value3));\n            };\n            if (v instanceof Widget) {\n                return g(v.value0);\n            };\n            if (v instanceof Grafted) {\n                return renderWidget(f)(g)(runGraft(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.VDom.Types (line 48, column 20 - line 53, column 48): \" + [ v.constructor.name ]);\n        };\n    };\n};\nexport {\n    Text,\n    Elem,\n    Keyed,\n    Widget,\n    Grafted,\n    renderWidget,\n    Graft,\n    graft,\n    unGraft,\n    runGraft,\n    ElemName,\n    Namespace,\n    functorVDom,\n    bifunctorVDom,\n    functorGraft,\n    bifunctorGraft,\n    newtypeElemName,\n    eqElemName,\n    ordElemName,\n    newtypeNamespace,\n    eqNamespace,\n    ordNamespace\n};\n","\"use strict\";\n\nexport function unsafeGetAny(key, obj) {\n  return obj[key];\n}\n\nexport function unsafeHasAny(key, obj) {\n  return obj.hasOwnProperty(key);\n}\n\nexport function unsafeSetAny(key, val, obj) {\n    obj[key] = val;\n}\n\nexport function unsafeDeleteAny(key, obj) {\n  delete obj[key];\n}\n\nexport function forE(a, f) {\n  var b = [];\n  for (var i = 0; i < a.length; i++) {\n    b.push(f(i, a[i]));\n  }\n  return b;\n}\n\nexport function forEachE(a, f) {\n  for (var i = 0; i < a.length; i++) {\n    f(a[i]);\n  }\n}\n\nexport function forInE(o, f) {\n  var ks = Object.keys(o);\n  for (var i = 0; i < ks.length; i++) {\n    var k = ks[i];\n    f(k, o[k]);\n  }\n}\n\nexport function replicateE(n, f) {\n  for (var i = 0; i < n; i++) {\n    f();\n  }\n}\n\nexport function diffWithIxE(a1, a2, f1, f2, f3) {\n  var a3 = [];\n  var l1 = a1.length;\n  var l2 = a2.length;\n  var i  = 0;\n  while (1) {\n    if (i < l1) {\n      if (i < l2) {\n        a3.push(f1(i, a1[i], a2[i]));\n      } else {\n        f2(i, a1[i]);\n      }\n    } else if (i < l2) {\n      a3.push(f3(i, a2[i]));\n    } else {\n      break;\n    }\n    i++;\n  }\n  return a3;\n}\n\nexport function strMapWithIxE(as, fk, f) {\n  var o = {};\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n    var k = fk(a);\n    o[k] = f(k, i, a);\n  }\n  return o;\n}\n\nexport function diffWithKeyAndIxE(o1, as, fk, f1, f2, f3) {\n  var o2 = {};\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n    var k = fk(a);\n    if (o1.hasOwnProperty(k)) {\n      o2[k] = f1(k, i, o1[k], a);\n    } else {\n      o2[k] = f3(k, i, a);\n    }\n  }\n  for (var k in o1) {\n    if (k in o2) {\n      continue;\n    }\n    f2(k, o1[k]);\n  }\n  return o2;\n}\n\nexport function refEq(a, b) {\n  return a === b;\n}\n\nexport function createTextNode(s, doc) {\n  return doc.createTextNode(s);\n}\n\nexport function setTextContent(s, n) {\n  n.textContent = s;\n}\n\nexport function createElement(ns, name, doc) {\n  if (ns != null) {\n    return doc.createElementNS(ns, name);\n  } else {\n    return doc.createElement(name)\n  }\n}\n\nexport function insertChildIx(i, a, b) {\n  var n = b.childNodes.item(i) || null;\n  if (n !== a) {\n    b.insertBefore(a, n);\n  }\n}\n\nexport function removeChild(a, b) {\n  if (b && a.parentNode === b) {\n    b.removeChild(a);\n  }\n}\n\nexport function parentNode(a) {\n  return a.parentNode;\n}\n\nexport function setAttribute(ns, attr, val, el) {\n  if (ns != null) {\n    el.setAttributeNS(ns, attr, val);\n  } else {\n    el.setAttribute(attr, val);\n  }\n}\n\nexport function removeAttribute(ns, attr, el) {\n  if (ns != null) {\n    el.removeAttributeNS(ns, attr);\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n\nexport function hasAttribute(ns, attr, el) {\n  if (ns != null) {\n    return el.hasAttributeNS(ns, attr);\n  } else {\n    return el.hasAttribute(attr);\n  }\n}\n\nexport function addEventListener(ev, listener, el) {\n  el.addEventListener(ev, listener, false);\n}\n\nexport function removeEventListener(ev, listener, el) {\n  el.removeEventListener(ev, listener, false);\n}\n\nexport var jsUndefined = void 0;\n","const newImpl = function () {\n  return {};\n};\nexport { newImpl as new };\n\nexport function peekImpl(just) {\n  return function (nothing) {\n    return function (k) {\n      return function (m) {\n        return function () {\n          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;\n        };\n      };\n    };\n  };\n}\n\nexport function poke(k) {\n  return function (v) {\n    return function (m) {\n      return function () {\n        m[k] = v;\n        return m;\n      };\n    };\n  };\n}\n\nconst deleteImpl = function (k) {\n  return function (m) {\n    return function () {\n      delete m[k];\n      return m;\n    };\n  };\n};\nexport { deleteImpl as delete };\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nvar peek = /* #__PURE__ */ (function () {\n    return $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nexport {\n    new,\n    poke,\n    delete\n} from \"./foreign.js\";\nexport {\n    peek\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Foreign_Object_ST from \"../Foreign.Object.ST/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar unsafeLookup = $foreign.unsafeGetAny;\nvar unsafeFreeze = Unsafe_Coerce.unsafeCoerce;\nvar pokeMutMap = $foreign.unsafeSetAny;\nvar newMutMap = Foreign_Object_ST[\"new\"];\nvar deleteMutMap = $foreign.unsafeDeleteAny;\nexport {\n    unsafeGetAny,\n    unsafeHasAny,\n    unsafeSetAny,\n    unsafeDeleteAny,\n    forE,\n    forEachE,\n    forInE,\n    replicateE,\n    diffWithIxE,\n    diffWithKeyAndIxE,\n    strMapWithIxE,\n    refEq,\n    createTextNode,\n    setTextContent,\n    createElement,\n    insertChildIx,\n    removeChild,\n    parentNode,\n    setAttribute,\n    removeAttribute,\n    hasAttribute,\n    addEventListener,\n    removeEventListener,\n    jsUndefined\n} from \"./foreign.js\";\nexport {\n    newMutMap,\n    pokeMutMap,\n    deleteMutMap,\n    unsafeFreeze,\n    unsafeLookup\n};\n","var getProp = function (name) {\n  return function (doctype) {\n    return doctype[name];\n  };\n};\n\nexport const _namespaceURI = getProp(\"namespaceURI\");\nexport const _prefix = getProp(\"prefix\");\nexport const localName = getProp(\"localName\");\nexport const tagName = getProp(\"tagName\");\n\nexport function id(node) {\n  return function () {\n    return node.id;\n  };\n}\n\nexport function setId(id) {\n  return function (node) {\n    return function () {\n      node.id = id;\n    };\n  };\n}\n\nexport function className(node) {\n  return function () {\n    return node.className;\n  };\n}\n\nexport function classList(element) {\n  return function () {\n    return element.classList;\n  };\n}\n\nexport function setClassName(className) {\n  return function (node) {\n    return function () {\n      node.className = className;\n    };\n  };\n}\n\nexport function getElementsByTagName(localName) {\n  return function (doc) {\n    return function () {\n      return doc.getElementsByTagName(localName);\n    };\n  };\n}\n\nexport function _getElementsByTagNameNS(ns) {\n  return function (localName) {\n    return function (doc) {\n      return function () {\n        return doc.getElementsByTagNameNS(ns, localName);\n      };\n    };\n  };\n}\n\nexport function getElementsByClassName(classNames) {\n  return function (doc) {\n    return function () {\n      return doc.getElementsByClassName(classNames);\n    };\n  };\n}\n\nexport function setAttribute(name) {\n  return function (value) {\n    return function (element) {\n      return function () {\n        element.setAttribute(name, value);\n      };\n    };\n  };\n}\n\nexport function _getAttribute(name) {\n  return function (element) {\n    return function () {\n      return element.getAttribute(name);\n    };\n  };\n}\n\nexport function hasAttribute(name) {\n  return function (element) {\n    return function () {\n      return element.hasAttribute(name);\n    };\n  };\n}\n\nexport function removeAttribute(name) {\n  return function (element) {\n    return function () {\n      element.removeAttribute(name);\n    };\n  };\n}\n\nexport function matches(selector) {\n  return function(element) {\n    return function () {\n      return element.matches(selector);\n    };\n  };\n}\n\nexport function _closest(selector) {\n  return function(element) {\n    return function () {\n      return element.closest(selector);\n    };\n  };\n}\n\n// - CSSOM ---------------------------------------------------------------------\n\nexport function scrollTop(node) {\n  return function () {\n    return node.scrollTop;\n  };\n}\n\nexport function setScrollTop(scrollTop) {\n  return function (node) {\n    return function () {\n      node.scrollTop = scrollTop;\n    };\n  };\n}\n\nexport function scrollLeft(node) {\n  return function () {\n    return node.scrollLeft;\n  };\n}\n\nexport function setScrollLeft(scrollLeft) {\n  return function (node) {\n    return function () {\n      node.scrollLeft = scrollLeft;\n    };\n  };\n}\n\nexport function scrollWidth(el) {\n  return function () {\n    return el.scrollWidth;\n  };\n}\n\nexport function scrollHeight(el) {\n  return function () {\n    return el.scrollHeight;\n  };\n}\n\nexport function clientTop(el) {\n  return function () {\n    return el.clientTop;\n  };\n}\n\nexport function clientLeft(el) {\n  return function () {\n    return el.clientLeft;\n  };\n}\n\nexport function clientWidth(el) {\n  return function () {\n    return el.clientWidth;\n  };\n}\n\nexport function clientHeight(el) {\n  return function () {\n    return el.clientHeight;\n  };\n}\n\nexport function getBoundingClientRect(el) {\n  return function () {\n    var rect = el.getBoundingClientRect();\n    return {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height,\n      x: rect.x,\n      y: rect.y\n    };\n  };\n}\n\nexport function _attachShadow(props) {\n  return function (el) {\n    return function() {\n      return el.attachShadow(props);\n    };\n  };\n}\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar Open = /* #__PURE__ */ (function () {\n    function Open() {\n\n    };\n    Open.value = new Open();\n    return Open;\n})();\nvar Closed = /* #__PURE__ */ (function () {\n    function Closed() {\n\n    };\n    Closed.value = new Closed();\n    return Closed;\n})();\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar showShadowRootMode = {\n    show: function (v) {\n        if (v instanceof Open) {\n            return \"open\";\n        };\n        if (v instanceof Closed) {\n            return \"closed\";\n        };\n        throw new Error(\"Failed pattern match at Web.DOM.ShadowRoot (line 22, column 1 - line 24, column 25): \" + [ v.constructor.name ]);\n    }\n};\nvar mode = /* #__PURE__ */ (function () {\n    var modeFromString = function (v) {\n        if (v === \"open\") {\n            return new Data_Maybe.Just(Open.value);\n        };\n        if (v === \"closed\") {\n            return new Data_Maybe.Just(Closed.value);\n        };\n        return Data_Maybe.Nothing.value;\n    };\n    return function ($5) {\n        return modeFromString($foreign[\"_mode\"]($5));\n    };\n})();\nexport {\n    host\n} from \"./foreign.js\";\nexport {\n    Open,\n    Closed,\n    toNode,\n    mode,\n    showShadowRootMode\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_DOM_Internal_Types from \"../Web.DOM.Internal.Types/index.js\";\nimport * as Web_DOM_ParentNode from \"../Web.DOM.ParentNode/index.js\";\nimport * as Web_DOM_ShadowRoot from \"../Web.DOM.ShadowRoot/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar show = /* #__PURE__ */ Data_Show.show(Web_DOM_ShadowRoot.showShadowRootMode);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toChildNode = Unsafe_Coerce.unsafeCoerce;\nvar prefix = function ($3) {\n    return Data_Nullable.toMaybe($foreign[\"_prefix\"]($3));\n};\nvar namespaceURI = function ($4) {\n    return Data_Nullable.toMaybe($foreign[\"_namespaceURI\"]($4));\n};\nvar initToProps = function (init) {\n    return {\n        mode: show(init.mode),\n        delegatesFocus: init.delegatesFocus\n    };\n};\nvar getElementsByTagNameNS = function ($5) {\n    return $foreign[\"_getElementsByTagNameNS\"](Data_Nullable.toNullable($5));\n};\nvar getAttribute = function (attr) {\n    var $6 = map(Data_Nullable.toMaybe);\n    var $7 = $foreign[\"_getAttribute\"](attr);\n    return function ($8) {\n        return $6($7($8));\n    };\n};\nvar fromParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar fromNonDocumentTypeChildNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar fromNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar fromChildNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar closest = function (qs) {\n    var $9 = map(Data_Nullable.toMaybe);\n    var $10 = $foreign[\"_closest\"](qs);\n    return function ($11) {\n        return $9($10($11));\n    };\n};\nvar attachShadow = function ($12) {\n    return $foreign[\"_attachShadow\"](initToProps($12));\n};\nexport {\n    localName,\n    tagName,\n    id,\n    setId,\n    className,\n    classList,\n    setClassName,\n    getElementsByTagName,\n    getElementsByClassName,\n    setAttribute,\n    hasAttribute,\n    removeAttribute,\n    matches,\n    scrollTop,\n    setScrollTop,\n    scrollLeft,\n    setScrollLeft,\n    scrollWidth,\n    scrollHeight,\n    clientTop,\n    clientLeft,\n    clientWidth,\n    clientHeight,\n    getBoundingClientRect\n} from \"./foreign.js\";\nexport {\n    fromNode,\n    fromChildNode,\n    fromNonDocumentTypeChildNode,\n    fromParentNode,\n    fromEventTarget,\n    toNode,\n    toChildNode,\n    toNonDocumentTypeChildNode,\n    toParentNode,\n    toEventTarget,\n    namespaceURI,\n    prefix,\n    getElementsByTagNameNS,\n    getAttribute,\n    closest,\n    attachShadow\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Halogen_VDom_Machine from \"../Halogen.VDom.Machine/index.js\";\nimport * as Halogen_VDom_Types from \"../Halogen.VDom.Types/index.js\";\nimport * as Halogen_VDom_Util from \"../Halogen.VDom.Util/index.js\";\nimport * as Web_DOM_Element from \"../Web.DOM.Element/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar VDomSpec = function (x) {\n    return x;\n};\nvar haltWidget = function (v) {\n    return Halogen_VDom_Machine.halt(v.widget);\n};\nvar $lazy_patchWidget = /* #__PURE__ */ $runtime_lazy(\"patchWidget\", \"Halogen.VDom.DOM\", function () {\n    return function (state, vdom) {\n        if (vdom instanceof Halogen_VDom_Types.Grafted) {\n            return $lazy_patchWidget(291)(state, Halogen_VDom_Types.runGraft(vdom.value0));\n        };\n        if (vdom instanceof Halogen_VDom_Types.Widget) {\n            var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);\n            var res$prime = Halogen_VDom_Machine.unStep(function (v) {\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {\n                    build: state.build,\n                    widget: res\n                }, $lazy_patchWidget(296), haltWidget));\n            })(res);\n            return res$prime;\n        };\n        haltWidget(state);\n        return state.build(vdom);\n    };\n});\nvar patchWidget = /* #__PURE__ */ $lazy_patchWidget(286);\nvar haltText = function (v) {\n    var parent = Halogen_VDom_Util.parentNode(v.node);\n    return Halogen_VDom_Util.removeChild(v.node, parent);\n};\nvar $lazy_patchText = /* #__PURE__ */ $runtime_lazy(\"patchText\", \"Halogen.VDom.DOM\", function () {\n    return function (state, vdom) {\n        if (vdom instanceof Halogen_VDom_Types.Grafted) {\n            return $lazy_patchText(82)(state, Halogen_VDom_Types.runGraft(vdom.value0));\n        };\n        if (vdom instanceof Halogen_VDom_Types.Text) {\n            if (state.value === vdom.value0) {\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, $lazy_patchText(85), haltText));\n            };\n            if (Data_Boolean.otherwise) {\n                var nextState = {\n                    build: state.build,\n                    node: state.node,\n                    value: vdom.value0\n                };\n                Halogen_VDom_Util.setTextContent(vdom.value0, state.node);\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchText(89), haltText));\n            };\n        };\n        haltText(state);\n        return state.build(vdom);\n    };\n});\nvar patchText = /* #__PURE__ */ $lazy_patchText(77);\nvar haltKeyed = function (v) {\n    var parent = Halogen_VDom_Util.parentNode(v.node);\n    Halogen_VDom_Util.removeChild(v.node, parent);\n    Halogen_VDom_Util.forInE(v.children, function (v1, s) {\n        return Halogen_VDom_Machine.halt(s);\n    });\n    return Halogen_VDom_Machine.halt(v.attrs);\n};\nvar haltElem = function (v) {\n    var parent = Halogen_VDom_Util.parentNode(v.node);\n    Halogen_VDom_Util.removeChild(v.node, parent);\n    Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);\n    return Halogen_VDom_Machine.halt(v.attrs);\n};\nvar eqElemSpec = function (ns1, v, ns2, v1) {\n    var $63 = v === v1;\n    if ($63) {\n        if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {\n            return true;\n        };\n        if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {\n            return true;\n        };\n        return false;\n    };\n    return false;\n};\nvar $lazy_patchElem = /* #__PURE__ */ $runtime_lazy(\"patchElem\", \"Halogen.VDom.DOM\", function () {\n    return function (state, vdom) {\n        if (vdom instanceof Halogen_VDom_Types.Grafted) {\n            return $lazy_patchElem(135)(state, Halogen_VDom_Types.runGraft(vdom.value0));\n        };\n        if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {\n            var v = Data_Array.length(vdom.value3);\n            var v1 = Data_Array.length(state.children);\n            if (v1 === 0 && v === 0) {\n                var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n                var nextState = {\n                    build: state.build,\n                    node: state.node,\n                    attrs: attrs2,\n                    ns: vdom.value0,\n                    name: vdom.value1,\n                    children: state.children\n                };\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchElem(149), haltElem));\n            };\n            var onThis = function (v2, s) {\n                return Halogen_VDom_Machine.halt(s);\n            };\n            var onThese = function (ix, s, v2) {\n                var res = Halogen_VDom_Machine.step(s, v2);\n                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n                return res;\n            };\n            var onThat = function (ix, v2) {\n                var res = state.build(v2);\n                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n                return res;\n            };\n            var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);\n            var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n            var nextState = {\n                build: state.build,\n                node: state.node,\n                attrs: attrs2,\n                ns: vdom.value0,\n                name: vdom.value1,\n                children: children2\n            };\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchElem(172), haltElem));\n        };\n        haltElem(state);\n        return state.build(vdom);\n    };\n});\nvar patchElem = /* #__PURE__ */ $lazy_patchElem(130);\nvar $lazy_patchKeyed = /* #__PURE__ */ $runtime_lazy(\"patchKeyed\", \"Halogen.VDom.DOM\", function () {\n    return function (state, vdom) {\n        if (vdom instanceof Halogen_VDom_Types.Grafted) {\n            return $lazy_patchKeyed(222)(state, Halogen_VDom_Types.runGraft(vdom.value0));\n        };\n        if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {\n            var v = Data_Array.length(vdom.value3);\n            if (state.length === 0 && v === 0) {\n                var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n                var nextState = {\n                    build: state.build,\n                    node: state.node,\n                    attrs: attrs2,\n                    ns: vdom.value0,\n                    name: vdom.value1,\n                    children: state.children,\n                    length: 0\n                };\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchKeyed(237), haltKeyed));\n            };\n            var onThis = function (v2, s) {\n                return Halogen_VDom_Machine.halt(s);\n            };\n            var onThese = function (v2, ix$prime, s, v3) {\n                var res = Halogen_VDom_Machine.step(s, v3.value1);\n                Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);\n                return res;\n            };\n            var onThat = function (v2, ix, v3) {\n                var res = state.build(v3.value1);\n                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n                return res;\n            };\n            var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);\n            var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n            var nextState = {\n                build: state.build,\n                node: state.node,\n                attrs: attrs2,\n                ns: vdom.value0,\n                name: vdom.value1,\n                children: children2,\n                length: v\n            };\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchKeyed(261), haltKeyed));\n        };\n        haltKeyed(state);\n        return state.build(vdom);\n    };\n});\nvar patchKeyed = /* #__PURE__ */ $lazy_patchKeyed(217);\nvar buildWidget = function (v, build, w) {\n    var res = v.buildWidget(v)(w);\n    var res$prime = Halogen_VDom_Machine.unStep(function (v1) {\n        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {\n            build: build,\n            widget: res\n        }, patchWidget, haltWidget));\n    })(res);\n    return res$prime;\n};\nvar buildText = function (v, build, s) {\n    var node = Halogen_VDom_Util.createTextNode(s, v.document);\n    var state = {\n        build: build,\n        node: node,\n        value: s\n    };\n    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));\n};\nvar buildKeyed = function (v, build, ns1, name1, as1, ch1) {\n    var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);\n    var node = Web_DOM_Element.toNode(el);\n    var onChild = function (v1, ix, v2) {\n        var res = build(v2.value1);\n        Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);\n        return res;\n    };\n    var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);\n    var attrs = v.buildAttributes(el)(as1);\n    var state = {\n        build: build,\n        node: node,\n        attrs: attrs,\n        ns: ns1,\n        name: name1,\n        children: children,\n        length: Data_Array.length(ch1)\n    };\n    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));\n};\nvar buildElem = function (v, build, ns1, name1, as1, ch1) {\n    var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);\n    var node = Web_DOM_Element.toNode(el);\n    var onChild = function (ix, child) {\n        var res = build(child);\n        Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);\n        return res;\n    };\n    var children = Halogen_VDom_Util.forE(ch1, onChild);\n    var attrs = v.buildAttributes(el)(as1);\n    var state = {\n        build: build,\n        node: node,\n        attrs: attrs,\n        ns: ns1,\n        name: name1,\n        children: children\n    };\n    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));\n};\nvar buildVDom = function (spec) {\n    var $lazy_build = $runtime_lazy(\"build\", \"Halogen.VDom.DOM\", function () {\n        return function (v) {\n            if (v instanceof Halogen_VDom_Types.Text) {\n                return buildText(spec, $lazy_build(59), v.value0);\n            };\n            if (v instanceof Halogen_VDom_Types.Elem) {\n                return buildElem(spec, $lazy_build(60), v.value0, v.value1, v.value2, v.value3);\n            };\n            if (v instanceof Halogen_VDom_Types.Keyed) {\n                return buildKeyed(spec, $lazy_build(61), v.value0, v.value1, v.value2, v.value3);\n            };\n            if (v instanceof Halogen_VDom_Types.Widget) {\n                return buildWidget(spec, $lazy_build(62), v.value0);\n            };\n            if (v instanceof Halogen_VDom_Types.Grafted) {\n                return $lazy_build(63)(Halogen_VDom_Types.runGraft(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): \" + [ v.constructor.name ]);\n        };\n    });\n    var build = $lazy_build(58);\n    return build;\n};\nexport {\n    VDomSpec,\n    buildVDom,\n    buildText,\n    buildElem,\n    buildKeyed,\n    buildWidget\n};\n","export function typeOf(value) {\n  return typeof value;\n}\n\nexport function tagOf(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\n\nexport function isNull(value) {\n  return value === null;\n}\n\nexport function isUndefined(value) {\n  return value === undefined;\n}\n\nexport const isArray = Array.isArray || function (value) {\n  return Object.prototype.toString.call(value) === \"[object Array]\";\n};\n","/* globals exports */\nexport const nan = NaN;\nconst isNaNImpl = isNaN;\nexport { isNaNImpl as isNaN };\nexport const infinity = Infinity;\nconst isFiniteImpl = isFinite;\nexport { isFiniteImpl as isFinite };\n\nexport function fromStringImpl(str, isFinite, just, nothing) {\n  var num = parseFloat(str);\n  if (isFinite(num)) {\n    return just(num);\n  } else {\n    return nothing;\n  }\n}\n\nexport const abs = Math.abs;\n\nexport const acos = Math.acos;\n\nexport const asin = Math.asin;\n\nexport const atan = Math.atan;\n\nexport const atan2 = function (y) {\n  return function (x) {\n    return Math.atan2(y, x);\n  };\n};\n\nexport const ceil = Math.ceil;\n\nexport const cos = Math.cos;\n\nexport const exp = Math.exp;\n\nexport const floor = Math.floor;\n\nexport const log = Math.log;\n\nexport const max = function (n1) {\n  return function (n2) {\n    return Math.max(n1, n2);\n  };\n};\n\nexport const min = function (n1) {\n  return function (n2) {\n    return Math.min(n1, n2);\n  };\n};\n\nexport const pow = function (n) {\n  return function (p) {\n    return Math.pow(n, p);\n  };\n};\n\nexport const remainder = function (n) {\n  return function (m) {\n    return n % m;\n  };\n};\n\nexport const round = Math.round;\n\nexport const sign = Math.sign ? Math.sign : function(x) {\n  return x === 0 || x !== x ? x : (x < 0 ? -1 : 1);\n};\n\nexport const sin = Math.sin;\n\nexport const sqrt = Math.sqrt;\n\nexport const tan = Math.tan;\n\nexport const trunc = Math.trunc ? Math.trunc : function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n}\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nvar tau = 6.283185307179586;\nvar sqrt2 = 1.4142135623730951;\nvar sqrt1_2 = 0.7071067811865476;\nvar pi = 3.141592653589793;\nvar log2e = 1.4426950408889634;\nvar log10e = 0.4342944819032518;\nvar ln2 = 0.6931471805599453;\nvar ln10 = 2.302585092994046;\nvar fromString = function (str) {\n    return $foreign.fromStringImpl(str, $foreign[\"isFinite\"], Data_Maybe.Just.create, Data_Maybe.Nothing.value);\n};\nvar e = 2.718281828459045;\nexport {\n    nan,\n    isNaN,\n    infinity,\n    isFinite,\n    abs,\n    acos,\n    asin,\n    atan,\n    atan2,\n    ceil,\n    cos,\n    exp,\n    floor,\n    log,\n    max,\n    min,\n    pow,\n    remainder,\n    round,\n    sign,\n    sin,\n    sqrt,\n    tan,\n    trunc\n} from \"./foreign.js\";\nexport {\n    fromString,\n    e,\n    ln2,\n    ln10,\n    log10e,\n    log2e,\n    pi,\n    sqrt1_2,\n    sqrt2,\n    tau\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semigroup_Foldable from \"../Data.Semigroup.Foldable/index.js\";\nimport * as Data_Semigroup_Traversable from \"../Data.Semigroup.Traversable/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Partial_Unsafe from \"../Partial.Unsafe/index.js\";\nvar sequence1 = /* #__PURE__ */ Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorNonEmptyList);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Data_List_Types.bindNonEmptyList);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_List_Types.semigroupList);\nvar zipWith = function (f) {\n    return function (v) {\n        return function (v1) {\n            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));\n        };\n    };\n};\nvar zipWithA = function (dictApplicative) {\n    var sequence11 = sequence1(dictApplicative.Apply0());\n    return function (f) {\n        return function (xs) {\n            return function (ys) {\n                return sequence11(zipWith(f)(xs)(ys));\n            };\n        };\n    };\n};\nvar zip = /* #__PURE__ */ (function () {\n    return zipWith(Data_Tuple.Tuple.create);\n})();\nvar wrappedOperation2 = function (name) {\n    return function (f) {\n        return function (v) {\n            return function (v1) {\n                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));\n                if (v2 instanceof Data_List_Types.Cons) {\n                    return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);\n                };\n                if (v2 instanceof Data_List_Types.Nil) {\n                    return Partial_Unsafe.unsafeCrashWith(\"Impossible: empty list in NonEmptyList \" + name);\n                };\n                throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 105, column 3 - line 107, column 81): \" + [ v2.constructor.name ]);\n            };\n        };\n    };\n};\nvar wrappedOperation = function (name) {\n    return function (f) {\n        return function (v) {\n            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));\n            if (v1 instanceof Data_List_Types.Cons) {\n                return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);\n            };\n            if (v1 instanceof Data_List_Types.Nil) {\n                return Partial_Unsafe.unsafeCrashWith(\"Impossible: empty list in NonEmptyList \" + name);\n            };\n            throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 92, column 3 - line 94, column 81): \" + [ v1.constructor.name ]);\n        };\n    };\n};\nvar updateAt = function (i) {\n    return function (a) {\n        return function (v) {\n            if (i === 0) {\n                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));\n            };\n            if (Data_Boolean.otherwise) {\n                return map(function ($193) {\n                    return Data_List_Types.NonEmptyList((function (v1) {\n                        return new Data_NonEmpty.NonEmpty(v.value0, v1);\n                    })($193));\n                })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 198, column 1 - line 198, column 75): \" + [ i.constructor.name, a.constructor.name, v.constructor.name ]);\n        };\n    };\n};\nvar unzip = function (ts) {\n    return new Data_Tuple.Tuple(map1(Data_Tuple.fst)(ts), map1(Data_Tuple.snd)(ts));\n};\nvar unsnoc = function (v) {\n    var v1 = Data_List.unsnoc(v.value1);\n    if (v1 instanceof Data_Maybe.Nothing) {\n        return {\n            init: Data_List_Types.Nil.value,\n            last: v.value0\n        };\n    };\n    if (v1 instanceof Data_Maybe.Just) {\n        return {\n            init: new Data_List_Types.Cons(v.value0, v1.value0.init),\n            last: v1.value0.last\n        };\n    };\n    throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 160, column 35 - line 162, column 50): \" + [ v1.constructor.name ]);\n};\nvar unionBy = /* #__PURE__ */ (function () {\n    var $194 = wrappedOperation2(\"unionBy\");\n    return function ($195) {\n        return $194(Data_List.unionBy($195));\n    };\n})();\nvar union = function (dictEq) {\n    return wrappedOperation2(\"union\")(Data_List.union(dictEq));\n};\nvar uncons = function (v) {\n    return {\n        head: v.value0,\n        tail: v.value1\n    };\n};\nvar toList = function (v) {\n    return new Data_List_Types.Cons(v.value0, v.value1);\n};\nvar toUnfoldable = function (dictUnfoldable) {\n    var $196 = Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {\n        return map(function (rec) {\n            return new Data_Tuple.Tuple(rec.head, rec.tail);\n        })(Data_List.uncons(xs));\n    });\n    return function ($197) {\n        return $196(toList($197));\n    };\n};\nvar tail = function (v) {\n    return v.value1;\n};\nvar sortBy = /* #__PURE__ */ (function () {\n    var $198 = wrappedOperation(\"sortBy\");\n    return function ($199) {\n        return $198(Data_List.sortBy($199));\n    };\n})();\nvar sort = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (xs) {\n        return sortBy(compare)(xs);\n    };\n};\nvar snoc = function (v) {\n    return function (y) {\n        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));\n    };\n};\nvar singleton = /* #__PURE__ */ (function () {\n    var $200 = Data_NonEmpty.singleton(Data_List_Types.plusList);\n    return function ($201) {\n        return Data_List_Types.NonEmptyList($200($201));\n    };\n})();\nvar snoc$prime = function (v) {\n    return function (v1) {\n        if (v instanceof Data_List_Types.Cons) {\n            return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(v1));\n        };\n        if (v instanceof Data_List_Types.Nil) {\n            return singleton(v1);\n        };\n        throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 140, column 1 - line 140, column 51): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar reverse = /* #__PURE__ */ wrappedOperation(\"reverse\")(Data_List.reverse);\nvar nubEq = function (dictEq) {\n    return wrappedOperation(\"nubEq\")(Data_List.nubEq(dictEq));\n};\nvar nubByEq = /* #__PURE__ */ (function () {\n    var $202 = wrappedOperation(\"nubByEq\");\n    return function ($203) {\n        return $202(Data_List.nubByEq($203));\n    };\n})();\nvar nubBy = /* #__PURE__ */ (function () {\n    var $204 = wrappedOperation(\"nubBy\");\n    return function ($205) {\n        return $204(Data_List.nubBy($205));\n    };\n})();\nvar nub = function (dictOrd) {\n    return wrappedOperation(\"nub\")(Data_List.nub(dictOrd));\n};\nvar modifyAt = function (i) {\n    return function (f) {\n        return function (v) {\n            if (i === 0) {\n                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));\n            };\n            if (Data_Boolean.otherwise) {\n                return map(function ($206) {\n                    return Data_List_Types.NonEmptyList((function (v1) {\n                        return new Data_NonEmpty.NonEmpty(v.value0, v1);\n                    })($206));\n                })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 203, column 1 - line 203, column 82): \" + [ i.constructor.name, f.constructor.name, v.constructor.name ]);\n        };\n    };\n};\nvar lift = function (f) {\n    return function (v) {\n        return f(new Data_List_Types.Cons(v.value0, v.value1));\n    };\n};\nvar mapMaybe = function ($207) {\n    return lift(Data_List.mapMaybe($207));\n};\nvar partition = function ($208) {\n    return lift(Data_List.partition($208));\n};\nvar span = function ($209) {\n    return lift(Data_List.span($209));\n};\nvar take = function ($210) {\n    return lift(Data_List.take($210));\n};\nvar takeWhile = function ($211) {\n    return lift(Data_List.takeWhile($211));\n};\nvar length = function (v) {\n    return 1 + Data_List.length(v.value1) | 0;\n};\nvar last = function (v) {\n    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));\n};\nvar intersectBy = /* #__PURE__ */ (function () {\n    var $212 = wrappedOperation2(\"intersectBy\");\n    return function ($213) {\n        return $212(Data_List.intersectBy($213));\n    };\n})();\nvar intersect = function (dictEq) {\n    return wrappedOperation2(\"intersect\")(Data_List.intersect(dictEq));\n};\nvar insertAt = function (i) {\n    return function (a) {\n        return function (v) {\n            if (i === 0) {\n                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));\n            };\n            if (Data_Boolean.otherwise) {\n                return map(function ($214) {\n                    return Data_List_Types.NonEmptyList((function (v1) {\n                        return new Data_NonEmpty.NonEmpty(v.value0, v1);\n                    })($214));\n                })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 193, column 1 - line 193, column 75): \" + [ i.constructor.name, a.constructor.name, v.constructor.name ]);\n        };\n    };\n};\nvar init = function (v) {\n    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {\n        return new Data_List_Types.Cons(v.value0, v1);\n    })(Data_List.init(v.value1));\n};\nvar index = function (v) {\n    return function (i) {\n        if (i === 0) {\n            return new Data_Maybe.Just(v.value0);\n        };\n        if (Data_Boolean.otherwise) {\n            return Data_List.index(v.value1)(i - 1 | 0);\n        };\n        throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 167, column 1 - line 167, column 52): \" + [ v.constructor.name, i.constructor.name ]);\n    };\n};\nvar head = function (v) {\n    return v.value0;\n};\nvar groupBy = /* #__PURE__ */ (function () {\n    var $215 = wrappedOperation(\"groupBy\");\n    return function ($216) {\n        return $215(Data_List.groupBy($216));\n    };\n})();\nvar groupAllBy = /* #__PURE__ */ (function () {\n    var $217 = wrappedOperation(\"groupAllBy\");\n    return function ($218) {\n        return $217(Data_List.groupAllBy($218));\n    };\n})();\nvar groupAll = function (dictOrd) {\n    return wrappedOperation(\"groupAll\")(Data_List.groupAll(dictOrd));\n};\nvar group = function (dictEq) {\n    return wrappedOperation(\"group\")(Data_List.group(dictEq));\n};\nvar fromList = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));\n    };\n    throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 121, column 1 - line 121, column 57): \" + [ v.constructor.name ]);\n};\nvar fromFoldable = function (dictFoldable) {\n    var $219 = Data_List.fromFoldable(dictFoldable);\n    return function ($220) {\n        return fromList($219($220));\n    };\n};\nvar foldM = function (dictMonad) {\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    var foldM1 = Data_List.foldM(dictMonad);\n    return function (f) {\n        return function (b) {\n            return function (v) {\n                return bind1(f(b)(v.value0))(function (b$prime) {\n                    return foldM1(f)(b$prime)(v.value1);\n                });\n            };\n        };\n    };\n};\nvar findLastIndex = function (f) {\n    return function (v) {\n        var v1 = Data_List.findLastIndex(f)(v.value1);\n        if (v1 instanceof Data_Maybe.Just) {\n            return new Data_Maybe.Just(v1.value0 + 1 | 0);\n        };\n        if (v1 instanceof Data_Maybe.Nothing) {\n            if (f(v.value0)) {\n                return new Data_Maybe.Just(0);\n            };\n            if (Data_Boolean.otherwise) {\n                return Data_Maybe.Nothing.value;\n            };\n        };\n        throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 187, column 3 - line 191, column 29): \" + [ v1.constructor.name ]);\n    };\n};\nvar findIndex = function (f) {\n    return function (v) {\n        if (f(v.value0)) {\n            return new Data_Maybe.Just(0);\n        };\n        if (Data_Boolean.otherwise) {\n            return map(function (v1) {\n                return v1 + 1 | 0;\n            })(Data_List.findIndex(f)(v.value1));\n        };\n        throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 180, column 1 - line 180, column 69): \" + [ f.constructor.name, v.constructor.name ]);\n    };\n};\nvar filterM = function (dictMonad) {\n    var $221 = Data_List.filterM(dictMonad);\n    return function ($222) {\n        return lift($221($222));\n    };\n};\nvar filter = function ($223) {\n    return lift(Data_List.filter($223));\n};\nvar elemLastIndex = function (dictEq) {\n    var eq1 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findLastIndex(function (v) {\n            return eq1(v)(x);\n        });\n    };\n};\nvar elemIndex = function (dictEq) {\n    var eq1 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findIndex(function (v) {\n            return eq1(v)(x);\n        });\n    };\n};\nvar dropWhile = function ($224) {\n    return lift(Data_List.dropWhile($224));\n};\nvar drop = function ($225) {\n    return lift(Data_List.drop($225));\n};\nvar cons$prime = function (x) {\n    return function (xs) {\n        return new Data_NonEmpty.NonEmpty(x, xs);\n    };\n};\nvar cons = function (y) {\n    return function (v) {\n        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));\n    };\n};\nvar concatMap = /* #__PURE__ */ Data_Function.flip(bind);\nvar concat = function (v) {\n    return bind(v)(identity);\n};\nvar catMaybes = /* #__PURE__ */ lift(Data_List.catMaybes);\nvar appendFoldable = function (dictFoldable) {\n    var fromFoldable1 = Data_List.fromFoldable(dictFoldable);\n    return function (v) {\n        return function (ys) {\n            return new Data_NonEmpty.NonEmpty(v.value0, append1(v.value1)(fromFoldable1(ys)));\n        };\n    };\n};\nexport {\n    toUnfoldable,\n    fromFoldable,\n    fromList,\n    toList,\n    singleton,\n    length,\n    cons,\n    cons$prime,\n    snoc,\n    snoc$prime,\n    head,\n    last,\n    tail,\n    init,\n    uncons,\n    unsnoc,\n    index,\n    elemIndex,\n    elemLastIndex,\n    findIndex,\n    findLastIndex,\n    insertAt,\n    updateAt,\n    modifyAt,\n    reverse,\n    concat,\n    concatMap,\n    filter,\n    filterM,\n    mapMaybe,\n    catMaybes,\n    appendFoldable,\n    sort,\n    sortBy,\n    take,\n    takeWhile,\n    drop,\n    dropWhile,\n    span,\n    group,\n    groupAll,\n    groupBy,\n    groupAllBy,\n    partition,\n    nub,\n    nubBy,\n    nubEq,\n    nubByEq,\n    union,\n    unionBy,\n    intersect,\n    intersectBy,\n    zipWith,\n    zipWithA,\n    zip,\n    unzip,\n    foldM\n};\nexport {\n    all,\n    any,\n    elem,\n    find,\n    findMap,\n    fold,\n    foldMap,\n    foldl,\n    foldr,\n    intercalate,\n    notElem\n} from \"../Data.Foldable/index.js\";\nexport {\n    NonEmptyList\n} from \"../Data.List.Types/index.js\";\nexport {\n    fold1,\n    foldMap1,\n    for1_,\n    sequence1_,\n    traverse1_\n} from \"../Data.Semigroup.Foldable/index.js\";\nexport {\n    sequence1,\n    traverse1,\n    traverse1Default\n} from \"../Data.Semigroup.Traversable/index.js\";\nexport {\n    scanl,\n    scanr\n} from \"../Data.Traversable/index.js\";\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_String_Unsafe from \"../Data.String.Unsafe/index.js\";\nvar uncons = function (v) {\n    if (v === \"\") {\n        return Data_Maybe.Nothing.value;\n    };\n    return new Data_Maybe.Just({\n        head: Data_String_Unsafe.charAt(0)(v),\n        tail: $foreign.drop(1)(v)\n    });\n};\nvar toChar = /* #__PURE__ */ (function () {\n    return $foreign[\"_toChar\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar takeWhile = function (p) {\n    return function (s) {\n        return $foreign.take($foreign.countPrefix(p)(s))(s);\n    };\n};\nvar takeRight = function (i) {\n    return function (s) {\n        return $foreign.drop($foreign.length(s) - i | 0)(s);\n    };\n};\nvar stripSuffix = function (v) {\n    return function (str) {\n        var v1 = $foreign.splitAt($foreign.length(str) - $foreign.length(v) | 0)(str);\n        var $14 = v1.after === v;\n        if ($14) {\n            return new Data_Maybe.Just(v1.before);\n        };\n        return Data_Maybe.Nothing.value;\n    };\n};\nvar stripPrefix = function (v) {\n    return function (str) {\n        var v1 = $foreign.splitAt($foreign.length(v))(str);\n        var $20 = v1.before === v;\n        if ($20) {\n            return new Data_Maybe.Just(v1.after);\n        };\n        return Data_Maybe.Nothing.value;\n    };\n};\nvar lastIndexOf$prime = /* #__PURE__ */ (function () {\n    return $foreign[\"_lastIndexOfStartingAt\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar lastIndexOf = /* #__PURE__ */ (function () {\n    return $foreign[\"_lastIndexOf\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar indexOf$prime = /* #__PURE__ */ (function () {\n    return $foreign[\"_indexOfStartingAt\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar indexOf = /* #__PURE__ */ (function () {\n    return $foreign[\"_indexOf\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar dropWhile = function (p) {\n    return function (s) {\n        return $foreign.drop($foreign.countPrefix(p)(s))(s);\n    };\n};\nvar dropRight = function (i) {\n    return function (s) {\n        return $foreign.take($foreign.length(s) - i | 0)(s);\n    };\n};\nvar contains = function (pat) {\n    var $23 = indexOf(pat);\n    return function ($24) {\n        return Data_Maybe.isJust($23($24));\n    };\n};\nvar charAt = /* #__PURE__ */ (function () {\n    return $foreign[\"_charAt\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nexport {\n    singleton,\n    fromCharArray,\n    toCharArray,\n    length,\n    countPrefix,\n    take,\n    drop,\n    slice,\n    splitAt\n} from \"./foreign.js\";\nexport {\n    stripPrefix,\n    stripSuffix,\n    contains,\n    charAt,\n    toChar,\n    uncons,\n    indexOf,\n    indexOf$prime,\n    lastIndexOf,\n    lastIndexOf$prime,\n    takeRight,\n    takeWhile,\n    dropRight,\n    dropWhile\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Int from \"../Data.Int/index.js\";\nimport * as Data_List_NonEmpty from \"../Data.List.NonEmpty/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_String_CodeUnits from \"../Data.String.CodeUnits/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showString);\nvar show1 = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);\nvar compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordString);\nvar compare1 = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordInt);\nvar ForeignError = /* #__PURE__ */ (function () {\n    function ForeignError(value0) {\n        this.value0 = value0;\n    };\n    ForeignError.create = function (value0) {\n        return new ForeignError(value0);\n    };\n    return ForeignError;\n})();\nvar TypeMismatch = /* #__PURE__ */ (function () {\n    function TypeMismatch(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    TypeMismatch.create = function (value0) {\n        return function (value1) {\n            return new TypeMismatch(value0, value1);\n        };\n    };\n    return TypeMismatch;\n})();\nvar ErrorAtIndex = /* #__PURE__ */ (function () {\n    function ErrorAtIndex(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    ErrorAtIndex.create = function (value0) {\n        return function (value1) {\n            return new ErrorAtIndex(value0, value1);\n        };\n    };\n    return ErrorAtIndex;\n})();\nvar ErrorAtProperty = /* #__PURE__ */ (function () {\n    function ErrorAtProperty(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    ErrorAtProperty.create = function (value0) {\n        return function (value1) {\n            return new ErrorAtProperty(value0, value1);\n        };\n    };\n    return ErrorAtProperty;\n})();\nvar unsafeToForeign = Unsafe_Coerce.unsafeCoerce;\nvar unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;\nvar showForeignError = {\n    show: function (v) {\n        if (v instanceof ForeignError) {\n            return \"(ForeignError \" + (show(v.value0) + \")\");\n        };\n        if (v instanceof ErrorAtIndex) {\n            return \"(ErrorAtIndex \" + (show1(v.value0) + (\" \" + (Data_Show.show(showForeignError)(v.value1) + \")\")));\n        };\n        if (v instanceof ErrorAtProperty) {\n            return \"(ErrorAtProperty \" + (show(v.value0) + (\" \" + (Data_Show.show(showForeignError)(v.value1) + \")\")));\n        };\n        if (v instanceof TypeMismatch) {\n            return \"(TypeMismatch \" + (show(v.value0) + (\" \" + (show(v.value1) + \")\")));\n        };\n        throw new Error(\"Failed pattern match at Foreign (line 69, column 1 - line 73, column 89): \" + [ v.constructor.name ]);\n    }\n};\nvar renderForeignError = function (v) {\n    if (v instanceof ForeignError) {\n        return v.value0;\n    };\n    if (v instanceof ErrorAtIndex) {\n        return \"Error at array index \" + (show1(v.value0) + (\": \" + renderForeignError(v.value1)));\n    };\n    if (v instanceof ErrorAtProperty) {\n        return \"Error at property \" + (show(v.value0) + (\": \" + renderForeignError(v.value1)));\n    };\n    if (v instanceof TypeMismatch) {\n        return \"Type mismatch: expected \" + (v.value0 + (\", found \" + v.value1));\n    };\n    throw new Error(\"Failed pattern match at Foreign (line 78, column 1 - line 78, column 45): \" + [ v.constructor.name ]);\n};\nvar readUndefined = function (dictMonad) {\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad));\n    return function (value) {\n        if ($foreign.isUndefined(value)) {\n            return pure1(Data_Maybe.Nothing.value);\n        };\n        if (Data_Boolean.otherwise) {\n            return pure1(new Data_Maybe.Just(value));\n        };\n        throw new Error(\"Failed pattern match at Foreign (line 174, column 1 - line 174, column 103): \" + [ value.constructor.name ]);\n    };\n};\nvar readNullOrUndefined = function (dictMonad) {\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad));\n    return function (value) {\n        if ($foreign.isNull(value) || $foreign.isUndefined(value)) {\n            return pure1(Data_Maybe.Nothing.value);\n        };\n        if (Data_Boolean.otherwise) {\n            return pure1(new Data_Maybe.Just(value));\n        };\n        throw new Error(\"Failed pattern match at Foreign (line 179, column 1 - line 179, column 109): \" + [ value.constructor.name ]);\n    };\n};\nvar readNull = function (dictMonad) {\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad));\n    return function (value) {\n        if ($foreign.isNull(value)) {\n            return pure1(Data_Maybe.Nothing.value);\n        };\n        if (Data_Boolean.otherwise) {\n            return pure1(new Data_Maybe.Just(value));\n        };\n        throw new Error(\"Failed pattern match at Foreign (line 169, column 1 - line 169, column 98): \" + [ value.constructor.name ]);\n    };\n};\nvar fail = function (dictMonad) {\n    var $153 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad));\n    return function ($154) {\n        return $153(Data_List_NonEmpty.singleton($154));\n    };\n};\nvar readArray = function (dictMonad) {\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad));\n    var fail1 = fail(dictMonad);\n    return function (value) {\n        if ($foreign.isArray(value)) {\n            return pure1(unsafeFromForeign(value));\n        };\n        if (Data_Boolean.otherwise) {\n            return fail1(new TypeMismatch(\"array\", $foreign.tagOf(value)));\n        };\n        throw new Error(\"Failed pattern match at Foreign (line 164, column 1 - line 164, column 99): \" + [ value.constructor.name ]);\n    };\n};\nvar unsafeReadTagged = function (dictMonad) {\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad));\n    var fail1 = fail(dictMonad);\n    return function (tag) {\n        return function (value) {\n            if ($foreign.tagOf(value) === tag) {\n                return pure1(unsafeFromForeign(value));\n            };\n            if (Data_Boolean.otherwise) {\n                return fail1(new TypeMismatch(tag, $foreign.tagOf(value)));\n            };\n            throw new Error(\"Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): \" + [ tag.constructor.name, value.constructor.name ]);\n        };\n    };\n};\nvar readBoolean = function (dictMonad) {\n    return unsafeReadTagged(dictMonad)(\"Boolean\");\n};\nvar readNumber = function (dictMonad) {\n    return unsafeReadTagged(dictMonad)(\"Number\");\n};\nvar readInt = function (dictMonad) {\n    var map = Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0());\n    var readNumber1 = readNumber(dictMonad);\n    return function (value) {\n        var error = new Data_Either.Left(Data_List_NonEmpty.singleton(new TypeMismatch(\"Int\", $foreign.tagOf(value))));\n        var fromNumber = (function () {\n            var $155 = Data_Maybe.maybe(error)(pure);\n            return function ($156) {\n                return $155(Data_Int.fromNumber($156));\n            };\n        })();\n        return Control_Monad_Except_Trans.mapExceptT(map(Data_Either.either(Data_Function[\"const\"](error))(fromNumber)))(readNumber1(value));\n    };\n};\nvar readString = function (dictMonad) {\n    return unsafeReadTagged(dictMonad)(\"String\");\n};\nvar readChar = function (dictMonad) {\n    var map = Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0());\n    var readString1 = readString(dictMonad);\n    return function (value) {\n        var error = new Data_Either.Left(Data_List_NonEmpty.singleton(new TypeMismatch(\"Char\", $foreign.tagOf(value))));\n        var fromString = (function () {\n            var $157 = Data_Maybe.maybe(error)(pure);\n            return function ($158) {\n                return $157(Data_String_CodeUnits.toChar($158));\n            };\n        })();\n        return Control_Monad_Except_Trans.mapExceptT(map(Data_Either.either(Data_Function[\"const\"](error))(fromString)))(readString1(value));\n    };\n};\nvar eqForeignError = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof ForeignError && y instanceof ForeignError) {\n                return x.value0 === y.value0;\n            };\n            if (x instanceof TypeMismatch && y instanceof TypeMismatch) {\n                return x.value0 === y.value0 && x.value1 === y.value1;\n            };\n            if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {\n                return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);\n            };\n            if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {\n                return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);\n            };\n            return false;\n        };\n    }\n};\nvar ordForeignError = {\n    compare: function (x) {\n        return function (y) {\n            if (x instanceof ForeignError && y instanceof ForeignError) {\n                return compare(x.value0)(y.value0);\n            };\n            if (x instanceof ForeignError) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof ForeignError) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof TypeMismatch && y instanceof TypeMismatch) {\n                var v = compare(x.value0)(y.value0);\n                if (v instanceof Data_Ordering.LT) {\n                    return Data_Ordering.LT.value;\n                };\n                if (v instanceof Data_Ordering.GT) {\n                    return Data_Ordering.GT.value;\n                };\n                return compare(x.value1)(y.value1);\n            };\n            if (x instanceof TypeMismatch) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof TypeMismatch) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {\n                var v = compare1(x.value0)(y.value0);\n                if (v instanceof Data_Ordering.LT) {\n                    return Data_Ordering.LT.value;\n                };\n                if (v instanceof Data_Ordering.GT) {\n                    return Data_Ordering.GT.value;\n                };\n                return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);\n            };\n            if (x instanceof ErrorAtIndex) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof ErrorAtIndex) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {\n                var v = compare(x.value0)(y.value0);\n                if (v instanceof Data_Ordering.LT) {\n                    return Data_Ordering.LT.value;\n                };\n                if (v instanceof Data_Ordering.GT) {\n                    return Data_Ordering.GT.value;\n                };\n                return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);\n            };\n            throw new Error(\"Failed pattern match at Foreign (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return eqForeignError;\n    }\n};\nexport {\n    typeOf,\n    tagOf,\n    isNull,\n    isUndefined,\n    isArray\n} from \"./foreign.js\";\nexport {\n    ForeignError,\n    TypeMismatch,\n    ErrorAtIndex,\n    ErrorAtProperty,\n    renderForeignError,\n    unsafeToForeign,\n    unsafeFromForeign,\n    unsafeReadTagged,\n    readString,\n    readChar,\n    readBoolean,\n    readNumber,\n    readInt,\n    readArray,\n    readNull,\n    readUndefined,\n    readNullOrUndefined,\n    fail,\n    eqForeignError,\n    ordForeignError,\n    showForeignError\n};\n","export function _copyST(m) {\n  return function () {\n    var r = {};\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k)) {\n        r[k] = m[k];\n      }\n    }\n    return r;\n  };\n}\n\nexport const empty = {};\n\nexport function runST(f) {\n  return f();\n}\n\nexport function _fmapObject(m0, f) {\n  var m = {};\n  for (var k in m0) {\n    if (hasOwnProperty.call(m0, k)) {\n      m[k] = f(m0[k]);\n    }\n  }\n  return m;\n}\n\nexport function _mapWithKey(m0, f) {\n  var m = {};\n  for (var k in m0) {\n    if (hasOwnProperty.call(m0, k)) {\n      m[k] = f(k)(m0[k]);\n    }\n  }\n  return m;\n}\n\nexport function _foldM(bind) {\n  return function (f) {\n    return function (mz) {\n      return function (m) {\n        var acc = mz;\n        function g(k) {\n          return function (z) {\n            return f(z)(k)(m[k]);\n          };\n        }\n        for (var k in m) {\n          if (hasOwnProperty.call(m, k)) {\n            acc = bind(acc)(g(k));\n          }\n        }\n        return acc;\n      };\n    };\n  };\n}\n\nexport function _foldSCObject(m, z, f, fromMaybe) {\n  var acc = z;\n  for (var k in m) {\n    if (hasOwnProperty.call(m, k)) {\n      var maybeR = f(acc)(k)(m[k]);\n      var r = fromMaybe(null)(maybeR);\n      if (r === null) return acc;\n      else acc = r;\n    }\n  }\n  return acc;\n}\n\nexport function all(f) {\n  return function (m) {\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;\n    }\n    return true;\n  };\n}\n\nexport function size(m) {\n  var s = 0;\n  for (var k in m) {\n    if (hasOwnProperty.call(m, k)) {\n      ++s;\n    }\n  }\n  return s;\n}\n\nexport function _lookup(no, yes, k, m) {\n  return k in m ? yes(m[k]) : no;\n}\n\nexport function _lookupST(no, yes, k, m) {\n  return function () {\n    return k in m ? yes(m[k]) : no;\n  };\n}\n\nexport function toArrayWithKey(f) {\n  return function (m) {\n    var r = [];\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k)) {\n        r.push(f(k)(m[k]));\n      }\n    }\n    return r;\n  };\n}\n\nexport const keys = Object.keys || toArrayWithKey(function (k) {\n  return function () { return k; };\n});\n","// module Data.Function.Uncurried\n\nexport const mkFn0 = function (fn) {\n  return function () {\n    return fn();\n  };\n};\n\nexport const mkFn2 = function (fn) {\n  /* jshint maxparams: 2 */\n  return function (a, b) {\n    return fn(a)(b);\n  };\n};\n\nexport const mkFn3 = function (fn) {\n  /* jshint maxparams: 3 */\n  return function (a, b, c) {\n    return fn(a)(b)(c);\n  };\n};\n\nexport const mkFn4 = function (fn) {\n  /* jshint maxparams: 4 */\n  return function (a, b, c, d) {\n    return fn(a)(b)(c)(d);\n  };\n};\n\nexport const mkFn5 = function (fn) {\n  /* jshint maxparams: 5 */\n  return function (a, b, c, d, e) {\n    return fn(a)(b)(c)(d)(e);\n  };\n};\n\nexport const mkFn6 = function (fn) {\n  /* jshint maxparams: 6 */\n  return function (a, b, c, d, e, f) {\n    return fn(a)(b)(c)(d)(e)(f);\n  };\n};\n\nexport const mkFn7 = function (fn) {\n  /* jshint maxparams: 7 */\n  return function (a, b, c, d, e, f, g) {\n    return fn(a)(b)(c)(d)(e)(f)(g);\n  };\n};\n\nexport const mkFn8 = function (fn) {\n  /* jshint maxparams: 8 */\n  return function (a, b, c, d, e, f, g, h) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h);\n  };\n};\n\nexport const mkFn9 = function (fn) {\n  /* jshint maxparams: 9 */\n  return function (a, b, c, d, e, f, g, h, i) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);\n  };\n};\n\nexport const mkFn10 = function (fn) {\n  /* jshint maxparams: 10 */\n  return function (a, b, c, d, e, f, g, h, i, j) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);\n  };\n};\n\nexport const runFn0 = function (fn) {\n  return fn();\n};\n\nexport const runFn2 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return fn(a, b);\n    };\n  };\n};\n\nexport const runFn3 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return fn(a, b, c);\n      };\n    };\n  };\n};\n\nexport const runFn4 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return fn(a, b, c, d);\n        };\n      };\n    };\n  };\n};\n\nexport const runFn5 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return fn(a, b, c, d, e);\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn6 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return fn(a, b, c, d, e, f);\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn7 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return fn(a, b, c, d, e, f, g);\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn8 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return fn(a, b, c, d, e, f, g, h);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn9 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return function (i) {\n                    return fn(a, b, c, d, e, f, g, h, i);\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn10 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return function (i) {\n                    return function (j) {\n                      return fn(a, b, c, d, e, f, g, h, i, j);\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nvar runFn1 = function (f) {\n    return f;\n};\nvar mkFn1 = function (f) {\n    return f;\n};\nexport {\n    mkFn0,\n    mkFn2,\n    mkFn3,\n    mkFn4,\n    mkFn5,\n    mkFn6,\n    mkFn7,\n    mkFn8,\n    mkFn9,\n    mkFn10,\n    runFn0,\n    runFn2,\n    runFn3,\n    runFn4,\n    runFn5,\n    runFn6,\n    runFn7,\n    runFn8,\n    runFn9,\n    runFn10\n} from \"./foreign.js\";\nexport {\n    mkFn1,\n    runFn1\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Function_Uncurried from \"../Data.Function.Uncurried/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Foreign_Object_ST from \"../Foreign.Object.ST/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar sortWith = /* #__PURE__ */ Data_Array.sortWith(Data_Ord.ordString);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST);\nvar showTuple = /* #__PURE__ */ Data_Tuple.showTuple(Data_Show.showString);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar forWithIndex_ = /* #__PURE__ */ Data_FoldableWithIndex.forWithIndex_(Control_Monad_ST_Internal.applicativeST);\nvar for_ = /* #__PURE__ */ Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar ordTuple = /* #__PURE__ */ Data_Tuple.ordTuple(Data_Ord.ordString);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Maybe.functorMaybe);\nvar values = /* #__PURE__ */ $foreign.toArrayWithKey(function (v) {\n    return function (v1) {\n        return v1;\n    };\n});\nvar toUnfoldable = function (dictUnfoldable) {\n    var $89 = Data_Array.toUnfoldable(dictUnfoldable);\n    var $90 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n    return function ($91) {\n        return $89($90($91));\n    };\n};\nvar toAscUnfoldable = function (dictUnfoldable) {\n    var $92 = Data_Array.toUnfoldable(dictUnfoldable);\n    var $93 = sortWith(Data_Tuple.fst);\n    var $94 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n    return function ($95) {\n        return $92($93($94($95)));\n    };\n};\nvar toAscArray = /* #__PURE__ */ toAscUnfoldable(Data_Unfoldable.unfoldableArray);\nvar toArray = /* #__PURE__ */ (function () {\n    return $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n})();\nvar thawST = $foreign[\"_copyST\"];\nvar singleton = function (k) {\n    return function (v) {\n        return $foreign.runST(bindFlipped(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST[\"new\"]));\n    };\n};\nvar showObject = function (dictShow) {\n    var show = Data_Show.show(Data_Show.showArray(showTuple(dictShow)));\n    return {\n        show: function (m) {\n            return \"(fromFoldable \" + (show(toArray(m)) + \")\");\n        }\n    };\n};\nvar mutate = function (f) {\n    return function (m) {\n        return $foreign.runST(function __do() {\n            var s = thawST(m)();\n            f(s)();\n            return s;\n        });\n    };\n};\nvar member = /* #__PURE__ */ Data_Function_Uncurried.runFn4($foreign[\"_lookup\"])(false)(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar mapWithKey = function (f) {\n    return function (m) {\n        return $foreign[\"_mapWithKey\"](m, f);\n    };\n};\nvar lookup = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign[\"_lookup\"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);\n})();\nvar isSubmap = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (m1) {\n        return function (m2) {\n            var f = function (k) {\n                return function (v) {\n                    return $foreign[\"_lookup\"](false, eq(v), k, m2);\n                };\n            };\n            return $foreign.all(f)(m1);\n        };\n    };\n};\nvar isEmpty = /* #__PURE__ */ $foreign.all(function (v) {\n    return function (v1) {\n        return false;\n    };\n});\nvar insert = function (k) {\n    return function (v) {\n        return mutate(Foreign_Object_ST.poke(k)(v));\n    };\n};\nvar functorObject = {\n    map: function (f) {\n        return function (m) {\n            return $foreign[\"_fmapObject\"](m, f);\n        };\n    }\n};\nvar functorWithIndexObject = {\n    mapWithIndex: mapWithKey,\n    Functor0: function () {\n        return functorObject;\n    }\n};\nvar fromHomogeneous = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nvar fromFoldableWithIndex = function (dictFoldableWithIndex) {\n    var forWithIndex_1 = forWithIndex_(dictFoldableWithIndex);\n    return function (l) {\n        return $foreign.runST(function __do() {\n            var s = Foreign_Object_ST[\"new\"]();\n            forWithIndex_1(l)(function (k) {\n                return function (v) {\n                    return Foreign_Object_ST.poke(k)(v)(s);\n                };\n            })();\n            return s;\n        });\n    };\n};\nvar fromFoldableWith = function (dictFoldable) {\n    var for_1 = for_(dictFoldable);\n    return function (f) {\n        return function (l) {\n            return $foreign.runST(function __do() {\n                var s = Foreign_Object_ST[\"new\"]();\n                for_1(l)(function (v) {\n                    return function __do() {\n                        var v$prime = $foreign[\"_lookupST\"](v.value1, f(v.value1), v.value0, s)();\n                        return Foreign_Object_ST.poke(v.value0)(v$prime)(s)();\n                    };\n                })();\n                return s;\n            });\n        };\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    var fromFoldable1 = Data_Array.fromFoldable(dictFoldable);\n    return function (l) {\n        return $foreign.runST(function __do() {\n            var s = Foreign_Object_ST[\"new\"]();\n            Control_Monad_ST_Internal.foreach(fromFoldable1(l))(function (v) {\n                return $$void(Foreign_Object_ST.poke(v.value0)(v.value1)(s));\n            })();\n            return s;\n        });\n    };\n};\nvar freezeST = $foreign[\"_copyST\"];\nvar foldMaybe = function (f) {\n    return function (z) {\n        return function (m) {\n            return $foreign[\"_foldSCObject\"](m, z, f, Data_Maybe.fromMaybe);\n        };\n    };\n};\nvar foldM = function (dictMonad) {\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    var pure1 = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (z) {\n            return $foreign[\"_foldM\"](bind1)(f)(pure1(z));\n        };\n    };\n};\nvar foldM1 = /* #__PURE__ */ foldM(Control_Monad_ST_Internal.monadST);\nvar union = function (m) {\n    return mutate(function (s) {\n        return foldM1(function (s$prime) {\n            return function (k) {\n                return function (v) {\n                    return Foreign_Object_ST.poke(k)(v)(s$prime);\n                };\n            };\n        })(s)(m);\n    });\n};\nvar unions = function (dictFoldable) {\n    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);\n};\nvar unionWith = function (f) {\n    return function (m1) {\n        return function (m2) {\n            return mutate(function (s1) {\n                return foldM1(function (s2) {\n                    return function (k) {\n                        return function (v1) {\n                            return Foreign_Object_ST.poke(k)($foreign[\"_lookup\"](v1, function (v2) {\n                                return f(v1)(v2);\n                            }, k, m2))(s2);\n                        };\n                    };\n                })(s1)(m1);\n            })(m2);\n        };\n    };\n};\nvar semigroupObject = function (dictSemigroup) {\n    return {\n        append: unionWith(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidObject = function (dictSemigroup) {\n    var semigroupObject1 = semigroupObject(dictSemigroup);\n    return {\n        mempty: $foreign.empty,\n        Semigroup0: function () {\n            return semigroupObject1;\n        }\n    };\n};\nvar fold = /* #__PURE__ */ $foreign[\"_foldM\"](Data_Function.applyFlipped);\nvar foldMap = function (dictMonoid) {\n    var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    return function (f) {\n        return fold(function (acc) {\n            return function (k) {\n                return function (v) {\n                    return append1(acc)(f(k)(v));\n                };\n            };\n        })(mempty);\n    };\n};\nvar foldableObject = {\n    foldl: function (f) {\n        return fold(function (z) {\n            return function (v) {\n                return f(z);\n            };\n        });\n    },\n    foldr: function (f) {\n        return function (z) {\n            return function (m) {\n                return foldr(f)(z)(values(m));\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap1 = foldMap(dictMonoid);\n        return function (f) {\n            return foldMap1(Data_Function[\"const\"](f));\n        };\n    }\n};\nvar foldableWithIndexObject = {\n    foldlWithIndex: function (f) {\n        return fold(Data_Function.flip(f));\n    },\n    foldrWithIndex: function (f) {\n        return function (z) {\n            return function (m) {\n                return foldr(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        return foldMap(dictMonoid);\n    },\n    Foldable0: function () {\n        return foldableObject;\n    }\n};\nvar traversableWithIndexObject = {\n    traverseWithIndex: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            return function (ms) {\n                return fold(function (acc) {\n                    return function (k) {\n                        return function (v) {\n                            return apply(map(Data_Function.flip(insert(k)))(acc))(f(k)(v));\n                        };\n                    };\n                })(pure1($foreign.empty))(ms);\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexObject;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexObject;\n    },\n    Traversable2: function () {\n        return traversableObject;\n    }\n};\nvar traversableObject = {\n    traverse: function (dictApplicative) {\n        var $96 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);\n        return function ($97) {\n            return $96(Data_Function[\"const\"]($97));\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableObject)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorObject;\n    },\n    Foldable1: function () {\n        return foldableObject;\n    }\n};\nvar filterWithKey = function (predicate) {\n    return function (m) {\n        var go = (function () {\n            var step = function (acc) {\n                return function (k) {\n                    return function (v) {\n                        var $86 = predicate(k)(v);\n                        if ($86) {\n                            return Foreign_Object_ST.poke(k)(v)(acc);\n                        };\n                        return pure(acc);\n                    };\n                };\n            };\n            return function __do() {\n                var m$prime = Foreign_Object_ST[\"new\"]();\n                return foldM1(step)(m$prime)(m)();\n            };\n        })();\n        return $foreign.runST(go);\n    };\n};\nvar filterKeys = function (predicate) {\n    return filterWithKey(function ($98) {\n        return Data_Function[\"const\"](predicate($98));\n    });\n};\nvar filter = function (predicate) {\n    return filterWithKey(Data_Function[\"const\"](predicate));\n};\nvar eqObject = function (dictEq) {\n    var isSubmap1 = isSubmap(dictEq);\n    return {\n        eq: function (m1) {\n            return function (m2) {\n                return isSubmap1(m1)(m2) && isSubmap1(m2)(m1);\n            };\n        }\n    };\n};\nvar ordObject = function (dictOrd) {\n    var compare = Data_Ord.compare(Data_Ord.ordArray(ordTuple(dictOrd)));\n    var eqObject1 = eqObject(dictOrd.Eq0());\n    return {\n        compare: function (m1) {\n            return function (m2) {\n                return compare(toAscArray(m1))(toAscArray(m2));\n            };\n        },\n        Eq0: function () {\n            return eqObject1;\n        }\n    };\n};\nvar eq1Object = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqObject(dictEq));\n    }\n};\nvar $$delete = function (k) {\n    return mutate(Foreign_Object_ST[\"delete\"](k));\n};\nvar pop = function (k) {\n    return function (m) {\n        return mapFlipped(lookup(k)(m))(function (a) {\n            return new Data_Tuple.Tuple(a, $$delete(k)(m));\n        });\n    };\n};\nvar alter = function (f) {\n    return function (k) {\n        return function (m) {\n            var v = f(lookup(k)(m));\n            if (v instanceof Data_Maybe.Nothing) {\n                return $$delete(k)(m);\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return insert(k)(v.value0)(m);\n            };\n            throw new Error(\"Failed pattern match at Foreign.Object (line 210, column 15 - line 212, column 25): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar update = function (f) {\n    return function (k) {\n        return function (m) {\n            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);\n        };\n    };\n};\nexport {\n    empty,\n    size,\n    keys,\n    all,\n    runST,\n    toArrayWithKey\n} from \"./foreign.js\";\nexport {\n    isEmpty,\n    singleton,\n    insert,\n    lookup,\n    toUnfoldable,\n    toAscUnfoldable,\n    fromFoldable,\n    fromFoldableWith,\n    fromFoldableWithIndex,\n    fromHomogeneous,\n    $$delete as delete,\n    pop,\n    member,\n    alter,\n    update,\n    mapWithKey,\n    filterWithKey,\n    filterKeys,\n    filter,\n    values,\n    union,\n    unionWith,\n    unions,\n    isSubmap,\n    fold,\n    foldMap,\n    foldM,\n    foldMaybe,\n    thawST,\n    freezeST,\n    functorObject,\n    functorWithIndexObject,\n    foldableObject,\n    foldableWithIndexObject,\n    traversableObject,\n    traversableWithIndexObject,\n    eqObject,\n    eq1Object,\n    ordObject,\n    showObject,\n    semigroupObject,\n    monoidObject\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Foreign from \"../Foreign/index.js\";\nimport * as Foreign_Object from \"../Foreign.Object/index.js\";\nimport * as Halogen_VDom_Machine from \"../Halogen.VDom.Machine/index.js\";\nimport * as Halogen_VDom_Util from \"../Halogen.VDom.Util/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Event_EventTarget from \"../Web.Event.EventTarget/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar Created = /* #__PURE__ */ (function () {\n    function Created(value0) {\n        this.value0 = value0;\n    };\n    Created.create = function (value0) {\n        return new Created(value0);\n    };\n    return Created;\n})();\nvar Removed = /* #__PURE__ */ (function () {\n    function Removed(value0) {\n        this.value0 = value0;\n    };\n    Removed.create = function (value0) {\n        return new Removed(value0);\n    };\n    return Removed;\n})();\nvar Attribute = /* #__PURE__ */ (function () {\n    function Attribute(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    Attribute.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new Attribute(value0, value1, value2);\n            };\n        };\n    };\n    return Attribute;\n})();\nvar Property = /* #__PURE__ */ (function () {\n    function Property(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Property.create = function (value0) {\n        return function (value1) {\n            return new Property(value0, value1);\n        };\n    };\n    return Property;\n})();\nvar Handler = /* #__PURE__ */ (function () {\n    function Handler(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Handler.create = function (value0) {\n        return function (value1) {\n            return new Handler(value0, value1);\n        };\n    };\n    return Handler;\n})();\nvar Ref = /* #__PURE__ */ (function () {\n    function Ref(value0) {\n        this.value0 = value0;\n    };\n    Ref.create = function (value0) {\n        return new Ref(value0);\n    };\n    return Ref;\n})();\nvar unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;\nvar setProperty = Halogen_VDom_Util.unsafeSetAny;\nvar removeProperty = function (key, el) {\n    var v = Halogen_VDom_Util.hasAttribute(Data_Nullable[\"null\"], key, el);\n    if (v) {\n        return Halogen_VDom_Util.removeAttribute(Data_Nullable[\"null\"], key, el);\n    };\n    var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));\n    if (v1 === \"string\") {\n        return Halogen_VDom_Util.unsafeSetAny(key, \"\", el);\n    };\n    if (key === \"rowSpan\") {\n        return Halogen_VDom_Util.unsafeSetAny(key, 1, el);\n    };\n    if (key === \"colSpan\") {\n        return Halogen_VDom_Util.unsafeSetAny(key, 1, el);\n    };\n    return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);\n};\nvar propToStrKey = function (v) {\n    if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {\n        return \"attr/\" + (v.value0.value0 + (\":\" + v.value1));\n    };\n    if (v instanceof Attribute) {\n        return \"attr/:\" + v.value1;\n    };\n    if (v instanceof Property) {\n        return \"prop/\" + v.value0;\n    };\n    if (v instanceof Handler) {\n        return \"handler/\" + v.value0;\n    };\n    if (v instanceof Ref) {\n        return \"ref\";\n    };\n    throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): \" + [ v.constructor.name ]);\n};\nvar propFromString = Unsafe_Coerce.unsafeCoerce;\nvar propFromNumber = Unsafe_Coerce.unsafeCoerce;\nvar propFromInt = Unsafe_Coerce.unsafeCoerce;\nvar propFromBoolean = Unsafe_Coerce.unsafeCoerce;\nvar functorProp = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Handler) {\n                return new Handler(v1.value0, map(map1(v))(v1.value1));\n            };\n            if (v1 instanceof Ref) {\n                return new Ref(map(map1(v))(v1.value0));\n            };\n            return v1;\n        };\n    }\n};\nvar functorElemRef = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Created) {\n                return new Created(v(v1.value0));\n            };\n            if (v1 instanceof Removed) {\n                return new Removed(v(v1.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 49, column 1 - line 51, column 36): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar buildProp = function (emit) {\n    return function (el) {\n        var removeProp = function (prevEvents) {\n            return function (v, v1) {\n                if (v1 instanceof Attribute) {\n                    return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);\n                };\n                if (v1 instanceof Property) {\n                    return removeProperty(v1.value0, el);\n                };\n                if (v1 instanceof Handler) {\n                    var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);\n                    return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);\n                };\n                if (v1 instanceof Ref) {\n                    return Data_Unit.unit;\n                };\n                throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): \" + [ v1.constructor.name ]);\n            };\n        };\n        var mbEmit = function (v) {\n            if (v instanceof Data_Maybe.Just) {\n                return emit(v.value0)();\n            };\n            return Data_Unit.unit;\n        };\n        var haltProp = function (state) {\n            var v = Foreign_Object.lookup(\"ref\")(state.props);\n            if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {\n                return mbEmit(v.value0.value0(new Removed(el)));\n            };\n            return Data_Unit.unit;\n        };\n        var diffProp = function (prevEvents, events) {\n            return function (v, v1, v11, v2) {\n                if (v11 instanceof Attribute && v2 instanceof Attribute) {\n                    var $66 = v11.value2 === v2.value2;\n                    if ($66) {\n                        return v2;\n                    };\n                    Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);\n                    return v2;\n                };\n                if (v11 instanceof Property && v2 instanceof Property) {\n                    var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);\n                    if (v4) {\n                        return v2;\n                    };\n                    if (v2.value0 === \"value\") {\n                        var elVal = unsafeGetProperty(\"value\", el);\n                        var $75 = Halogen_VDom_Util.refEq(elVal, v2.value1);\n                        if ($75) {\n                            return v2;\n                        };\n                        setProperty(v2.value0, v2.value1, el);\n                        return v2;\n                    };\n                    setProperty(v2.value0, v2.value1, el);\n                    return v2;\n                };\n                if (v11 instanceof Handler && v2 instanceof Handler) {\n                    var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);\n                    Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();\n                    Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);\n                    return v2;\n                };\n                return v2;\n            };\n        };\n        var applyProp = function (events) {\n            return function (v, v1, v2) {\n                if (v2 instanceof Attribute) {\n                    Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);\n                    return v2;\n                };\n                if (v2 instanceof Property) {\n                    setProperty(v2.value0, v2.value1, el);\n                    return v2;\n                };\n                if (v2 instanceof Handler) {\n                    var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);\n                    if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {\n                        Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();\n                        return v2;\n                    };\n                    var ref = Effect_Ref[\"new\"](v2.value1)();\n                    var listener = Web_Event_EventTarget.eventListener(function (ev) {\n                        return function __do() {\n                            var f$prime = Effect_Ref.read(ref)();\n                            return mbEmit(f$prime(ev));\n                        };\n                    })();\n                    Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);\n                    Halogen_VDom_Util.addEventListener(v2.value0, listener, el);\n                    return v2;\n                };\n                if (v2 instanceof Ref) {\n                    mbEmit(v2.value0(new Created(el)));\n                    return v2;\n                };\n                throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): \" + [ v2.constructor.name ]);\n            };\n        };\n        var $lazy_patchProp = $runtime_lazy(\"patchProp\", \"Halogen.VDom.DOM.Prop\", function () {\n            return function (state, ps2) {\n                var events = Halogen_VDom_Util.newMutMap();\n                var onThis = removeProp(state.events);\n                var onThese = diffProp(state.events, events);\n                var onThat = applyProp(events);\n                var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);\n                var nextState = {\n                    events: Halogen_VDom_Util.unsafeFreeze(events),\n                    props: props\n                };\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, $lazy_patchProp(100), haltProp));\n            };\n        });\n        var patchProp = $lazy_patchProp(87);\n        var renderProp = function (ps1) {\n            var events = Halogen_VDom_Util.newMutMap();\n            var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));\n            var state = {\n                events: Halogen_VDom_Util.unsafeFreeze(events),\n                props: ps1$prime\n            };\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));\n        };\n        return renderProp;\n    };\n};\nexport {\n    Attribute,\n    Property,\n    Handler,\n    Ref,\n    Created,\n    Removed,\n    propFromString,\n    propFromBoolean,\n    propFromInt,\n    propFromNumber,\n    buildProp,\n    functorProp,\n    functorElemRef\n};\n","// Generated by purs version 0.15.7\nimport * as DOM_HTML_Indexed_AutocompleteType from \"../DOM.HTML.Indexed.AutocompleteType/index.js\";\nimport * as DOM_HTML_Indexed_ButtonType from \"../DOM.HTML.Indexed.ButtonType/index.js\";\nimport * as DOM_HTML_Indexed_CrossOriginValue from \"../DOM.HTML.Indexed.CrossOriginValue/index.js\";\nimport * as DOM_HTML_Indexed_DirValue from \"../DOM.HTML.Indexed.DirValue/index.js\";\nimport * as DOM_HTML_Indexed_FormMethod from \"../DOM.HTML.Indexed.FormMethod/index.js\";\nimport * as DOM_HTML_Indexed_InputAcceptType from \"../DOM.HTML.Indexed.InputAcceptType/index.js\";\nimport * as DOM_HTML_Indexed_InputType from \"../DOM.HTML.Indexed.InputType/index.js\";\nimport * as DOM_HTML_Indexed_KindValue from \"../DOM.HTML.Indexed.KindValue/index.js\";\nimport * as DOM_HTML_Indexed_MenuType from \"../DOM.HTML.Indexed.MenuType/index.js\";\nimport * as DOM_HTML_Indexed_MenuitemType from \"../DOM.HTML.Indexed.MenuitemType/index.js\";\nimport * as DOM_HTML_Indexed_OrderedListType from \"../DOM.HTML.Indexed.OrderedListType/index.js\";\nimport * as DOM_HTML_Indexed_PreloadValue from \"../DOM.HTML.Indexed.PreloadValue/index.js\";\nimport * as DOM_HTML_Indexed_ScopeValue from \"../DOM.HTML.Indexed.ScopeValue/index.js\";\nimport * as DOM_HTML_Indexed_StepValue from \"../DOM.HTML.Indexed.StepValue/index.js\";\nimport * as DOM_HTML_Indexed_WrapValue from \"../DOM.HTML.Indexed.WrapValue/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Halogen_VDom from \"../Halogen.VDom/index.js\";\nimport * as Halogen_VDom_DOM_Prop from \"../Halogen.VDom.DOM.Prop/index.js\";\nimport * as Halogen_VDom_Types from \"../Halogen.VDom.Types/index.js\";\nimport * as Web_HTML_Common from \"../Web.HTML.Common/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Halogen_Query_Input.functorInput);\nvar un = /* #__PURE__ */ Data_Newtype.un();\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom);\nvar HTML = function (x) {\n    return x;\n};\nvar widget = function ($28) {\n    return HTML(Halogen_VDom_Types.Widget.create($28));\n};\nvar toPropValue = function (dict) {\n    return dict.toPropValue;\n};\nvar text = function ($29) {\n    return HTML(Halogen_VDom_Types.Text.create($29));\n};\nvar ref = function (f) {\n    return new Halogen_VDom_DOM_Prop.Ref(function ($30) {\n        return f((function (v) {\n            if (v instanceof Halogen_VDom_DOM_Prop.Created) {\n                return new Data_Maybe.Just(v.value0);\n            };\n            if (v instanceof Halogen_VDom_DOM_Prop.Removed) {\n                return Data_Maybe.Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Halogen.HTML.Core (line 109, column 21 - line 111, column 23): \" + [ v.constructor.name ]);\n        })($30));\n    });\n};\nvar prop = function (dictIsProp) {\n    var toPropValue1 = toPropValue(dictIsProp);\n    return function (v) {\n        var $31 = Halogen_VDom_DOM_Prop.Property.create(v);\n        return function ($32) {\n            return $31(toPropValue1($32));\n        };\n    };\n};\nvar newtypeHTML = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar renderWidget = function (f) {\n    return function (g) {\n        return function (v) {\n            return Halogen_VDom_Types.renderWidget(map(map1(map2(f))))((function () {\n                var $33 = un(HTML);\n                return function ($34) {\n                    return $33(g($34));\n                };\n            })())(v);\n        };\n    };\n};\nvar keyed = function (ns) {\n    return function (name) {\n        return function (props) {\n            return function (children) {\n                return new Halogen_VDom_Types.Keyed(ns, name, props, children);\n            };\n        };\n    };\n};\nvar isPropWrapValue = {\n    toPropValue: function ($35) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_WrapValue.renderWrapValue($35));\n    }\n};\nvar isPropString = {\n    toPropValue: Halogen_VDom_DOM_Prop.propFromString\n};\nvar isPropStepValue = {\n    toPropValue: function ($36) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($36));\n    }\n};\nvar isPropScopeValue = {\n    toPropValue: function ($37) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ScopeValue.renderScopeValue($37));\n    }\n};\nvar isPropPreloadValue = {\n    toPropValue: function ($38) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_PreloadValue.renderPreloadValue($38));\n    }\n};\nvar isPropOrderedListType = {\n    toPropValue: function ($39) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OrderedListType.renderOrderedListType($39));\n    }\n};\nvar isPropNumber = {\n    toPropValue: Halogen_VDom_DOM_Prop.propFromNumber\n};\nvar isPropMenuitemType = {\n    toPropValue: function ($40) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuitemType.renderMenuitemType($40));\n    }\n};\nvar isPropMenuType = {\n    toPropValue: function ($41) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuType.renderMenuType($41));\n    }\n};\nvar isPropMediaType = {\n    toPropValue: /* #__PURE__ */ (function () {\n        var $42 = Data_Newtype.unwrap();\n        return function ($43) {\n            return Halogen_VDom_DOM_Prop.propFromString($42($43));\n        };\n    })()\n};\nvar isPropKindValue = {\n    toPropValue: function ($44) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_KindValue.renderKindValue($44));\n    }\n};\nvar isPropInt = {\n    toPropValue: Halogen_VDom_DOM_Prop.propFromInt\n};\nvar isPropInputType = {\n    toPropValue: function ($45) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($45));\n    }\n};\nvar isPropInputAcceptType = {\n    toPropValue: function ($46) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputAcceptType.renderInputAcceptType($46));\n    }\n};\nvar isPropFormMethod = {\n    toPropValue: function ($47) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_FormMethod.renderFormMethod($47));\n    }\n};\nvar isPropDirValue = {\n    toPropValue: function ($48) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_DirValue.renderDirValue($48));\n    }\n};\nvar isPropCrossOriginValue = {\n    toPropValue: function ($49) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_CrossOriginValue.renderCrossOriginValue($49));\n    }\n};\nvar isPropButtonType = {\n    toPropValue: function ($50) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($50));\n    }\n};\nvar isPropBoolean = {\n    toPropValue: Halogen_VDom_DOM_Prop.propFromBoolean\n};\nvar isPropAutocompleteType = {\n    toPropValue: function ($51) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_AutocompleteType.renderAutocompleteType($51));\n    }\n};\nvar handler = /* #__PURE__ */ (function () {\n    return Halogen_VDom_DOM_Prop.Handler.create;\n})();\nvar element = function (ns) {\n    return function (name) {\n        return function (props) {\n            return function (children) {\n                return new Halogen_VDom_Types.Elem(ns, name, props, children);\n            };\n        };\n    };\n};\nvar bifunctorHTML = {\n    bimap: function (f) {\n        return function (g) {\n            return function (v) {\n                return bimap(map(map1(map2(g))))(f)(v);\n            };\n        };\n    }\n};\nvar functorHTML = {\n    map: /* #__PURE__ */ Data_Bifunctor.rmap(bifunctorHTML)\n};\nvar attr = function (ns) {\n    return function (v) {\n        return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);\n    };\n};\nexport {\n    HTML,\n    renderWidget,\n    widget,\n    text,\n    element,\n    keyed,\n    prop,\n    attr,\n    handler,\n    ref,\n    toPropValue,\n    newtypeHTML,\n    bifunctorHTML,\n    functorHTML,\n    isPropString,\n    isPropInt,\n    isPropNumber,\n    isPropBoolean,\n    isPropMediaType,\n    isPropButtonType,\n    isPropCrossOriginValue,\n    isPropDirValue,\n    isPropFormMethod,\n    isPropInputType,\n    isPropKindValue,\n    isPropMenuitemType,\n    isPropMenuType,\n    isPropAutocompleteType,\n    isPropOrderedListType,\n    isPropPreloadValue,\n    isPropScopeValue,\n    isPropStepValue,\n    isPropWrapValue,\n    isPropInputAcceptType\n};\nexport {\n    ElemName,\n    Namespace\n} from \"../Halogen.VDom/index.js\";\nexport {\n    Attribute,\n    Handler,\n    Property,\n    Ref\n} from \"../Halogen.VDom.DOM.Prop/index.js\";\nexport {\n    AttrName,\n    ClassName,\n    PropName\n} from \"../Web.HTML.Common/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Const from \"../Data.Const/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_List_NonEmpty from \"../Data.List.NonEmpty/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar Pure = /* #__PURE__ */ (function () {\n    function Pure(value0) {\n        this.value0 = value0;\n    };\n    Pure.create = function (value0) {\n        return new Pure(value0);\n    };\n    return Pure;\n})();\nvar Lift = /* #__PURE__ */ (function () {\n    function Lift(value0) {\n        this.value0 = value0;\n    };\n    Lift.create = function (value0) {\n        return new Lift(value0);\n    };\n    return Lift;\n})();\nvar Ap = /* #__PURE__ */ (function () {\n    function Ap(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Ap.create = function (value0) {\n        return function (value1) {\n            return new Ap(value0, value1);\n        };\n    };\n    return Ap;\n})();\nvar mkAp = function (fba) {\n    return function (fb) {\n        return new Ap(fba, fb);\n    };\n};\nvar liftFreeAp = /* #__PURE__ */ (function () {\n    return Lift.create;\n})();\nvar goLeft = function (dictApplicative) {\n    var pure = Control_Applicative.pure(dictApplicative);\n    return function (fStack) {\n        return function (valStack) {\n            return function (nat) {\n                return function (func) {\n                    return function (count) {\n                        if (func instanceof Pure) {\n                            return new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                                func: pure(func.value0),\n                                count: count\n                            }, fStack), valStack);\n                        };\n                        if (func instanceof Lift) {\n                            return new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                                func: nat(func.value0),\n                                count: count\n                            }, fStack), valStack);\n                        };\n                        if (func instanceof Ap) {\n                            return goLeft(dictApplicative)(fStack)(Data_List_NonEmpty.cons(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);\n                        };\n                        throw new Error(\"Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): \" + [ func.constructor.name ]);\n                    };\n                };\n            };\n        };\n    };\n};\nvar goApply = function (dictApplicative) {\n    var apply = Control_Apply.apply(dictApplicative.Apply0());\n    return function (fStack) {\n        return function (vals) {\n            return function (gVal) {\n                if (fStack instanceof Data_List_Types.Nil) {\n                    return new Data_Either.Left(gVal);\n                };\n                if (fStack instanceof Data_List_Types.Cons) {\n                    var gRes = apply(fStack.value0.func)(gVal);\n                    var $31 = fStack.value0.count === 1;\n                    if ($31) {\n                        if (fStack.value1 instanceof Data_List_Types.Nil) {\n                            return new Data_Either.Left(gRes);\n                        };\n                        return goApply(dictApplicative)(fStack.value1)(vals)(gRes);\n                    };\n                    if (vals instanceof Data_List_Types.Nil) {\n                        return new Data_Either.Left(gRes);\n                    };\n                    if (vals instanceof Data_List_Types.Cons) {\n                        return new Data_Either.Right(new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                            func: gRes,\n                            count: fStack.value0.count - 1 | 0\n                        }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));\n                    };\n                    throw new Error(\"Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): \" + [ vals.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): \" + [ fStack.constructor.name ]);\n            };\n        };\n    };\n};\nvar functorFreeAp = {\n    map: function (f) {\n        return function (x) {\n            return mkAp(new Pure(f))(x);\n        };\n    }\n};\nvar foldFreeAp = function (dictApplicative) {\n    var goApply1 = goApply(dictApplicative);\n    var pure = Control_Applicative.pure(dictApplicative);\n    var goLeft1 = goLeft(dictApplicative);\n    return function (nat) {\n        return function (z) {\n            var go = function ($copy_v) {\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v) {\n                    if (v.value1.value0 instanceof Pure) {\n                        var v1 = goApply1(v.value0)(v.value1.value1)(pure(v.value1.value0.value0));\n                        if (v1 instanceof Data_Either.Left) {\n                            $tco_done = true;\n                            return v1.value0;\n                        };\n                        if (v1 instanceof Data_Either.Right) {\n                            $copy_v = v1.value0;\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): \" + [ v1.constructor.name ]);\n                    };\n                    if (v.value1.value0 instanceof Lift) {\n                        var v1 = goApply1(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));\n                        if (v1 instanceof Data_Either.Left) {\n                            $tco_done = true;\n                            return v1.value0;\n                        };\n                        if (v1 instanceof Data_Either.Right) {\n                            $copy_v = v1.value0;\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): \" + [ v1.constructor.name ]);\n                    };\n                    if (v.value1.value0 instanceof Ap) {\n                        var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);\n                        $copy_v = goLeft1(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): \" + [ v.value1.value0.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($copy_v);\n                };\n                return $tco_result;\n            };\n            return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));\n        };\n    };\n};\nvar retractFreeAp = function (dictApplicative) {\n    return foldFreeAp(dictApplicative)(identity);\n};\nvar applyFreeAp = {\n    apply: function (fba) {\n        return function (fb) {\n            return mkAp(fba)(fb);\n        };\n    },\n    Functor0: function () {\n        return functorFreeAp;\n    }\n};\nvar applicativeFreeAp = /* #__PURE__ */ (function () {\n    return {\n        pure: Pure.create,\n        Apply0: function () {\n            return applyFreeAp;\n        }\n    };\n})();\nvar foldFreeAp1 = /* #__PURE__ */ foldFreeAp(applicativeFreeAp);\nvar hoistFreeAp = function (f) {\n    return foldFreeAp1(function ($54) {\n        return liftFreeAp(f($54));\n    });\n};\nvar analyzeFreeAp = function (dictMonoid) {\n    var foldFreeAp2 = foldFreeAp(Data_Const.applicativeConst(dictMonoid));\n    return function (k) {\n        var $55 = foldFreeAp2(function ($57) {\n            return Data_Const.Const(k($57));\n        });\n        return function ($56) {\n            return unwrap($55($56));\n        };\n    };\n};\nexport {\n    liftFreeAp,\n    retractFreeAp,\n    foldFreeAp,\n    hoistFreeAp,\n    analyzeFreeAp,\n    functorFreeAp,\n    applyFreeAp,\n    applicativeFreeAp\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar map = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);\nvar CatQueue = /* #__PURE__ */ (function () {\n    function CatQueue(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    CatQueue.create = function (value0) {\n        return function (value1) {\n            return new CatQueue(value0, value1);\n        };\n    };\n    return CatQueue;\n})();\nvar unsnoc = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v.value1 instanceof Data_List_Types.Cons) {\n            $tco_done = true;\n            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value1.value0, new CatQueue(v.value0, v.value1.value1)));\n        };\n        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v.value1 instanceof Data_List_Types.Nil) {\n            $copy_v = new CatQueue(Data_List_Types.Nil.value, Data_List.reverse(v.value0));\n            return;\n        };\n        throw new Error(\"Failed pattern match at Data.CatQueue (line 92, column 1 - line 92, column 63): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar uncons = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v.value0 instanceof Data_List_Types.Nil) {\n            $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);\n            return;\n        };\n        if (v.value0 instanceof Data_List_Types.Cons) {\n            $tco_done = true;\n            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));\n        };\n        throw new Error(\"Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar snoc = function (v) {\n    return function (a) {\n        return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));\n    };\n};\nvar showCatQueue = function (dictShow) {\n    var show = Data_Show.show(Data_List_Types.showList(dictShow));\n    return {\n        show: function (v) {\n            return \"(CatQueue \" + (show(v.value0) + (\" \" + (show(v.value1) + \")\")));\n        }\n    };\n};\nvar $$null = function (v) {\n    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n        return true;\n    };\n    return false;\n};\nvar length = function (v) {\n    return Data_List.length(v.value0) + Data_List.length(v.value1) | 0;\n};\nvar functorCatQueue = {\n    map: function (f) {\n        return function (v) {\n            return new CatQueue(map(f)(v.value0), map(f)(v.value1));\n        };\n    }\n};\nvar foldableCatQueue = {\n    foldMap: function (dictMonoid) {\n        return Data_Foldable.foldMapDefaultL(foldableCatQueue)(dictMonoid);\n    },\n    foldr: function (f) {\n        return Data_Foldable.foldrDefault(foldableCatQueue)(f);\n    },\n    foldl: function (f) {\n        var go = function ($copy_acc) {\n            return function ($copy_q) {\n                var $tco_var_acc = $copy_acc;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(acc, q) {\n                    var v = uncons(q);\n                    if (v instanceof Data_Maybe.Just) {\n                        $tco_var_acc = f(acc)(v.value0.value0);\n                        $copy_q = v.value0.value1;\n                        return;\n                    };\n                    if (v instanceof Data_Maybe.Nothing) {\n                        $tco_done = true;\n                        return acc;\n                    };\n                    throw new Error(\"Failed pattern match at Data.CatQueue (line 147, column 16 - line 149, column 22): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_acc, $copy_q);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    }\n};\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(foldableCatQueue);\nvar semigroupCatQueue = {\n    append: /* #__PURE__ */ foldl(snoc)\n};\nvar empty = /* #__PURE__ */ (function () {\n    return new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);\n})();\nvar monoidCatQueue = {\n    mempty: empty,\n    Semigroup0: function () {\n        return semigroupCatQueue;\n    }\n};\nvar singleton = /* #__PURE__ */ snoc(empty);\nvar fromFoldable = function (dictFoldable) {\n    var foldMap = Data_Foldable.foldMap(dictFoldable)(monoidCatQueue);\n    return function (f) {\n        return foldMap(singleton)(f);\n    };\n};\nvar traversableCatQueue = {\n    traverse: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var $123 = map1(foldl(snoc)(empty));\n            var $124 = foldl(function (acc) {\n                var $126 = lift2(snoc)(acc);\n                return function ($127) {\n                    return $126(f($127));\n                };\n            })(pure(empty));\n            return function ($125) {\n                return $123($124($125));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.sequenceDefault(traversableCatQueue)(dictApplicative);\n    },\n    Functor0: function () {\n        return functorCatQueue;\n    },\n    Foldable1: function () {\n        return foldableCatQueue;\n    }\n};\nvar unfoldable1CatQueue = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return snoc(memo)(v.value0);\n                        };\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = snoc(memo)(v.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatQueue (line 154, column 24 - line 156, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(empty);\n        };\n    }\n};\nvar unfoldableCatQueue = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return memo;\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = snoc(memo)(v.value0.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatQueue (line 161, column 24 - line 163, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(empty);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1CatQueue;\n    }\n};\nvar cqEq = function (dictEq) {\n    var elemEq = Data_Eq.eq(dictEq);\n    var go = function ($copy_xs) {\n        return function ($copy_ys) {\n            var $tco_var_xs = $copy_xs;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(xs, ys) {\n                var v = uncons(ys);\n                var v1 = uncons(xs);\n                if (v1 instanceof Data_Maybe.Just && (v instanceof Data_Maybe.Just && elemEq(v1.value0.value0)(v.value0.value0))) {\n                    $tco_var_xs = v1.value0.value1;\n                    $copy_ys = v.value0.value1;\n                    return;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return true;\n                };\n                $tco_done = true;\n                return false;\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar eqCatQueue = function (dictEq) {\n    return {\n        eq: cqEq(dictEq)\n    };\n};\nvar cqCompare = function (dictOrd) {\n    var elemCompare = Data_Ord.compare(dictOrd);\n    var go = function ($copy_xs) {\n        return function ($copy_ys) {\n            var $tco_var_xs = $copy_xs;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(xs, ys) {\n                var v = uncons(ys);\n                var v1 = uncons(xs);\n                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just) {\n                    var v2 = elemCompare(v1.value0.value0)(v.value0.value0);\n                    if (v2 instanceof Data_Ordering.EQ) {\n                        $tco_var_xs = v1.value0.value1;\n                        $copy_ys = v.value0.value1;\n                        return;\n                    };\n                    $tco_done = true;\n                    return v2;\n                };\n                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Ordering.GT.value;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Just) {\n                    $tco_done = true;\n                    return Data_Ordering.LT.value;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Ordering.EQ.value;\n                };\n                throw new Error(\"Failed pattern match at Data.CatQueue (line 117, column 16 - line 124, column 30): \" + [ v1.constructor.name, v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar ordCatQueue = function (dictOrd) {\n    var eqCatQueue1 = eqCatQueue(dictOrd.Eq0());\n    return {\n        compare: cqCompare(dictOrd),\n        Eq0: function () {\n            return eqCatQueue1;\n        }\n    };\n};\nvar cons = function (a) {\n    return function (v) {\n        return new CatQueue(new Data_List_Types.Cons(a, v.value0), v.value1);\n    };\n};\nvar monadCatQueue = {\n    Applicative0: function () {\n        return applicativeCatQueue;\n    },\n    Bind1: function () {\n        return bindCatQueue;\n    }\n};\nvar bindCatQueue = {\n    bind: /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ Data_Foldable.foldMap(foldableCatQueue)(monoidCatQueue)),\n    Apply0: function () {\n        return $lazy_applyCatQueue(0);\n    }\n};\nvar applicativeCatQueue = {\n    pure: singleton,\n    Apply0: function () {\n        return $lazy_applyCatQueue(0);\n    }\n};\nvar $lazy_applyCatQueue = /* #__PURE__ */ $runtime_lazy(\"applyCatQueue\", \"Data.CatQueue\", function () {\n    return {\n        apply: Control_Monad.ap(monadCatQueue),\n        Functor0: function () {\n            return functorCatQueue;\n        }\n    };\n});\nvar applyCatQueue = /* #__PURE__ */ $lazy_applyCatQueue(174);\nvar altCatQueue = {\n    alt: /* #__PURE__ */ Data_Semigroup.append(semigroupCatQueue),\n    Functor0: function () {\n        return functorCatQueue;\n    }\n};\nvar plusCatQueue = {\n    empty: empty,\n    Alt0: function () {\n        return altCatQueue;\n    }\n};\nvar alternativeCatQueue = {\n    Applicative0: function () {\n        return applicativeCatQueue;\n    },\n    Plus1: function () {\n        return plusCatQueue;\n    }\n};\nvar monadPlusCatQueue = {\n    Monad0: function () {\n        return monadCatQueue;\n    },\n    Alternative1: function () {\n        return alternativeCatQueue;\n    }\n};\nexport {\n    CatQueue,\n    empty,\n    $$null as null,\n    singleton,\n    length,\n    cons,\n    snoc,\n    uncons,\n    unsnoc,\n    fromFoldable,\n    eqCatQueue,\n    ordCatQueue,\n    semigroupCatQueue,\n    monoidCatQueue,\n    showCatQueue,\n    foldableCatQueue,\n    unfoldable1CatQueue,\n    unfoldableCatQueue,\n    traversableCatQueue,\n    functorCatQueue,\n    applyCatQueue,\n    applicativeCatQueue,\n    bindCatQueue,\n    monadCatQueue,\n    altCatQueue,\n    plusCatQueue,\n    alternativeCatQueue,\n    monadPlusCatQueue\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_CatQueue from \"../Data.CatQueue/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar CatNil = /* #__PURE__ */ (function () {\n    function CatNil() {\n\n    };\n    CatNil.value = new CatNil();\n    return CatNil;\n})();\nvar CatCons = /* #__PURE__ */ (function () {\n    function CatCons(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    CatCons.create = function (value0) {\n        return function (value1) {\n            return new CatCons(value0, value1);\n        };\n    };\n    return CatCons;\n})();\nvar showCatList = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof CatNil) {\n                return \"CatNil\";\n            };\n            if (v instanceof CatCons) {\n                return \"(CatList \" + (show(v.value0) + (\" \" + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + \")\")));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 147, column 1 - line 149, column 71): \" + [ v.constructor.name ]);\n        }\n    };\n};\nvar $$null = function (v) {\n    if (v instanceof CatNil) {\n        return true;\n    };\n    return false;\n};\nvar link = function (v) {\n    return function (v1) {\n        if (v instanceof CatNil) {\n            return v1;\n        };\n        if (v1 instanceof CatNil) {\n            return v;\n        };\n        if (v instanceof CatCons) {\n            return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));\n        };\n        throw new Error(\"Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar foldr = function (k) {\n    return function (b) {\n        return function (q) {\n            var foldl = function ($copy_v) {\n                return function ($copy_v1) {\n                    return function ($copy_v2) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_var_v1 = $copy_v1;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1, v2) {\n                            if (v2 instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v1;\n                            };\n                            if (v2 instanceof Data_List_Types.Cons) {\n                                $tco_var_v = v;\n                                $tco_var_v1 = v(v1)(v2.value0);\n                                $copy_v2 = v2.value1;\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                        };\n                        return $tco_result;\n                    };\n                };\n            };\n            var go = function ($copy_xs) {\n                return function ($copy_ys) {\n                    var $tco_var_xs = $copy_xs;\n                    var $tco_done1 = false;\n                    var $tco_result;\n                    function $tco_loop(xs, ys) {\n                        var v = Data_CatQueue.uncons(xs);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done1 = true;\n                            return foldl(function (x) {\n                                return function (i) {\n                                    return i(x);\n                                };\n                            })(b)(ys);\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_xs = v.value0.value1;\n                            $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done1) {\n                        $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(q)(Data_List_Types.Nil.value);\n        };\n    };\n};\nvar uncons = function (v) {\n    if (v instanceof CatNil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof CatCons) {\n        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {\n            var $66 = Data_CatQueue[\"null\"](v.value1);\n            if ($66) {\n                return CatNil.value;\n            };\n            return foldr(link)(CatNil.value)(v.value1);\n        })()));\n    };\n    throw new Error(\"Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): \" + [ v.constructor.name ]);\n};\nvar foldableCatList = {\n    foldMap: function (dictMonoid) {\n        return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);\n    },\n    foldr: function (f) {\n        return function (s) {\n            return function (l) {\n                return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);\n            };\n        };\n    },\n    foldl: function (f) {\n        var go = function ($copy_acc) {\n            return function ($copy_q) {\n                var $tco_var_acc = $copy_acc;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(acc, q) {\n                    var v = uncons(q);\n                    if (v instanceof Data_Maybe.Just) {\n                        $tco_var_acc = f(acc)(v.value0.value0);\n                        $copy_q = v.value0.value1;\n                        return;\n                    };\n                    if (v instanceof Data_Maybe.Nothing) {\n                        $tco_done = true;\n                        return acc;\n                    };\n                    throw new Error(\"Failed pattern match at Data.CatList (line 156, column 16 - line 158, column 22): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_acc, $copy_q);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    }\n};\nvar length = /* #__PURE__ */ Data_Foldable.length(foldableCatList)(Data_Semiring.semiringInt);\nvar foldMap = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n    return function (v) {\n        return function (v1) {\n            if (v1 instanceof CatNil) {\n                return mempty;\n            };\n            if (v1 instanceof CatCons) {\n                var d = (function () {\n                    var $75 = Data_CatQueue[\"null\"](v1.value1);\n                    if ($75) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v1.value1);\n                })();\n                return append2(v(v1.value0))(foldMap(dictMonoid)(v)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 134, column 1 - line 134, column 62): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar empty = /* #__PURE__ */ (function () {\n    return CatNil.value;\n})();\nvar append = link;\nvar cons = function (a) {\n    return function (cat) {\n        return append(new CatCons(a, Data_CatQueue.empty))(cat);\n    };\n};\nvar functorCatList = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof CatNil) {\n                return CatNil.value;\n            };\n            if (v1 instanceof CatCons) {\n                var d = (function () {\n                    var $80 = Data_CatQueue[\"null\"](v1.value1);\n                    if ($80) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v1.value1);\n                })();\n                return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 184, column 1 - line 188, column 26): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar singleton = function (a) {\n    return cons(a)(CatNil.value);\n};\nvar traversableCatList = {\n    traverse: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof CatNil) {\n                    return pure(CatNil.value);\n                };\n                if (v1 instanceof CatCons) {\n                    var d = (function () {\n                        var $85 = Data_CatQueue[\"null\"](v1.value1);\n                        if ($85) {\n                            return CatNil.value;\n                        };\n                        return foldr(link)(CatNil.value)(v1.value1);\n                    })();\n                    return apply(map(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));\n                };\n                throw new Error(\"Failed pattern match at Data.CatList (line 174, column 1 - line 182, column 33): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        return function (v) {\n            if (v instanceof CatNil) {\n                return pure(CatNil.value);\n            };\n            if (v instanceof CatCons) {\n                var d = (function () {\n                    var $89 = Data_CatQueue[\"null\"](v.value1);\n                    if ($89) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v.value1);\n                })();\n                return apply(map(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 174, column 1 - line 182, column 33): \" + [ v.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorCatList;\n    },\n    Foldable1: function () {\n        return foldableCatList;\n    }\n};\nvar semigroupCatList = {\n    append: append\n};\nvar monoidCatList = /* #__PURE__ */ (function () {\n    return {\n        mempty: CatNil.value,\n        Semigroup0: function () {\n            return semigroupCatList;\n        }\n    };\n})();\nvar monadCatList = {\n    Applicative0: function () {\n        return applicativeCatList;\n    },\n    Bind1: function () {\n        return bindCatList;\n    }\n};\nvar bindCatList = {\n    bind: /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ foldMap(monoidCatList)),\n    Apply0: function () {\n        return $lazy_applyCatList(0);\n    }\n};\nvar applicativeCatList = {\n    pure: singleton,\n    Apply0: function () {\n        return $lazy_applyCatList(0);\n    }\n};\nvar $lazy_applyCatList = /* #__PURE__ */ $runtime_lazy(\"applyCatList\", \"Data.CatList\", function () {\n    return {\n        apply: Control_Monad.ap(monadCatList),\n        Functor0: function () {\n            return functorCatList;\n        }\n    };\n});\nvar applyCatList = /* #__PURE__ */ $lazy_applyCatList(190);\nvar fromFoldable = function (dictFoldable) {\n    var foldMap1 = Data_Foldable.foldMap(dictFoldable)(monoidCatList);\n    return function (f) {\n        return foldMap1(singleton)(f);\n    };\n};\nvar snoc = function (cat) {\n    return function (a) {\n        return append(cat)(new CatCons(a, Data_CatQueue.empty));\n    };\n};\nvar unfoldable1CatList = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return snoc(memo)(v.value0);\n                        };\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = snoc(memo)(v.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 170, column 24 - line 172, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(CatNil.value);\n        };\n    }\n};\nvar unfoldableCatList = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return memo;\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = snoc(memo)(v.value0.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 163, column 24 - line 165, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(CatNil.value);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1CatList;\n    }\n};\nvar altCatList = {\n    alt: append,\n    Functor0: function () {\n        return functorCatList;\n    }\n};\nvar plusCatList = {\n    empty: empty,\n    Alt0: function () {\n        return altCatList;\n    }\n};\nvar alternativeCatList = {\n    Applicative0: function () {\n        return applicativeCatList;\n    },\n    Plus1: function () {\n        return plusCatList;\n    }\n};\nvar monadPlusCatList = {\n    Monad0: function () {\n        return monadCatList;\n    },\n    Alternative1: function () {\n        return alternativeCatList;\n    }\n};\nexport {\n    CatNil,\n    CatCons,\n    empty,\n    $$null as null,\n    singleton,\n    length,\n    append,\n    cons,\n    snoc,\n    uncons,\n    fromFoldable,\n    semigroupCatList,\n    monoidCatList,\n    showCatList,\n    foldableCatList,\n    unfoldableCatList,\n    unfoldable1CatList,\n    traversableCatList,\n    functorCatList,\n    applyCatList,\n    applicativeCatList,\n    bindCatList,\n    monadCatList,\n    altCatList,\n    plusCatList,\n    alternativeCatList,\n    monadPlusCatList\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Data_CatList from \"../Data.CatList/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_CatList.semigroupCatList);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar ExpF = function (x) {\n    return x;\n};\nvar Free = /* #__PURE__ */ (function () {\n    function Free(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Free.create = function (value0) {\n        return function (value1) {\n            return new Free(value0, value1);\n        };\n    };\n    return Free;\n})();\nvar Return = /* #__PURE__ */ (function () {\n    function Return(value0) {\n        this.value0 = value0;\n    };\n    Return.create = function (value0) {\n        return new Return(value0);\n    };\n    return Return;\n})();\nvar Bind = /* #__PURE__ */ (function () {\n    function Bind(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Bind.create = function (value0) {\n        return function (value1) {\n            return new Bind(value0, value1);\n        };\n    };\n    return Bind;\n})();\nvar toView = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        var runExpF = function (v2) {\n            return v2;\n        };\n        var concatF = function (v2) {\n            return function (r) {\n                return new Free(v2.value0, append(v2.value1)(r));\n            };\n        };\n        if (v.value0 instanceof Return) {\n            var v2 = Data_CatList.uncons(v.value1);\n            if (v2 instanceof Data_Maybe.Nothing) {\n                $tco_done = true;\n                return new Return(v.value0.value0);\n            };\n            if (v2 instanceof Data_Maybe.Just) {\n                $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);\n                return;\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): \" + [ v2.constructor.name ]);\n        };\n        if (v.value0 instanceof Bind) {\n            $tco_done = true;\n            return new Bind(v.value0.value0, function (a) {\n                return concatF(v.value0.value1(a))(v.value1);\n            });\n        };\n        throw new Error(\"Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): \" + [ v.value0.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar runFreeM = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (dictMonadRec) {\n        var Monad0 = dictMonadRec.Monad0();\n        var map2 = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n        var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n        var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n        return function (k) {\n            var go = function (f) {\n                var v = toView(f);\n                if (v instanceof Return) {\n                    return map2(Control_Monad_Rec_Class.Done.create)(pure1(v.value0));\n                };\n                if (v instanceof Bind) {\n                    return map2(Control_Monad_Rec_Class.Loop.create)(k(map1(v.value1)(v.value0)));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 194, column 10 - line 196, column 37): \" + [ v.constructor.name ]);\n            };\n            return tailRecM(go);\n        };\n    };\n};\nvar runFree = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (k) {\n        var go = function ($copy_f) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(f) {\n                var v = toView(f);\n                if (v instanceof Return) {\n                    $tco_done = true;\n                    return v.value0;\n                };\n                if (v instanceof Bind) {\n                    $copy_f = k(map1(v.value1)(v.value0));\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 178, column 10 - line 180, column 33): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_f);\n            };\n            return $tco_result;\n        };\n        return go;\n    };\n};\nvar resume$prime = function (k) {\n    return function (j) {\n        return function (f) {\n            var v = toView(f);\n            if (v instanceof Return) {\n                return j(v.value0);\n            };\n            if (v instanceof Bind) {\n                return k(v.value0)(v.value1);\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 213, column 17 - line 215, column 20): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar resume = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return resume$prime(function (g) {\n        return function (i) {\n            return new Data_Either.Left(map1(i)(g));\n        };\n    })(Data_Either.Right.create);\n};\nvar fromView = function (f) {\n    return new Free(f, Data_CatList.empty);\n};\nvar wrap = function (f) {\n    return fromView(new Bind(f, Unsafe_Coerce.unsafeCoerce));\n};\nvar suspendF = function (dictApplicative) {\n    var pure1 = Control_Applicative.pure(dictApplicative);\n    return function (f) {\n        return wrap(pure1(f));\n    };\n};\nvar freeMonad = {\n    Applicative0: function () {\n        return freeApplicative;\n    },\n    Bind1: function () {\n        return freeBind;\n    }\n};\nvar freeFunctor = {\n    map: function (k) {\n        return function (f) {\n            return Control_Bind.bindFlipped(freeBind)((function () {\n                var $189 = Control_Applicative.pure(freeApplicative);\n                return function ($190) {\n                    return $189(k($190));\n                };\n            })())(f);\n        };\n    }\n};\nvar freeBind = {\n    bind: function (v) {\n        return function (k) {\n            return new Free(v.value0, Data_CatList.snoc(v.value1)(k));\n        };\n    },\n    Apply0: function () {\n        return $lazy_freeApply(0);\n    }\n};\nvar freeApplicative = {\n    pure: function ($191) {\n        return fromView(Return.create($191));\n    },\n    Apply0: function () {\n        return $lazy_freeApply(0);\n    }\n};\nvar $lazy_freeApply = /* #__PURE__ */ $runtime_lazy(\"freeApply\", \"Control.Monad.Free\", function () {\n    return {\n        apply: Control_Monad.ap(freeMonad),\n        Functor0: function () {\n            return freeFunctor;\n        }\n    };\n});\nvar freeApply = /* #__PURE__ */ $lazy_freeApply(77);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(freeApply);\nvar bind = /* #__PURE__ */ Control_Bind.bind(freeBind);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(freeApplicative);\nvar join = /* #__PURE__ */ Control_Bind.join(freeBind);\nvar semigroupFree = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar freeMonadRec = {\n    tailRecM: function (k) {\n        return function (a) {\n            return bind(k(a))(function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Loop) {\n                    return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);\n                };\n                if (v instanceof Control_Monad_Rec_Class.Done) {\n                    return pure(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 86, column 26 - line 88, column 21): \" + [ v.constructor.name ]);\n            });\n        };\n    },\n    Monad0: function () {\n        return freeMonad;\n    }\n};\nvar liftF = function (f) {\n    return fromView(new Bind(f, function ($192) {\n        return pure($192);\n    }));\n};\nvar freeMonadTrans = {\n    lift: function (dictMonad) {\n        return liftF;\n    }\n};\nvar monoidFree = function (dictMonoid) {\n    var semigroupFree1 = semigroupFree(dictMonoid.Semigroup0());\n    return {\n        mempty: pure(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupFree1;\n        }\n    };\n};\nvar substFree = function (k) {\n    var go = function (f) {\n        var v = toView(f);\n        if (v instanceof Return) {\n            return pure(v.value0);\n        };\n        if (v instanceof Bind) {\n            return bind(k(v.value0))(map(go)(v.value1));\n        };\n        throw new Error(\"Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): \" + [ v.constructor.name ]);\n    };\n    return go;\n};\nvar hoistFree = function (k) {\n    return substFree(function ($193) {\n        return liftF(k($193));\n    });\n};\nvar foldableFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    return function (dictFoldable) {\n        var foldMap = Data_Foldable.foldMap(dictFoldable);\n        var foldl = Data_Foldable.foldl(dictFoldable);\n        var foldr = Data_Foldable.foldr(dictFoldable);\n        return {\n            foldMap: function (dictMonoid) {\n                var foldMap1 = foldMap(dictMonoid);\n                return function (f) {\n                    var $lazy_go = $runtime_lazy(\"go\", \"Control.Monad.Free\", function () {\n                        return function ($194) {\n                            return (function (v) {\n                                if (v instanceof Data_Either.Left) {\n                                    return foldMap1($lazy_go(94))(v.value0);\n                                };\n                                if (v instanceof Data_Either.Right) {\n                                    return f(v.value0);\n                                };\n                                throw new Error(\"Failed pattern match at Control.Monad.Free (line 93, column 21 - line 95, column 21): \" + [ v.constructor.name ]);\n                            })(resume1($194));\n                        };\n                    });\n                    var go = $lazy_go(93);\n                    return go;\n                };\n            },\n            foldl: function (f) {\n                var go = function (r) {\n                    return function ($195) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return foldl(go)(r)(v.value0);\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return f(r)(v.value0);\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 98, column 23 - line 100, column 23): \" + [ v.constructor.name ]);\n                        })(resume1($195));\n                    };\n                };\n                return go;\n            },\n            foldr: function (f) {\n                var go = function (r) {\n                    return function ($196) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return foldr(Data_Function.flip(go))(r)(v.value0);\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return f(v.value0)(r);\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 103, column 23 - line 105, column 23): \" + [ v.constructor.name ]);\n                        })(resume1($196));\n                    };\n                };\n                return go;\n            }\n        };\n    };\n};\nvar traversableFree = function (dictTraversable) {\n    var Functor0 = dictTraversable.Functor0();\n    var resume1 = resume(Functor0);\n    var traverse = Data_Traversable.traverse(dictTraversable);\n    var foldableFree1 = foldableFree(Functor0)(dictTraversable.Foldable1());\n    return {\n        traverse: function (dictApplicative) {\n            var map1 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return function (f) {\n                var $lazy_go = $runtime_lazy(\"go\", \"Control.Monad.Free\", function () {\n                    return function ($197) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return map1(function ($198) {\n                                    return join(liftF($198));\n                                })(traverse1($lazy_go(111))(v.value0));\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return map1(pure)(f(v.value0));\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 110, column 21 - line 112, column 30): \" + [ v.constructor.name ]);\n                        })(resume1($197));\n                    };\n                });\n                var go = $lazy_go(110);\n                return go;\n            };\n        },\n        sequence: function (dictApplicative) {\n            return function (tma) {\n                return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(identity)(tma);\n            };\n        },\n        Functor0: function () {\n            return freeFunctor;\n        },\n        Foldable1: function () {\n            return foldableFree1;\n        }\n    };\n};\nvar foldFree = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var map1 = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n    var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    return function (k) {\n        var go = function (f) {\n            var v = toView(f);\n            if (v instanceof Return) {\n                return map1(Control_Monad_Rec_Class.Done.create)(pure1(v.value0));\n            };\n            if (v instanceof Bind) {\n                return map1(function ($199) {\n                    return Control_Monad_Rec_Class.Loop.create(v.value1($199));\n                })(k(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): \" + [ v.constructor.name ]);\n        };\n        return tailRecM(go);\n    };\n};\nvar eqFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq1(dictEq1);\n        return function (dictEq) {\n            var eq = Data_Eq.eq(dictEq);\n            return {\n                eq: function (x) {\n                    return function (y) {\n                        var v = resume1(y);\n                        var v1 = resume1(x);\n                        if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {\n                            return eq1(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);\n                        };\n                        if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {\n                            return eq(v1.value0)(v.value0);\n                        };\n                        return false;\n                    };\n                }\n            };\n        };\n    };\n};\nvar ordFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    var eqFree1 = eqFree(dictFunctor);\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare1(dictOrd1);\n        var eqFree2 = eqFree1(dictOrd1.Eq10());\n        return function (dictOrd) {\n            var compare = Data_Ord.compare(dictOrd);\n            var eqFree3 = eqFree2(dictOrd.Eq0());\n            return {\n                compare: function (x) {\n                    return function (y) {\n                        var v = resume1(y);\n                        var v1 = resume1(x);\n                        if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {\n                            return compare1(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);\n                        };\n                        if (v1 instanceof Data_Either.Left) {\n                            return Data_Ordering.LT.value;\n                        };\n                        if (v instanceof Data_Either.Left) {\n                            return Data_Ordering.GT.value;\n                        };\n                        if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {\n                            return compare(v1.value0)(v.value0);\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Free (line 56, column 17 - line 60, column 36): \" + [ v1.constructor.name, v.constructor.name ]);\n                    };\n                },\n                Eq0: function () {\n                    return eqFree3;\n                }\n            };\n        };\n    };\n};\nvar eq1Free = function (dictFunctor) {\n    var eqFree1 = eqFree(dictFunctor);\n    return function (dictEq1) {\n        var eqFree2 = eqFree1(dictEq1);\n        return {\n            eq1: function (dictEq) {\n                return Data_Eq.eq(eqFree2(dictEq));\n            }\n        };\n    };\n};\nvar ord1Free = function (dictFunctor) {\n    var ordFree1 = ordFree(dictFunctor);\n    var eq1Free1 = eq1Free(dictFunctor);\n    return function (dictOrd1) {\n        var ordFree2 = ordFree1(dictOrd1);\n        var eq1Free2 = eq1Free1(dictOrd1.Eq10());\n        return {\n            compare1: function (dictOrd) {\n                return Data_Ord.compare(ordFree2(dictOrd));\n            },\n            Eq10: function () {\n                return eq1Free2;\n            }\n        };\n    };\n};\nexport {\n    suspendF,\n    wrap,\n    liftF,\n    hoistFree,\n    foldFree,\n    substFree,\n    runFree,\n    runFreeM,\n    resume,\n    resume$prime,\n    eqFree,\n    eq1Free,\n    ordFree,\n    ord1Free,\n    freeFunctor,\n    freeBind,\n    freeApplicative,\n    freeApply,\n    freeMonad,\n    freeMonadTrans,\n    freeMonadRec,\n    foldableFree,\n    traversableFree,\n    semigroupFree,\n    monoidFree\n};\n","// Generated by purs version 0.15.7\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar ChildQuery = /* #__PURE__ */ (function () {\n    function ChildQuery(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    ChildQuery.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new ChildQuery(value0, value1, value2);\n            };\n        };\n    };\n    return ChildQuery;\n})();\nvar unChildQueryBox = Unsafe_Coerce.unsafeCoerce;\nvar mkChildQueryBox = Unsafe_Coerce.unsafeCoerce;\nvar functorChildQuery = {\n    map: function (f) {\n        return unChildQueryBox(function (v) {\n            return mkChildQueryBox(new ChildQuery(function (dictApplicative) {\n                return v.value0(dictApplicative);\n            }, v.value1, function ($8) {\n                return f(v.value2($8));\n            }));\n        });\n    }\n};\nexport {\n    ChildQuery,\n    mkChildQueryBox,\n    unChildQueryBox,\n    functorChildQuery\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nvar UnsafeRefEqFallback = function (x) {\n    return x;\n};\nvar UnsafeRefEq = function (x) {\n    return x;\n};\nvar unsafeRefEq = $foreign.reallyUnsafeRefEq;\nvar eqUnsafeRefEqFallback = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return {\n        eq: function (v) {\n            return function (v1) {\n                return unsafeRefEq(v)(v1) || eq(v)(v1);\n            };\n        }\n    };\n};\nvar eqUnsafeRefEq = {\n    eq: function (v) {\n        return function (v1) {\n            return unsafeRefEq(v)(v1);\n        };\n    }\n};\nexport {\n    reallyUnsafeRefEq\n} from \"./foreign.js\";\nexport {\n    unsafeRefEq,\n    UnsafeRefEq,\n    UnsafeRefEqFallback,\n    eqUnsafeRefEq,\n    eqUnsafeRefEqFallback\n};\n","export function reallyUnsafeRefEq(a) {\n  return function (b) {\n    return a === b;\n  };\n}\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Effect_Unsafe from \"../Effect.Unsafe/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nimport * as Unsafe_Reference from \"../Unsafe.Reference/index.js\";\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar bind = /* #__PURE__ */ Control_Bind.bind(Effect.bindEffect);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect);\nvar traverse_1 = /* #__PURE__ */ traverse_(Data_Foldable.foldableArray);\nvar applySecond = /* #__PURE__ */ Control_Apply.applySecond(Effect.applyEffect);\nvar traverse_2 = /* #__PURE__ */ traverse_(Data_Foldable.foldableMaybe);\nvar Subscription = function (x) {\n    return x;\n};\nvar Listener = function (x) {\n    return x;\n};\nvar Emitter = function (x) {\n    return x;\n};\nvar unsubscribe = function (v) {\n    return v;\n};\nvar subscribe = function (v) {\n    return function (k) {\n        return v(function ($76) {\n            return $$void(k($76));\n        });\n    };\n};\nvar semigroupSubscription = /* #__PURE__ */ Effect.semigroupEffect(Data_Semigroup.semigroupUnit);\nvar notify = function (v) {\n    return function (a) {\n        return v(a);\n    };\n};\nvar monoidSubscription = /* #__PURE__ */ Effect.monoidEffect(Data_Monoid.monoidUnit);\nvar mempty = /* #__PURE__ */ Data_Monoid.mempty(/* #__PURE__ */ Data_Monoid.monoidFn(/* #__PURE__ */ Effect.monoidEffect(monoidSubscription)));\nvar makeEmitter = coerce;\nvar functorEmitter = {\n    map: function (f) {\n        return function (v) {\n            return function (k) {\n                return v(function ($77) {\n                    return k(f($77));\n                });\n            };\n        };\n    }\n};\nvar fold = function (f) {\n    return function (v) {\n        return function (b) {\n            return function (k) {\n                return function __do() {\n                    var result = Effect_Ref[\"new\"](b)();\n                    return v(function (a) {\n                        return bind(Effect_Ref.modify(f(a))(result))(k);\n                    })();\n                };\n            };\n        };\n    };\n};\nvar filter = function (p) {\n    return function (v) {\n        return function (k) {\n            return v(function (a) {\n                var $57 = p(a);\n                if ($57) {\n                    return k(a);\n                };\n                return pure(Data_Unit.unit);\n            });\n        };\n    };\n};\nvar create = function __do() {\n    var subscribers = Effect_Ref[\"new\"]([  ])();\n    return {\n        emitter: function (k) {\n            return function __do() {\n                Effect_Ref.modify_(function (v) {\n                    return append(v)([ k ]);\n                })(subscribers)();\n                return Effect_Ref.modify_(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(subscribers);\n            };\n        },\n        listener: function (a) {\n            return bind(Effect_Ref.read(subscribers))(traverse_1(function (k) {\n                return k(a);\n            }));\n        }\n    };\n};\nvar fix = function (f) {\n    var v = Effect_Unsafe.unsafePerformEffect(create);\n    var v1 = f(v.emitter);\n    return function (k) {\n        return function __do() {\n            var v2 = subscribe(v1.input)(notify(v.listener))();\n            var v3 = subscribe(v1.output)(k)();\n            return applySecond(v2)(v3);\n        };\n    };\n};\nvar contravariantListener = {\n    cmap: function (f) {\n        return function (v) {\n            return coerce(function ($78) {\n                return v(f($78));\n            });\n        };\n    }\n};\nvar applyEmitter = {\n    apply: function (v) {\n        return function (v1) {\n            return function (k) {\n                return function __do() {\n                    var latestA = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n                    var latestB = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n                    var v2 = v(function (a) {\n                        return function __do() {\n                            Effect_Ref.write(new Data_Maybe.Just(a))(latestA)();\n                            return bind(Effect_Ref.read(latestB))(traverse_2(function ($79) {\n                                return k(a($79));\n                            }))();\n                        };\n                    })();\n                    var v3 = v1(function (b) {\n                        return function __do() {\n                            Effect_Ref.write(new Data_Maybe.Just(b))(latestB)();\n                            return bind(Effect_Ref.read(latestA))(traverse_2(function ($80) {\n                                return k((function (v3) {\n                                    return v3(b);\n                                })($80));\n                            }))();\n                        };\n                    })();\n                    return applySecond(v2)(v3);\n                };\n            };\n        };\n    },\n    Functor0: function () {\n        return functorEmitter;\n    }\n};\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyEmitter);\nvar semigroupEmitter = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidEmitter = function (dictMonoid) {\n    var semigroupEmitter1 = semigroupEmitter(dictMonoid.Semigroup0());\n    return {\n        mempty: mempty,\n        Semigroup0: function () {\n            return semigroupEmitter1;\n        }\n    };\n};\nvar applicativeEmitter = {\n    pure: function (a) {\n        return function (k) {\n            return function __do() {\n                k(a)();\n                return pure(Data_Unit.unit);\n            };\n        };\n    },\n    Apply0: function () {\n        return applyEmitter;\n    }\n};\nvar altEmitter = {\n    alt: function (v) {\n        return function (v1) {\n            return function (k) {\n                return function __do() {\n                    var v2 = v(k)();\n                    var v3 = v1(k)();\n                    return applySecond(v2)(v3);\n                };\n            };\n        };\n    },\n    Functor0: function () {\n        return functorEmitter;\n    }\n};\nvar plusEmitter = {\n    empty: function (v) {\n        return pure(pure(Data_Unit.unit));\n    },\n    Alt0: function () {\n        return altEmitter;\n    }\n};\nvar alternativeEmitter = {\n    Applicative0: function () {\n        return applicativeEmitter;\n    },\n    Plus1: function () {\n        return plusEmitter;\n    }\n};\nexport {\n    create,\n    notify,\n    makeEmitter,\n    subscribe,\n    unsubscribe,\n    fold,\n    filter,\n    fix,\n    functorEmitter,\n    applyEmitter,\n    applicativeEmitter,\n    altEmitter,\n    plusEmitter,\n    alternativeEmitter,\n    semigroupEmitter,\n    monoidEmitter,\n    contravariantListener,\n    semigroupSubscription,\n    monoidSubscription\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Applicative_Free from \"../Control.Applicative.Free/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Free from \"../Control.Monad.Free/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Aff_Class from \"../Effect.Aff.Class/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Halogen_Data_Slot from \"../Halogen.Data.Slot/index.js\";\nimport * as Halogen_Query_ChildQuery from \"../Halogen.Query.ChildQuery/index.js\";\nimport * as Halogen_Subscription from \"../Halogen.Subscription/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar foldrWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(Data_Map_Internal.foldableWithIndexMap);\nvar traverse = /* #__PURE__ */ Data_Traversable.traverse(Data_Map_Internal.traversableMap);\nvar slots = /* #__PURE__ */ Halogen_Data_Slot.slots();\nvar lookup = /* #__PURE__ */ Halogen_Data_Slot.lookup();\nvar over = /* #__PURE__ */ Data_Newtype.over()();\nvar map = /* #__PURE__ */ Data_Functor.map(Halogen_Subscription.functorEmitter);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar lmap = /* #__PURE__ */ Data_Bifunctor.lmap(Data_Bifunctor.bifunctorTuple);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Halogen_Query_ChildQuery.functorChildQuery);\nvar SubscriptionId = function (x) {\n    return x;\n};\nvar ForkId = function (x) {\n    return x;\n};\nvar State = /* #__PURE__ */ (function () {\n    function State(value0) {\n        this.value0 = value0;\n    };\n    State.create = function (value0) {\n        return new State(value0);\n    };\n    return State;\n})();\nvar Subscribe = /* #__PURE__ */ (function () {\n    function Subscribe(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Subscribe.create = function (value0) {\n        return function (value1) {\n            return new Subscribe(value0, value1);\n        };\n    };\n    return Subscribe;\n})();\nvar Unsubscribe = /* #__PURE__ */ (function () {\n    function Unsubscribe(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Unsubscribe.create = function (value0) {\n        return function (value1) {\n            return new Unsubscribe(value0, value1);\n        };\n    };\n    return Unsubscribe;\n})();\nvar Lift = /* #__PURE__ */ (function () {\n    function Lift(value0) {\n        this.value0 = value0;\n    };\n    Lift.create = function (value0) {\n        return new Lift(value0);\n    };\n    return Lift;\n})();\nvar ChildQuery = /* #__PURE__ */ (function () {\n    function ChildQuery(value0) {\n        this.value0 = value0;\n    };\n    ChildQuery.create = function (value0) {\n        return new ChildQuery(value0);\n    };\n    return ChildQuery;\n})();\nvar Raise = /* #__PURE__ */ (function () {\n    function Raise(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Raise.create = function (value0) {\n        return function (value1) {\n            return new Raise(value0, value1);\n        };\n    };\n    return Raise;\n})();\nvar Par = /* #__PURE__ */ (function () {\n    function Par(value0) {\n        this.value0 = value0;\n    };\n    Par.create = function (value0) {\n        return new Par(value0);\n    };\n    return Par;\n})();\nvar Fork = /* #__PURE__ */ (function () {\n    function Fork(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Fork.create = function (value0) {\n        return function (value1) {\n            return new Fork(value0, value1);\n        };\n    };\n    return Fork;\n})();\nvar Join = /* #__PURE__ */ (function () {\n    function Join(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Join.create = function (value0) {\n        return function (value1) {\n            return new Join(value0, value1);\n        };\n    };\n    return Join;\n})();\nvar Kill = /* #__PURE__ */ (function () {\n    function Kill(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Kill.create = function (value0) {\n        return function (value1) {\n            return new Kill(value0, value1);\n        };\n    };\n    return Kill;\n})();\nvar GetRef = /* #__PURE__ */ (function () {\n    function GetRef(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    GetRef.create = function (value0) {\n        return function (value1) {\n            return new GetRef(value0, value1);\n        };\n    };\n    return GetRef;\n})();\nvar HalogenAp = function (x) {\n    return x;\n};\nvar HalogenM = function (x) {\n    return x;\n};\nvar unsubscribe = function (sid) {\n    return Control_Monad_Free.liftF(new Unsubscribe(sid, Data_Unit.unit));\n};\nvar subscribe$prime = function (esc) {\n    return Control_Monad_Free.liftF(new Subscribe(esc, Data_Function[\"const\"](Data_Unit.unit)));\n};\nvar subscribe = function (es) {\n    return Control_Monad_Free.liftF(new Subscribe(function (v) {\n        return es;\n    }, identity));\n};\nvar semigroupHalogenM = function (dictSemigroup) {\n    return Control_Monad_Free.semigroupFree(dictSemigroup);\n};\nvar raise = function (o) {\n    return Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit));\n};\nvar queryAll = function () {\n    return function (dictIsSymbol) {\n        var slots1 = slots(dictIsSymbol);\n        return function (dictOrd) {\n            var slots2 = slots1(dictOrd);\n            return function (label) {\n                return function (q) {\n                    var catMapMaybes = function (dictOrd1) {\n                        var insert = Data_Map_Internal.insert(dictOrd1);\n                        return foldrWithIndex(function (k) {\n                            return function (v) {\n                                return function (acc) {\n                                    return Data_Maybe.maybe(acc)(Data_Function.flip(insert(k))(acc))(v);\n                                };\n                            };\n                        })(Data_Map_Internal.empty);\n                    };\n                    var catMapMaybes1 = catMapMaybes(dictOrd);\n                    return Control_Monad_Free.liftF(new ChildQuery(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {\n                        var map4 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n                        var traverse1 = traverse(dictApplicative);\n                        return function (k) {\n                            var $173 = map4(catMapMaybes1);\n                            var $174 = traverse1(k);\n                            var $175 = slots2(label);\n                            return function ($176) {\n                                return $173($174($175($176)));\n                            };\n                        };\n                    }, q, identity))));\n                };\n            };\n        };\n    };\n};\nvar query = function () {\n    return function (dictIsSymbol) {\n        var lookup1 = lookup(dictIsSymbol);\n        return function (dictOrd) {\n            var lookup2 = lookup1(dictOrd);\n            return function (label) {\n                return function (p) {\n                    return function (q) {\n                        return Control_Monad_Free.liftF(new ChildQuery(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {\n                            var pure1 = Control_Applicative.pure(dictApplicative);\n                            return function (k) {\n                                var $177 = Data_Maybe.maybe(pure1(Data_Maybe.Nothing.value))(k);\n                                var $178 = lookup2(label)(p);\n                                return function ($179) {\n                                    return $177($178($179));\n                                };\n                            };\n                        }, q, identity))));\n                    };\n                };\n            };\n        };\n    };\n};\nvar ordSubscriptionId = Data_Ord.ordInt;\nvar ordForkId = Data_Ord.ordInt;\nvar newtypeHalogenAp = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monoidHalogenM = function (dictMonoid) {\n    return Control_Monad_Free.monoidFree(dictMonoid);\n};\nvar monadTransHalogenM = {\n    lift: function (dictMonad) {\n        return function ($180) {\n            return HalogenM(Control_Monad_Free.liftF(Lift.create($180)));\n        };\n    }\n};\nvar monadHalogenM = Control_Monad_Free.freeMonad;\nvar monadStateHalogenM = {\n    state: function ($181) {\n        return HalogenM(Control_Monad_Free.liftF(State.create($181)));\n    },\n    Monad0: function () {\n        return monadHalogenM;\n    }\n};\nvar monadTellHalogenM = function (dictMonadTell) {\n    var Semigroup0 = dictMonadTell.Semigroup0();\n    return {\n        tell: (function () {\n            var $182 = Control_Monad_Writer_Class.tell(dictMonadTell);\n            return function ($183) {\n                return HalogenM(Control_Monad_Free.liftF(Lift.create($182($183))));\n            };\n        })(),\n        Semigroup0: function () {\n            return Semigroup0;\n        },\n        Monad1: function () {\n            return monadHalogenM;\n        }\n    };\n};\nvar monadThrowHalogenM = function (dictMonadThrow) {\n    return {\n        throwError: (function () {\n            var $184 = Control_Monad_Error_Class.throwError(dictMonadThrow);\n            return function ($185) {\n                return HalogenM(Control_Monad_Free.liftF(Lift.create($184($185))));\n            };\n        })(),\n        Monad0: function () {\n            return monadHalogenM;\n        }\n    };\n};\nvar monadEffectHalogenM = function (dictMonadEffect) {\n    return {\n        liftEffect: (function () {\n            var $186 = Effect_Class.liftEffect(dictMonadEffect);\n            return function ($187) {\n                return HalogenM(Control_Monad_Free.liftF(Lift.create($186($187))));\n            };\n        })(),\n        Monad0: function () {\n            return monadHalogenM;\n        }\n    };\n};\nvar monadAskHalogenM = function (dictMonadAsk) {\n    return {\n        ask: Control_Monad_Free.liftF(new Lift(Control_Monad_Reader_Class.ask(dictMonadAsk))),\n        Monad0: function () {\n            return monadHalogenM;\n        }\n    };\n};\nvar monadAffHalogenM = function (dictMonadAff) {\n    var monadEffectHalogenM1 = monadEffectHalogenM(dictMonadAff.MonadEffect0());\n    return {\n        liftAff: (function () {\n            var $188 = Effect_Aff_Class.liftAff(dictMonadAff);\n            return function ($189) {\n                return HalogenM(Control_Monad_Free.liftF(Lift.create($188($189))));\n            };\n        })(),\n        MonadEffect0: function () {\n            return monadEffectHalogenM1;\n        }\n    };\n};\nvar mapOutput = function (f) {\n    return function (v) {\n        var go = function (v1) {\n            if (v1 instanceof State) {\n                return new State(v1.value0);\n            };\n            if (v1 instanceof Subscribe) {\n                return new Subscribe(v1.value0, v1.value1);\n            };\n            if (v1 instanceof Unsubscribe) {\n                return new Unsubscribe(v1.value0, v1.value1);\n            };\n            if (v1 instanceof Lift) {\n                return new Lift(v1.value0);\n            };\n            if (v1 instanceof ChildQuery) {\n                return new ChildQuery(v1.value0);\n            };\n            if (v1 instanceof Raise) {\n                return new Raise(f(v1.value0), v1.value1);\n            };\n            if (v1 instanceof Par) {\n                return new Par(over(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapOutput(f)))(v1.value0));\n            };\n            if (v1 instanceof Fork) {\n                return new Fork(mapOutput(f)(v1.value0), v1.value1);\n            };\n            if (v1 instanceof Join) {\n                return new Join(v1.value0, v1.value1);\n            };\n            if (v1 instanceof Kill) {\n                return new Kill(v1.value0, v1.value1);\n            };\n            if (v1 instanceof GetRef) {\n                return new GetRef(v1.value0, v1.value1);\n            };\n            throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 290, column 8 - line 301, column 29): \" + [ v1.constructor.name ]);\n        };\n        return Control_Monad_Free.hoistFree(go)(v);\n    };\n};\nvar mapAction = function (dictFunctor) {\n    return function (f) {\n        return function (v) {\n            var go = function (v1) {\n                if (v1 instanceof State) {\n                    return new State(v1.value0);\n                };\n                if (v1 instanceof Subscribe) {\n                    return new Subscribe((function () {\n                        var $190 = map(f);\n                        return function ($191) {\n                            return $190(v1.value0($191));\n                        };\n                    })(), v1.value1);\n                };\n                if (v1 instanceof Unsubscribe) {\n                    return new Unsubscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Lift) {\n                    return new Lift(v1.value0);\n                };\n                if (v1 instanceof ChildQuery) {\n                    return new ChildQuery(v1.value0);\n                };\n                if (v1 instanceof Raise) {\n                    return new Raise(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Par) {\n                    return new Par(over(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapAction(dictFunctor)(f)))(v1.value0));\n                };\n                if (v1 instanceof Fork) {\n                    return new Fork(mapAction(dictFunctor)(f)(v1.value0), v1.value1);\n                };\n                if (v1 instanceof Join) {\n                    return new Join(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Kill) {\n                    return new Kill(v1.value0, v1.value1);\n                };\n                if (v1 instanceof GetRef) {\n                    return new GetRef(v1.value0, v1.value1);\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 269, column 8 - line 280, column 29): \" + [ v1.constructor.name ]);\n            };\n            return Control_Monad_Free.hoistFree(go)(v);\n        };\n    };\n};\nvar kill = function (fid) {\n    return Control_Monad_Free.liftF(new Kill(fid, Data_Unit.unit));\n};\nvar join = function (fid) {\n    return Control_Monad_Free.liftF(new Join(fid, Data_Unit.unit));\n};\nvar imapState = function (f) {\n    return function (f$prime) {\n        return function (v) {\n            var go = function (v1) {\n                if (v1 instanceof State) {\n                    return new State((function () {\n                        var $192 = map1(f);\n                        return function ($193) {\n                            return $192(v1.value0(f$prime($193)));\n                        };\n                    })());\n                };\n                if (v1 instanceof Subscribe) {\n                    return new Subscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Unsubscribe) {\n                    return new Unsubscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Lift) {\n                    return new Lift(v1.value0);\n                };\n                if (v1 instanceof ChildQuery) {\n                    return new ChildQuery(v1.value0);\n                };\n                if (v1 instanceof Raise) {\n                    return new Raise(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Par) {\n                    return new Par(over(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapState(f)(f$prime)))(v1.value0));\n                };\n                if (v1 instanceof Fork) {\n                    return new Fork(imapState(f)(f$prime)(v1.value0), v1.value1);\n                };\n                if (v1 instanceof Join) {\n                    return new Join(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Kill) {\n                    return new Kill(v1.value0, v1.value1);\n                };\n                if (v1 instanceof GetRef) {\n                    return new GetRef(v1.value0, v1.value1);\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 247, column 8 - line 258, column 29): \" + [ v1.constructor.name ]);\n            };\n            return Control_Monad_Free.hoistFree(go)(v);\n        };\n    };\n};\nvar hoist = function (dictFunctor) {\n    return function (nat) {\n        return function (v) {\n            var go = function (v1) {\n                if (v1 instanceof State) {\n                    return new State(v1.value0);\n                };\n                if (v1 instanceof Subscribe) {\n                    return new Subscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Unsubscribe) {\n                    return new Unsubscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Lift) {\n                    return new Lift(nat(v1.value0));\n                };\n                if (v1 instanceof ChildQuery) {\n                    return new ChildQuery(v1.value0);\n                };\n                if (v1 instanceof Raise) {\n                    return new Raise(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Par) {\n                    return new Par(over(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));\n                };\n                if (v1 instanceof Fork) {\n                    return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);\n                };\n                if (v1 instanceof Join) {\n                    return new Join(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Kill) {\n                    return new Kill(v1.value0, v1.value1);\n                };\n                if (v1 instanceof GetRef) {\n                    return new GetRef(v1.value0, v1.value1);\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 312, column 8 - line 323, column 29): \" + [ v1.constructor.name ]);\n            };\n            return Control_Monad_Free.hoistFree(go)(v);\n        };\n    };\n};\nvar getRef = function (p) {\n    return Control_Monad_Free.liftF(new GetRef(p, identity));\n};\nvar functorHalogenM = Control_Monad_Free.freeFunctor;\nvar functorHalogenAp = Control_Applicative_Free.functorFreeAp;\nvar map3 = /* #__PURE__ */ Data_Functor.map(functorHalogenAp);\nvar functorHalogenF = function (dictFunctor) {\n    var map4 = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return function (v) {\n                if (v instanceof State) {\n                    return new State((function () {\n                        var $194 = lmap(f);\n                        return function ($195) {\n                            return $194(v.value0($195));\n                        };\n                    })());\n                };\n                if (v instanceof Subscribe) {\n                    return new Subscribe(v.value0, function ($196) {\n                        return f(v.value1($196));\n                    });\n                };\n                if (v instanceof Unsubscribe) {\n                    return new Unsubscribe(v.value0, f(v.value1));\n                };\n                if (v instanceof Lift) {\n                    return new Lift(map4(f)(v.value0));\n                };\n                if (v instanceof ChildQuery) {\n                    return new ChildQuery(map2(f)(v.value0));\n                };\n                if (v instanceof Raise) {\n                    return new Raise(v.value0, f(v.value1));\n                };\n                if (v instanceof Par) {\n                    return new Par(map3(f)(v.value0));\n                };\n                if (v instanceof Fork) {\n                    return new Fork(v.value0, function ($197) {\n                        return f(v.value1($197));\n                    });\n                };\n                if (v instanceof Join) {\n                    return new Join(v.value0, f(v.value1));\n                };\n                if (v instanceof Kill) {\n                    return new Kill(v.value0, f(v.value1));\n                };\n                if (v instanceof GetRef) {\n                    return new GetRef(v.value0, function ($198) {\n                        return f(v.value1($198));\n                    });\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 57, column 11 - line 68, column 37): \" + [ v.constructor.name ]);\n            };\n        }\n    };\n};\nvar fork = function (hmu) {\n    return Control_Monad_Free.liftF(new Fork(hmu, identity));\n};\nvar eqSubscriptionId = Data_Eq.eqInt;\nvar eqForkId = Data_Eq.eqInt;\nvar bindHalogenM = Control_Monad_Free.freeBind;\nvar bind = /* #__PURE__ */ Control_Bind.bind(bindHalogenM);\nvar applyHalogenM = Control_Monad_Free.freeApply;\nvar applyHalogenAp = Control_Applicative_Free.applyFreeAp;\nvar applicativeHalogenM = Control_Monad_Free.freeApplicative;\nvar pure = /* #__PURE__ */ Control_Applicative.pure(applicativeHalogenM);\nvar monadRecHalogenM = {\n    tailRecM: function (k) {\n        return function (a) {\n            return bind(k(a))(function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Loop) {\n                    return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);\n                };\n                if (v instanceof Control_Monad_Rec_Class.Done) {\n                    return pure(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 105, column 26 - line 107, column 21): \" + [ v.constructor.name ]);\n            });\n        };\n    },\n    Monad0: function () {\n        return monadHalogenM;\n    }\n};\nvar applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;\nvar parallelHalogenM = {\n    parallel: function ($199) {\n        return HalogenAp(Control_Applicative_Free.liftFreeAp($199));\n    },\n    sequential: function ($200) {\n        return HalogenM(Control_Monad_Free.liftF(Par.create($200)));\n    },\n    Monad0: function () {\n        return monadHalogenM;\n    },\n    Applicative1: function () {\n        return applicativeHalogenAp;\n    }\n};\nexport {\n    State,\n    Subscribe,\n    Unsubscribe,\n    Lift,\n    ChildQuery,\n    Raise,\n    Par,\n    Fork,\n    Join,\n    Kill,\n    GetRef,\n    HalogenM,\n    HalogenAp,\n    raise,\n    query,\n    queryAll,\n    SubscriptionId,\n    subscribe,\n    subscribe$prime,\n    unsubscribe,\n    ForkId,\n    fork,\n    join,\n    kill,\n    getRef,\n    imapState,\n    mapAction,\n    mapOutput,\n    hoist,\n    functorHalogenF,\n    functorHalogenM,\n    applyHalogenM,\n    applicativeHalogenM,\n    bindHalogenM,\n    monadHalogenM,\n    semigroupHalogenM,\n    monoidHalogenM,\n    monadEffectHalogenM,\n    monadAffHalogenM,\n    parallelHalogenM,\n    monadTransHalogenM,\n    monadRecHalogenM,\n    monadStateHalogenM,\n    monadAskHalogenM,\n    monadTellHalogenM,\n    monadThrowHalogenM,\n    newtypeHalogenAp,\n    functorHalogenAp,\n    applyHalogenAp,\n    applicativeHalogenAp,\n    eqSubscriptionId,\n    ordSubscriptionId,\n    eqForkId,\n    ordForkId\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Coyoneda from \"../Data.Coyoneda/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Coyoneda.functorCoyoneda);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar Initialize = /* #__PURE__ */ (function () {\n    function Initialize(value0) {\n        this.value0 = value0;\n    };\n    Initialize.create = function (value0) {\n        return new Initialize(value0);\n    };\n    return Initialize;\n})();\nvar Finalize = /* #__PURE__ */ (function () {\n    function Finalize(value0) {\n        this.value0 = value0;\n    };\n    Finalize.create = function (value0) {\n        return new Finalize(value0);\n    };\n    return Finalize;\n})();\nvar Receive = /* #__PURE__ */ (function () {\n    function Receive(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Receive.create = function (value0) {\n        return function (value1) {\n            return new Receive(value0, value1);\n        };\n    };\n    return Receive;\n})();\nvar Action = /* #__PURE__ */ (function () {\n    function Action(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Action.create = function (value0) {\n        return function (value1) {\n            return new Action(value0, value1);\n        };\n    };\n    return Action;\n})();\nvar Query = /* #__PURE__ */ (function () {\n    function Query(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Query.create = function (value0) {\n        return function (value1) {\n            return new Query(value0, value1);\n        };\n    };\n    return Query;\n})();\nvar functorHalogenQ = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Initialize) {\n                return new Initialize(f(m.value0));\n            };\n            if (m instanceof Finalize) {\n                return new Finalize(f(m.value0));\n            };\n            if (m instanceof Receive) {\n                return new Receive(m.value0, f(m.value1));\n            };\n            if (m instanceof Action) {\n                return new Action(m.value0, f(m.value1));\n            };\n            if (m instanceof Query) {\n                return new Query(map(f)(m.value0), map1(f)(m.value1));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Query.HalogenQ (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar bifunctorHalogenQ = {\n    bimap: function (f) {\n        return function (g) {\n            return function (v) {\n                if (v instanceof Initialize) {\n                    return new Initialize(g(v.value0));\n                };\n                if (v instanceof Finalize) {\n                    return new Finalize(g(v.value0));\n                };\n                if (v instanceof Receive) {\n                    return new Receive(f(v.value0), g(v.value1));\n                };\n                if (v instanceof Action) {\n                    return new Action(v.value0, g(v.value1));\n                };\n                if (v instanceof Query) {\n                    return new Query(map(g)(v.value0), map1(g)(v.value1));\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenQ (line 16, column 15 - line 21, column 45): \" + [ v.constructor.name ]);\n            };\n        };\n    }\n};\nexport {\n    Initialize,\n    Finalize,\n    Receive,\n    Action,\n    Query,\n    bifunctorHalogenQ,\n    functorHalogenQ\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Function_Uncurried from \"../Data.Function.Uncurried/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Halogen_VDom_DOM from \"../Halogen.VDom.DOM/index.js\";\nimport * as Halogen_VDom_Machine from \"../Halogen.VDom.Machine/index.js\";\nimport * as Halogen_VDom_Util from \"../Halogen.VDom.Util/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar Thunk = /* #__PURE__ */ (function () {\n    function Thunk(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Thunk.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Thunk(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Thunk;\n})();\nvar unsafeThunkId = Unsafe_Coerce.unsafeCoerce;\nvar unsafeEqThunk = function (v, v1) {\n    return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && v.value1(v.value3, v1.value3));\n};\nvar thunk = function (tid, eqFn, f, a) {\n    return new Thunk(tid, eqFn, f, a);\n};\nvar thunk1 = function (f, a) {\n    return thunk(unsafeThunkId(f), Halogen_VDom_Util.refEq, f, a);\n};\nvar thunk2 = /* #__PURE__ */ (function () {\n    var eqFn = function (a, b) {\n        return Halogen_VDom_Util.refEq(a[\"_1\"], b[\"_1\"]) && Halogen_VDom_Util.refEq(a[\"_2\"], b[\"_2\"]);\n    };\n    return function (f, a, b) {\n        return thunk(unsafeThunkId(f), eqFn, function (v) {\n            return f(v[\"_1\"])(v[\"_2\"]);\n        }, {\n            \"_1\": a,\n            \"_2\": b\n        });\n    };\n})();\nvar thunk3 = /* #__PURE__ */ (function () {\n    var eqFn = function (a, b) {\n        return Halogen_VDom_Util.refEq(a[\"_1\"], b[\"_1\"]) && (Halogen_VDom_Util.refEq(a[\"_2\"], b[\"_2\"]) && Halogen_VDom_Util.refEq(a[\"_3\"], b[\"_3\"]));\n    };\n    return function (f, a, b, c) {\n        return thunk(unsafeThunkId(f), eqFn, function (v) {\n            return f(v[\"_1\"])(v[\"_2\"])(v[\"_3\"]);\n        }, {\n            \"_1\": a,\n            \"_2\": b,\n            \"_3\": c\n        });\n    };\n})();\nvar thunked = function (eqFn) {\n    return function (f) {\n        var tid = unsafeThunkId({\n            f: f\n        });\n        var eqFn$prime = Data_Function_Uncurried.mkFn2(eqFn);\n        return function (a) {\n            return thunk(tid, eqFn$prime, f, a);\n        };\n    };\n};\nvar runThunk = function (v) {\n    return v.value2(v.value3);\n};\nvar mapThunk = function (k) {\n    return function (v) {\n        return new Thunk(v.value0, v.value1, function ($51) {\n            return k(v.value2($51));\n        }, v.value3);\n    };\n};\nvar hoist = mapThunk;\nvar functorThunk = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return function (v) {\n                return new Thunk(v.value0, v.value1, (function () {\n                    var $52 = map(f);\n                    return function ($53) {\n                        return $52(v.value2($53));\n                    };\n                })(), v.value3);\n            };\n        }\n    };\n};\nvar buildThunk = function (toVDom) {\n    var haltThunk = function (state) {\n        return Halogen_VDom_Machine.halt(state.vdom);\n    };\n    var $lazy_patchThunk = $runtime_lazy(\"patchThunk\", \"Halogen.VDom.Thunk\", function () {\n        return function (state, t2) {\n            var $48 = unsafeEqThunk(state.thunk, t2);\n            if ($48) {\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, $lazy_patchThunk(112), haltThunk));\n            };\n            var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {\n                vdom: vdom,\n                thunk: t2\n            }, $lazy_patchThunk(115), haltThunk));\n        };\n    });\n    var patchThunk = $lazy_patchThunk(108);\n    var renderThunk = function (spec) {\n        return function (t) {\n            var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {\n                thunk: t,\n                vdom: vdom\n            }, patchThunk, haltThunk));\n        };\n    };\n    return renderThunk;\n};\nexport {\n    buildThunk,\n    runThunk,\n    hoist,\n    mapThunk,\n    thunked,\n    thunk1,\n    thunk2,\n    thunk3,\n    functorThunk\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Coyoneda from \"../Data.Coyoneda/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Halogen_Data_Slot from \"../Halogen.Data.Slot/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Halogen_Query_HalogenQ from \"../Halogen.Query.HalogenQ/index.js\";\nimport * as Halogen_VDom_Thunk from \"../Halogen.VDom.Thunk/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar voidLeft = /* #__PURE__ */ Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe);\nvar map = /* #__PURE__ */ Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM);\nvar lmap = /* #__PURE__ */ Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Halogen_HTML_Core.bifunctorHTML);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);\nvar lookup = /* #__PURE__ */ Halogen_Data_Slot.lookup();\nvar pop = /* #__PURE__ */ Halogen_Data_Slot.pop();\nvar insert = /* #__PURE__ */ Halogen_Data_Slot.insert();\nvar ComponentSlot = /* #__PURE__ */ (function () {\n    function ComponentSlot(value0) {\n        this.value0 = value0;\n    };\n    ComponentSlot.create = function (value0) {\n        return new ComponentSlot(value0);\n    };\n    return ComponentSlot;\n})();\nvar ThunkSlot = /* #__PURE__ */ (function () {\n    function ThunkSlot(value0) {\n        this.value0 = value0;\n    };\n    ThunkSlot.create = function (value0) {\n        return new ThunkSlot(value0);\n    };\n    return ThunkSlot;\n})();\nvar unComponentSlot = Unsafe_Coerce.unsafeCoerce;\nvar unComponent = Unsafe_Coerce.unsafeCoerce;\nvar mkEval = function (args) {\n    return function (v) {\n        if (v instanceof Halogen_Query_HalogenQ.Initialize) {\n            return voidLeft(traverse_(args.handleAction)(args.initialize))(v.value0);\n        };\n        if (v instanceof Halogen_Query_HalogenQ.Finalize) {\n            return voidLeft(traverse_(args.handleAction)(args.finalize))(v.value0);\n        };\n        if (v instanceof Halogen_Query_HalogenQ.Receive) {\n            return voidLeft(traverse_(args.handleAction)(args.receive(v.value0)))(v.value1);\n        };\n        if (v instanceof Halogen_Query_HalogenQ.Action) {\n            return voidLeft(args.handleAction(v.value0))(v.value1);\n        };\n        if (v instanceof Halogen_Query_HalogenQ.Query) {\n            return Data_Coyoneda.unCoyoneda(function (g) {\n                var $45 = map(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));\n                return function ($46) {\n                    return $45(args.handleQuery($46));\n                };\n            })(v.value0);\n        };\n        throw new Error(\"Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): \" + [ v.constructor.name ]);\n    };\n};\nvar mkComponentSlot = Unsafe_Coerce.unsafeCoerce;\nvar mkComponent = Unsafe_Coerce.unsafeCoerce;\nvar hoistSlot = function (dictFunctor) {\n    return function (nat) {\n        return function (v) {\n            if (v instanceof ComponentSlot) {\n                return unComponentSlot(function (slot) {\n                    return new ComponentSlot(mkComponentSlot({\n                        get: slot.get,\n                        pop: slot.pop,\n                        set: slot.set,\n                        component: hoist(dictFunctor)(nat)(slot.component),\n                        input: slot.input,\n                        output: slot.output\n                    }));\n                })(v.value0);\n            };\n            if (v instanceof ThunkSlot) {\n                return new ThunkSlot(Halogen_VDom_Thunk.hoist(lmap(hoistSlot(dictFunctor)(nat)))(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Component (line 279, column 17 - line 284, column 53): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar hoist = function (dictFunctor) {\n    var hoist1 = Halogen_Query_HalogenM.hoist(dictFunctor);\n    return function (nat) {\n        return unComponent(function (c) {\n            return mkComponent({\n                initialState: c.initialState,\n                render: (function () {\n                    var $47 = lmap(hoistSlot(dictFunctor)(nat));\n                    return function ($48) {\n                        return $47(c.render($48));\n                    };\n                })(),\n                \"eval\": (function () {\n                    var $49 = hoist1(nat);\n                    return function ($50) {\n                        return $49(c[\"eval\"]($50));\n                    };\n                })()\n            });\n        });\n    };\n};\nvar functorComponentSlotBox = {\n    map: function (f) {\n        return unComponentSlot(function (slot) {\n            return mkComponentSlot({\n                get: slot.get,\n                pop: slot.pop,\n                set: slot.set,\n                component: slot.component,\n                input: slot.input,\n                output: map1(map2(f))(slot.output)\n            });\n        });\n    }\n};\nvar map3 = /* #__PURE__ */ Data_Functor.map(functorComponentSlotBox);\nvar functorComponentSlot = {\n    map: function (f) {\n        return function (v) {\n            if (v instanceof ComponentSlot) {\n                return new ComponentSlot(map3(f)(v.value0));\n            };\n            if (v instanceof ThunkSlot) {\n                return new ThunkSlot(Halogen_VDom_Thunk.mapThunk(bimap(Data_Functor.map(functorComponentSlot)(f))(f))(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Component (line 209, column 11 - line 211, column 74): \" + [ v.constructor.name ]);\n        };\n    }\n};\nvar defaultEval = /* #__PURE__ */ (function () {\n    return {\n        handleAction: Data_Function[\"const\"](pure(Data_Unit.unit)),\n        handleQuery: Data_Function[\"const\"](pure(Data_Maybe.Nothing.value)),\n        receive: Data_Function[\"const\"](Data_Maybe.Nothing.value),\n        initialize: Data_Maybe.Nothing.value,\n        finalize: Data_Maybe.Nothing.value\n    };\n})();\nvar componentSlot = function () {\n    return function (dictIsSymbol) {\n        var lookup1 = lookup(dictIsSymbol);\n        var pop1 = pop(dictIsSymbol);\n        var insert1 = insert(dictIsSymbol);\n        return function (dictOrd) {\n            var lookup2 = lookup1(dictOrd);\n            var pop2 = pop1(dictOrd);\n            var insert2 = insert1(dictOrd);\n            return function (label) {\n                return function (p) {\n                    return function (comp) {\n                        return function (input) {\n                            return function (output) {\n                                return mkComponentSlot({\n                                    get: lookup2(label)(p),\n                                    pop: pop2(label)(p),\n                                    set: insert2(label)(p),\n                                    component: comp,\n                                    input: input,\n                                    output: output\n                                });\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    mkComponent,\n    unComponent,\n    hoist,\n    mkEval,\n    defaultEval,\n    ComponentSlot,\n    ThunkSlot,\n    componentSlot,\n    mkComponentSlot,\n    unComponentSlot,\n    hoistSlot,\n    functorComponentSlotBox,\n    functorComponentSlot\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_VDom_Types from \"../Halogen.VDom.Types/index.js\";\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Data_Maybe.applicativeMaybe);\nvar withKeys_ = function (ctor) {\n    return function (children) {\n        var v = ctor([  ]);\n        if (v instanceof Halogen_VDom_Types.Elem) {\n            return new Halogen_VDom_Types.Keyed(v.value0, v.value1, v.value2, children);\n        };\n        return v;\n    };\n};\nvar withKeys = function (ctor) {\n    return function (props) {\n        return function (children) {\n            var v = ctor(props)([  ]);\n            if (v instanceof Halogen_VDom_Types.Elem) {\n                return new Halogen_VDom_Types.Keyed(v.value0, v.value1, v.value2, children);\n            };\n            return v;\n        };\n    };\n};\nvar keyedNS = function ($14) {\n    return Halogen_HTML_Core.keyed(pure($14));\n};\nvar keyed = /* #__PURE__ */ (function () {\n    return Halogen_HTML_Core.keyed(Data_Maybe.Nothing.value);\n})();\nvar elementNS = function ($15) {\n    return Halogen_HTML_Core.element(pure($15));\n};\nvar element = /* #__PURE__ */ (function () {\n    return Halogen_HTML_Core.element(Data_Maybe.Nothing.value);\n})();\nvar em = /* #__PURE__ */ element(\"em\");\nvar em_ = /* #__PURE__ */ em([  ]);\nvar embed = /* #__PURE__ */ element(\"embed\");\nvar embed_ = /* #__PURE__ */ embed([  ]);\nvar fieldset = /* #__PURE__ */ element(\"fieldset\");\nvar fieldset_ = /* #__PURE__ */ fieldset([  ]);\nvar figcaption = /* #__PURE__ */ element(\"figcaption\");\nvar figcaption_ = /* #__PURE__ */ figcaption([  ]);\nvar figure = /* #__PURE__ */ element(\"figure\");\nvar figure_ = /* #__PURE__ */ figure([  ]);\nvar footer = /* #__PURE__ */ element(\"footer\");\nvar footer_ = /* #__PURE__ */ footer([  ]);\nvar form = /* #__PURE__ */ element(\"form\");\nvar form_ = /* #__PURE__ */ form([  ]);\nvar h1 = /* #__PURE__ */ element(\"h1\");\nvar h1_ = /* #__PURE__ */ h1([  ]);\nvar h2 = /* #__PURE__ */ element(\"h2\");\nvar h2_ = /* #__PURE__ */ h2([  ]);\nvar h3 = /* #__PURE__ */ element(\"h3\");\nvar h3_ = /* #__PURE__ */ h3([  ]);\nvar h4 = /* #__PURE__ */ element(\"h4\");\nvar h4_ = /* #__PURE__ */ h4([  ]);\nvar h5 = /* #__PURE__ */ element(\"h5\");\nvar h5_ = /* #__PURE__ */ h5([  ]);\nvar h6 = /* #__PURE__ */ element(\"h6\");\nvar h6_ = /* #__PURE__ */ h6([  ]);\nvar head = /* #__PURE__ */ element(\"head\");\nvar head_ = /* #__PURE__ */ head([  ]);\nvar header = /* #__PURE__ */ element(\"header\");\nvar header_ = /* #__PURE__ */ header([  ]);\nvar hr = function (props) {\n    return element(\"hr\")(props)([  ]);\n};\nvar hr_ = /* #__PURE__ */ hr([  ]);\nvar html = /* #__PURE__ */ element(\"html\");\nvar html_ = /* #__PURE__ */ html([  ]);\nvar i = /* #__PURE__ */ element(\"i\");\nvar i_ = /* #__PURE__ */ i([  ]);\nvar iframe = function (props) {\n    return element(\"iframe\")(props)([  ]);\n};\nvar img = function (props) {\n    return element(\"img\")(props)([  ]);\n};\nvar input = function (props) {\n    return element(\"input\")(props)([  ]);\n};\nvar ins = /* #__PURE__ */ element(\"ins\");\nvar ins_ = /* #__PURE__ */ ins([  ]);\nvar kbd = /* #__PURE__ */ element(\"kbd\");\nvar kbd_ = /* #__PURE__ */ kbd([  ]);\nvar label = /* #__PURE__ */ element(\"label\");\nvar label_ = /* #__PURE__ */ label([  ]);\nvar legend = /* #__PURE__ */ element(\"legend\");\nvar legend_ = /* #__PURE__ */ legend([  ]);\nvar li = /* #__PURE__ */ element(\"li\");\nvar li_ = /* #__PURE__ */ li([  ]);\nvar link = function (props) {\n    return element(\"link\")(props)([  ]);\n};\nvar main = /* #__PURE__ */ element(\"main\");\nvar main_ = /* #__PURE__ */ main([  ]);\nvar map = /* #__PURE__ */ element(\"map\");\nvar map_ = /* #__PURE__ */ map([  ]);\nvar mark = /* #__PURE__ */ element(\"mark\");\nvar mark_ = /* #__PURE__ */ mark([  ]);\nvar menu = /* #__PURE__ */ element(\"menu\");\nvar menu_ = /* #__PURE__ */ menu([  ]);\nvar menuitem = /* #__PURE__ */ element(\"menuitem\");\nvar menuitem_ = /* #__PURE__ */ menuitem([  ]);\nvar meta = function (props) {\n    return element(\"meta\")(props)([  ]);\n};\nvar meter = /* #__PURE__ */ element(\"meter\");\nvar meter_ = /* #__PURE__ */ meter([  ]);\nvar nav = /* #__PURE__ */ element(\"nav\");\nvar nav_ = /* #__PURE__ */ nav([  ]);\nvar noscript = /* #__PURE__ */ element(\"noscript\");\nvar noscript_ = /* #__PURE__ */ noscript([  ]);\nvar object = /* #__PURE__ */ element(\"object\");\nvar object_ = /* #__PURE__ */ object([  ]);\nvar ol = /* #__PURE__ */ element(\"ol\");\nvar ol_ = /* #__PURE__ */ ol([  ]);\nvar optgroup = /* #__PURE__ */ element(\"optgroup\");\nvar optgroup_ = /* #__PURE__ */ optgroup([  ]);\nvar option = /* #__PURE__ */ element(\"option\");\nvar option_ = /* #__PURE__ */ option([  ]);\nvar output = /* #__PURE__ */ element(\"output\");\nvar output_ = /* #__PURE__ */ output([  ]);\nvar p = /* #__PURE__ */ element(\"p\");\nvar p_ = /* #__PURE__ */ p([  ]);\nvar param = function (props) {\n    return element(\"param\")(props)([  ]);\n};\nvar pre = /* #__PURE__ */ element(\"pre\");\nvar pre_ = /* #__PURE__ */ pre([  ]);\nvar progress = /* #__PURE__ */ element(\"progress\");\nvar progress_ = /* #__PURE__ */ progress([  ]);\nvar q = /* #__PURE__ */ element(\"q\");\nvar q_ = /* #__PURE__ */ q([  ]);\nvar rp = /* #__PURE__ */ element(\"rp\");\nvar rp_ = /* #__PURE__ */ rp([  ]);\nvar rt = /* #__PURE__ */ element(\"rt\");\nvar rt_ = /* #__PURE__ */ rt([  ]);\nvar ruby = /* #__PURE__ */ element(\"ruby\");\nvar ruby_ = /* #__PURE__ */ ruby([  ]);\nvar samp = /* #__PURE__ */ element(\"samp\");\nvar samp_ = /* #__PURE__ */ samp([  ]);\nvar script = /* #__PURE__ */ element(\"script\");\nvar script_ = /* #__PURE__ */ script([  ]);\nvar section = /* #__PURE__ */ element(\"section\");\nvar section_ = /* #__PURE__ */ section([  ]);\nvar select = /* #__PURE__ */ element(\"select\");\nvar select_ = /* #__PURE__ */ select([  ]);\nvar small = /* #__PURE__ */ element(\"small\");\nvar small_ = /* #__PURE__ */ small([  ]);\nvar source = function (props) {\n    return element(\"source\")(props)([  ]);\n};\nvar span = /* #__PURE__ */ element(\"span\");\nvar span_ = /* #__PURE__ */ span([  ]);\nvar strong = /* #__PURE__ */ element(\"strong\");\nvar strong_ = /* #__PURE__ */ strong([  ]);\nvar style = /* #__PURE__ */ element(\"style\");\nvar style_ = /* #__PURE__ */ style([  ]);\nvar sub = /* #__PURE__ */ element(\"sub\");\nvar sub_ = /* #__PURE__ */ sub([  ]);\nvar summary = /* #__PURE__ */ element(\"summary\");\nvar summary_ = /* #__PURE__ */ summary([  ]);\nvar sup = /* #__PURE__ */ element(\"sup\");\nvar sup_ = /* #__PURE__ */ sup([  ]);\nvar table = /* #__PURE__ */ element(\"table\");\nvar table_ = /* #__PURE__ */ table([  ]);\nvar tbody = /* #__PURE__ */ element(\"tbody\");\nvar tbody_ = /* #__PURE__ */ tbody([  ]);\nvar td = /* #__PURE__ */ element(\"td\");\nvar td_ = /* #__PURE__ */ td([  ]);\nvar textarea = function (es) {\n    return element(\"textarea\")(es)([  ]);\n};\nvar tfoot = /* #__PURE__ */ element(\"tfoot\");\nvar tfoot_ = /* #__PURE__ */ tfoot([  ]);\nvar th = /* #__PURE__ */ element(\"th\");\nvar th_ = /* #__PURE__ */ th([  ]);\nvar thead = /* #__PURE__ */ element(\"thead\");\nvar thead_ = /* #__PURE__ */ thead([  ]);\nvar time = /* #__PURE__ */ element(\"time\");\nvar time_ = /* #__PURE__ */ time([  ]);\nvar title = /* #__PURE__ */ element(\"title\");\nvar title_ = /* #__PURE__ */ title([  ]);\nvar tr = /* #__PURE__ */ element(\"tr\");\nvar tr_ = /* #__PURE__ */ tr([  ]);\nvar track = function (props) {\n    return element(\"track\")(props)([  ]);\n};\nvar u = /* #__PURE__ */ element(\"u\");\nvar u_ = /* #__PURE__ */ u([  ]);\nvar ul = /* #__PURE__ */ element(\"ul\");\nvar ul_ = /* #__PURE__ */ ul([  ]);\nvar $$var = /* #__PURE__ */ element(\"var\");\nvar var_ = /* #__PURE__ */ $$var([  ]);\nvar video = /* #__PURE__ */ element(\"video\");\nvar video_ = /* #__PURE__ */ video([  ]);\nvar wbr = function (props) {\n    return element(\"wbr\")(props)([  ]);\n};\nvar dt = /* #__PURE__ */ element(\"dt\");\nvar dt_ = /* #__PURE__ */ dt([  ]);\nvar dl = /* #__PURE__ */ element(\"dl\");\nvar dl_ = /* #__PURE__ */ dl([  ]);\nvar div = /* #__PURE__ */ element(\"div\");\nvar div_ = /* #__PURE__ */ div([  ]);\nvar dialog = /* #__PURE__ */ element(\"dialog\");\nvar dialog_ = /* #__PURE__ */ dialog([  ]);\nvar dfn = /* #__PURE__ */ element(\"dfn\");\nvar dfn_ = /* #__PURE__ */ dfn([  ]);\nvar details = /* #__PURE__ */ element(\"details\");\nvar details_ = /* #__PURE__ */ details([  ]);\nvar del = /* #__PURE__ */ element(\"del\");\nvar del_ = /* #__PURE__ */ del([  ]);\nvar dd = /* #__PURE__ */ element(\"dd\");\nvar dd_ = /* #__PURE__ */ dd([  ]);\nvar datalist = /* #__PURE__ */ element(\"datalist\");\nvar datalist_ = /* #__PURE__ */ datalist([  ]);\nvar command = function (props) {\n    return element(\"command\")(props)([  ]);\n};\nvar colgroup = /* #__PURE__ */ element(\"colgroup\");\nvar colgroup_ = /* #__PURE__ */ colgroup([  ]);\nvar col = function (props) {\n    return element(\"col\")(props)([  ]);\n};\nvar code = /* #__PURE__ */ element(\"code\");\nvar code_ = /* #__PURE__ */ code([  ]);\nvar cite = /* #__PURE__ */ element(\"cite\");\nvar cite_ = /* #__PURE__ */ cite([  ]);\nvar caption = /* #__PURE__ */ element(\"caption\");\nvar caption_ = /* #__PURE__ */ caption([  ]);\nvar canvas = function (props) {\n    return element(\"canvas\")(props)([  ]);\n};\nvar button = /* #__PURE__ */ element(\"button\");\nvar button_ = /* #__PURE__ */ button([  ]);\nvar br = function (props) {\n    return element(\"br\")(props)([  ]);\n};\nvar br_ = /* #__PURE__ */ br([  ]);\nvar body = /* #__PURE__ */ element(\"body\");\nvar body_ = /* #__PURE__ */ body([  ]);\nvar blockquote = /* #__PURE__ */ element(\"blockquote\");\nvar blockquote_ = /* #__PURE__ */ blockquote([  ]);\nvar bdo = /* #__PURE__ */ element(\"bdo\");\nvar bdo_ = /* #__PURE__ */ bdo([  ]);\nvar bdi = /* #__PURE__ */ element(\"bdi\");\nvar bdi_ = /* #__PURE__ */ bdi([  ]);\nvar base = function (props) {\n    return element(\"base\")(props)([  ]);\n};\nvar b = /* #__PURE__ */ element(\"b\");\nvar b_ = /* #__PURE__ */ b([  ]);\nvar audio = /* #__PURE__ */ element(\"audio\");\nvar audio_ = /* #__PURE__ */ audio([  ]);\nvar aside = /* #__PURE__ */ element(\"aside\");\nvar aside_ = /* #__PURE__ */ aside([  ]);\nvar article = /* #__PURE__ */ element(\"article\");\nvar article_ = /* #__PURE__ */ article([  ]);\nvar area = function (props) {\n    return element(\"area\")(props)([  ]);\n};\nvar address = /* #__PURE__ */ element(\"address\");\nvar address_ = /* #__PURE__ */ address([  ]);\nvar abbr = /* #__PURE__ */ element(\"abbr\");\nvar abbr_ = /* #__PURE__ */ abbr([  ]);\nvar a = /* #__PURE__ */ element(\"a\");\nvar a_ = /* #__PURE__ */ a([  ]);\nexport {\n    element,\n    elementNS,\n    keyed,\n    keyedNS,\n    withKeys,\n    withKeys_,\n    a,\n    a_,\n    abbr,\n    abbr_,\n    address,\n    address_,\n    area,\n    article,\n    article_,\n    aside,\n    aside_,\n    audio,\n    audio_,\n    b,\n    b_,\n    base,\n    bdi,\n    bdi_,\n    bdo,\n    bdo_,\n    blockquote,\n    blockquote_,\n    body,\n    body_,\n    br,\n    br_,\n    button,\n    button_,\n    canvas,\n    caption,\n    caption_,\n    cite,\n    cite_,\n    code,\n    code_,\n    col,\n    colgroup,\n    colgroup_,\n    command,\n    datalist,\n    datalist_,\n    dd,\n    dd_,\n    del,\n    del_,\n    details,\n    details_,\n    dfn,\n    dfn_,\n    dialog,\n    dialog_,\n    div,\n    div_,\n    dl,\n    dl_,\n    dt,\n    dt_,\n    em,\n    em_,\n    embed,\n    embed_,\n    fieldset,\n    fieldset_,\n    figcaption,\n    figcaption_,\n    figure,\n    figure_,\n    footer,\n    footer_,\n    form,\n    form_,\n    h1,\n    h1_,\n    h2,\n    h2_,\n    h3,\n    h3_,\n    h4,\n    h4_,\n    h5,\n    h5_,\n    h6,\n    h6_,\n    head,\n    head_,\n    header,\n    header_,\n    hr,\n    hr_,\n    html,\n    html_,\n    i,\n    i_,\n    iframe,\n    img,\n    input,\n    ins,\n    ins_,\n    kbd,\n    kbd_,\n    label,\n    label_,\n    legend,\n    legend_,\n    li,\n    li_,\n    link,\n    main,\n    main_,\n    map,\n    map_,\n    mark,\n    mark_,\n    menu,\n    menu_,\n    menuitem,\n    menuitem_,\n    meta,\n    meter,\n    meter_,\n    nav,\n    nav_,\n    noscript,\n    noscript_,\n    object,\n    object_,\n    ol,\n    ol_,\n    optgroup,\n    optgroup_,\n    option,\n    option_,\n    output,\n    output_,\n    p,\n    p_,\n    param,\n    pre,\n    pre_,\n    progress,\n    progress_,\n    q,\n    q_,\n    rp,\n    rp_,\n    rt,\n    rt_,\n    ruby,\n    ruby_,\n    samp,\n    samp_,\n    script,\n    script_,\n    section,\n    section_,\n    select,\n    select_,\n    small,\n    small_,\n    source,\n    span,\n    span_,\n    strong,\n    strong_,\n    style,\n    style_,\n    sub,\n    sub_,\n    summary,\n    summary_,\n    sup,\n    sup_,\n    table,\n    table_,\n    tbody,\n    tbody_,\n    td,\n    td_,\n    textarea,\n    tfoot,\n    tfoot_,\n    th,\n    th_,\n    thead,\n    thead_,\n    time,\n    time_,\n    title,\n    title_,\n    tr,\n    tr_,\n    track,\n    u,\n    u_,\n    ul,\n    ul_,\n    $$var as var,\n    var_,\n    video,\n    video_,\n    wbr\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar withExcept = /* #__PURE__ */ Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);\nvar runExcept = function ($3) {\n    return unwrap(Control_Monad_Except_Trans.runExceptT($3));\n};\nvar mapExcept = function (f) {\n    return Control_Monad_Except_Trans.mapExceptT(function ($4) {\n        return Data_Identity.Identity(f(unwrap($4)));\n    });\n};\nexport {\n    runExcept,\n    mapExcept,\n    withExcept\n};\nexport {\n    catchError,\n    catchJust,\n    throwError\n} from \"../Control.Monad.Error.Class/index.js\";\nexport {\n    ExceptT,\n    except,\n    lift,\n    mapExceptT,\n    runExceptT,\n    withExceptT\n} from \"../Control.Monad.Except.Trans/index.js\";\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar item = function (i) {\n    var $5 = $foreign[\"_item\"](i);\n    return function ($6) {\n        return Data_Nullable.toMaybe($5($6));\n    };\n};\nvar items = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return function (fl) {\n        return unfoldr(function (i) {\n            return map(Data_Function.flip(Data_Tuple.Tuple.create)(i + 1 | 0))(item(i)(fl));\n        })(0);\n    };\n};\nexport {\n    length\n} from \"./foreign.js\";\nexport {\n    item,\n    items\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Except from \"../Control.Monad.Except/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Effect_Unsafe from \"../Effect.Unsafe/index.js\";\nimport * as Foreign from \"../Foreign/index.js\";\nimport * as Foreign_Index from \"../Foreign.Index/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Clipboard_ClipboardEvent_EventTypes from \"../Web.Clipboard.ClipboardEvent.EventTypes/index.js\";\nimport * as Web_Event_Event from \"../Web.Event.Event/index.js\";\nimport * as Web_File_FileList from \"../Web.File.FileList/index.js\";\nimport * as Web_HTML_Event_DragEvent_EventTypes from \"../Web.HTML.Event.DragEvent.EventTypes/index.js\";\nimport * as Web_HTML_Event_EventTypes from \"../Web.HTML.Event.EventTypes/index.js\";\nimport * as Web_HTML_HTMLInputElement from \"../Web.HTML.HTMLInputElement/index.js\";\nimport * as Web_UIEvent_FocusEvent_EventTypes from \"../Web.UIEvent.FocusEvent.EventTypes/index.js\";\nimport * as Web_UIEvent_KeyboardEvent_EventTypes from \"../Web.UIEvent.KeyboardEvent.EventTypes/index.js\";\nimport * as Web_UIEvent_MouseEvent_EventTypes from \"../Web.UIEvent.MouseEvent.EventTypes/index.js\";\nimport * as Web_UIEvent_WheelEvent_EventTypes from \"../Web.UIEvent.WheelEvent.EventTypes/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar composeKleisli = /* #__PURE__ */ Control_Bind.composeKleisli(Data_Maybe.bindMaybe);\nvar composeKleisliFlipped = /* #__PURE__ */ Control_Bind.composeKleisliFlipped(/* #__PURE__ */ Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity));\nvar readProp = /* #__PURE__ */ Foreign_Index.readProp(Data_Identity.monadIdentity);\nvar readString = /* #__PURE__ */ Foreign.readString(Data_Identity.monadIdentity);\nvar wheelHandler = Unsafe_Coerce.unsafeCoerce;\nvar touchHandler = Unsafe_Coerce.unsafeCoerce;\nvar mouseHandler = Unsafe_Coerce.unsafeCoerce;\nvar keyHandler = Unsafe_Coerce.unsafeCoerce;\nvar handler$prime = function (et) {\n    return function (f) {\n        return Halogen_HTML_Core.handler(et)(function (ev) {\n            return map(Halogen_Query_Input.Action.create)(f(ev));\n        });\n    };\n};\nvar handler = function (et) {\n    return function (f) {\n        return Halogen_HTML_Core.handler(et)(function (ev) {\n            return new Data_Maybe.Just(new Halogen_Query_Input.Action(f(ev)));\n        });\n    };\n};\nvar onAbort = /* #__PURE__ */ handler(\"abort\");\nvar onAuxClick = /* #__PURE__ */ (function () {\n    var $13 = handler(Web_UIEvent_MouseEvent_EventTypes.auxclick);\n    return function ($14) {\n        return $13(mouseHandler($14));\n    };\n})();\nvar onChange = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.change);\nvar onClick = /* #__PURE__ */ (function () {\n    var $15 = handler(Web_UIEvent_MouseEvent_EventTypes.click);\n    return function ($16) {\n        return $15(mouseHandler($16));\n    };\n})();\nvar onDoubleClick = /* #__PURE__ */ (function () {\n    var $17 = handler(Web_UIEvent_MouseEvent_EventTypes.dblclick);\n    return function ($18) {\n        return $17(mouseHandler($18));\n    };\n})();\nvar onError = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.error);\nvar onFileUpload = function (dictUnfoldable) {\n    var none = Data_Unfoldable.none(dictUnfoldable);\n    var items = Web_File_FileList.items(dictUnfoldable);\n    return function (f) {\n        return handler(Web_HTML_Event_EventTypes.change)((function () {\n            var $19 = Data_Maybe.maybe(none)(items);\n            var $20 = composeKleisli(Web_Event_Event.target)(composeKleisli(Web_HTML_HTMLInputElement.fromEventTarget)(function ($22) {\n                return Effect_Unsafe.unsafePerformEffect(Web_HTML_HTMLInputElement.files($22));\n            }));\n            return function ($21) {\n                return f($19($20($21)));\n            };\n        })());\n    };\n};\nvar onInput = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.input);\nvar onInvalid = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.invalid);\nvar onKeyDown = /* #__PURE__ */ (function () {\n    var $23 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown);\n    return function ($24) {\n        return $23(keyHandler($24));\n    };\n})();\nvar onKeyUp = /* #__PURE__ */ (function () {\n    var $25 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup);\n    return function ($26) {\n        return $25(keyHandler($26));\n    };\n})();\nvar onLoad = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.load);\nvar onMouseDown = /* #__PURE__ */ (function () {\n    var $27 = handler(Web_UIEvent_MouseEvent_EventTypes.mousedown);\n    return function ($28) {\n        return $27(mouseHandler($28));\n    };\n})();\nvar onMouseEnter = /* #__PURE__ */ (function () {\n    var $29 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter);\n    return function ($30) {\n        return $29(mouseHandler($30));\n    };\n})();\nvar onMouseLeave = /* #__PURE__ */ (function () {\n    var $31 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave);\n    return function ($32) {\n        return $31(mouseHandler($32));\n    };\n})();\nvar onMouseMove = /* #__PURE__ */ (function () {\n    var $33 = handler(Web_UIEvent_MouseEvent_EventTypes.mousemove);\n    return function ($34) {\n        return $33(mouseHandler($34));\n    };\n})();\nvar onMouseOut = /* #__PURE__ */ (function () {\n    var $35 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseout);\n    return function ($36) {\n        return $35(mouseHandler($36));\n    };\n})();\nvar onMouseOver = /* #__PURE__ */ (function () {\n    var $37 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseover);\n    return function ($38) {\n        return $37(mouseHandler($38));\n    };\n})();\nvar onMouseUp = /* #__PURE__ */ (function () {\n    var $39 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseup);\n    return function ($40) {\n        return $39(mouseHandler($40));\n    };\n})();\nvar onReset = /* #__PURE__ */ handler(\"reset\");\nvar onResize = /* #__PURE__ */ handler(\"resize\");\nvar onScroll = /* #__PURE__ */ handler(\"scroll\");\nvar onSelect = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.select);\nvar onSubmit = /* #__PURE__ */ handler(\"submit\");\nvar onTouchCancel = /* #__PURE__ */ (function () {\n    var $41 = handler(\"touchcancel\");\n    return function ($42) {\n        return $41(touchHandler($42));\n    };\n})();\nvar onTouchEnd = /* #__PURE__ */ (function () {\n    var $43 = handler(\"touchend\");\n    return function ($44) {\n        return $43(touchHandler($44));\n    };\n})();\nvar onTouchEnter = /* #__PURE__ */ (function () {\n    var $45 = handler(\"touchenter\");\n    return function ($46) {\n        return $45(touchHandler($46));\n    };\n})();\nvar onTouchLeave = /* #__PURE__ */ (function () {\n    var $47 = handler(\"touchleave\");\n    return function ($48) {\n        return $47(touchHandler($48));\n    };\n})();\nvar onTouchMove = /* #__PURE__ */ (function () {\n    var $49 = handler(\"touchmove\");\n    return function ($50) {\n        return $49(touchHandler($50));\n    };\n})();\nvar onTouchStart = /* #__PURE__ */ (function () {\n    var $51 = handler(\"touchstart\");\n    return function ($52) {\n        return $51(touchHandler($52));\n    };\n})();\nvar onTransitionEnd = /* #__PURE__ */ handler(\"transitionend\");\nvar onWheel = /* #__PURE__ */ (function () {\n    var $53 = handler(Web_UIEvent_WheelEvent_EventTypes.wheel);\n    return function ($54) {\n        return $53(wheelHandler($54));\n    };\n})();\nvar focusHandler = Unsafe_Coerce.unsafeCoerce;\nvar onBlur = /* #__PURE__ */ (function () {\n    var $55 = handler(Web_HTML_Event_EventTypes.blur);\n    return function ($56) {\n        return $55(focusHandler($56));\n    };\n})();\nvar onFocus = /* #__PURE__ */ (function () {\n    var $57 = handler(Web_UIEvent_FocusEvent_EventTypes.focus);\n    return function ($58) {\n        return $57(focusHandler($58));\n    };\n})();\nvar onFocusIn = /* #__PURE__ */ (function () {\n    var $59 = handler(Web_UIEvent_FocusEvent_EventTypes.focusin);\n    return function ($60) {\n        return $59(focusHandler($60));\n    };\n})();\nvar onFocusOut = /* #__PURE__ */ (function () {\n    var $61 = handler(Web_UIEvent_FocusEvent_EventTypes.focusout);\n    return function ($62) {\n        return $61(focusHandler($62));\n    };\n})();\nvar dragHandler = Unsafe_Coerce.unsafeCoerce;\nvar onDrag = /* #__PURE__ */ (function () {\n    var $63 = handler(Web_HTML_Event_DragEvent_EventTypes.drag);\n    return function ($64) {\n        return $63(dragHandler($64));\n    };\n})();\nvar onDragEnd = /* #__PURE__ */ (function () {\n    var $65 = handler(Web_HTML_Event_DragEvent_EventTypes.dragend);\n    return function ($66) {\n        return $65(dragHandler($66));\n    };\n})();\nvar onDragEnter = /* #__PURE__ */ (function () {\n    var $67 = handler(Web_HTML_Event_DragEvent_EventTypes.dragenter);\n    return function ($68) {\n        return $67(dragHandler($68));\n    };\n})();\nvar onDragExit = /* #__PURE__ */ (function () {\n    var $69 = handler(Web_HTML_Event_DragEvent_EventTypes.dragexit);\n    return function ($70) {\n        return $69(dragHandler($70));\n    };\n})();\nvar onDragLeave = /* #__PURE__ */ (function () {\n    var $71 = handler(Web_HTML_Event_DragEvent_EventTypes.dragleave);\n    return function ($72) {\n        return $71(dragHandler($72));\n    };\n})();\nvar onDragOver = /* #__PURE__ */ (function () {\n    var $73 = handler(Web_HTML_Event_DragEvent_EventTypes.dragover);\n    return function ($74) {\n        return $73(dragHandler($74));\n    };\n})();\nvar onDragStart = /* #__PURE__ */ (function () {\n    var $75 = handler(Web_HTML_Event_DragEvent_EventTypes.dragstart);\n    return function ($76) {\n        return $75(dragHandler($76));\n    };\n})();\nvar onDrop = /* #__PURE__ */ (function () {\n    var $77 = handler(Web_HTML_Event_DragEvent_EventTypes.drop);\n    return function ($78) {\n        return $77(dragHandler($78));\n    };\n})();\nvar clipboardHandler = Unsafe_Coerce.unsafeCoerce;\nvar onCopy = /* #__PURE__ */ (function () {\n    var $79 = handler(Web_Clipboard_ClipboardEvent_EventTypes.copy);\n    return function ($80) {\n        return $79(clipboardHandler($80));\n    };\n})();\nvar onCut = /* #__PURE__ */ (function () {\n    var $81 = handler(Web_Clipboard_ClipboardEvent_EventTypes.cut);\n    return function ($82) {\n        return $81(clipboardHandler($82));\n    };\n})();\nvar onPaste = /* #__PURE__ */ (function () {\n    var $83 = handler(Web_Clipboard_ClipboardEvent_EventTypes.paste);\n    return function ($84) {\n        return $83(clipboardHandler($84));\n    };\n})();\nvar addForeignPropHandler = function (key) {\n    return function (prop) {\n        return function (reader) {\n            return function (f) {\n                var go = function (a) {\n                    return composeKleisliFlipped(reader)(readProp(prop))(Foreign.unsafeToForeign(a));\n                };\n                return handler$prime(key)(composeKleisli(Web_Event_Event.currentTarget)(function (e) {\n                    return Data_Either.either(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function ($85) {\n                        return Data_Maybe.Just.create(f($85));\n                    })(Control_Monad_Except.runExcept(go(e)));\n                }));\n            };\n        };\n    };\n};\nvar onChecked = /* #__PURE__ */ addForeignPropHandler(Web_HTML_Event_EventTypes.change)(\"checked\")(/* #__PURE__ */ Foreign.readBoolean(Data_Identity.monadIdentity));\nvar onSelectedIndexChange = /* #__PURE__ */ addForeignPropHandler(Web_HTML_Event_EventTypes.change)(\"selectedIndex\")(/* #__PURE__ */ Foreign.readInt(Data_Identity.monadIdentity));\nvar onValueChange = /* #__PURE__ */ addForeignPropHandler(Web_HTML_Event_EventTypes.change)(\"value\")(readString);\nvar onValueInput = /* #__PURE__ */ addForeignPropHandler(Web_HTML_Event_EventTypes.input)(\"value\")(readString);\nexport {\n    handler,\n    handler$prime,\n    onAbort,\n    onError,\n    onLoad,\n    onScroll,\n    onChange,\n    onFileUpload,\n    onInput,\n    onInvalid,\n    onReset,\n    onSelect,\n    onSubmit,\n    onTransitionEnd,\n    onCopy,\n    onPaste,\n    onCut,\n    onAuxClick,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    onMouseOver,\n    onMouseOut,\n    onMouseUp,\n    onWheel,\n    onKeyDown,\n    onKeyUp,\n    onBlur,\n    onFocus,\n    onFocusIn,\n    onFocusOut,\n    onDrag,\n    onDragEnd,\n    onDragExit,\n    onDragEnter,\n    onDragLeave,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEnter,\n    onTouchLeave,\n    onTouchMove,\n    onTouchStart,\n    onResize,\n    onValueChange,\n    onValueInput,\n    onSelectedIndexChange,\n    onChecked\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as DOM_HTML_Indexed from \"../DOM.HTML.Indexed/index.js\";\nimport * as DOM_HTML_Indexed_AutocompleteType from \"../DOM.HTML.Indexed.AutocompleteType/index.js\";\nimport * as DOM_HTML_Indexed_ButtonType from \"../DOM.HTML.Indexed.ButtonType/index.js\";\nimport * as DOM_HTML_Indexed_FormMethod from \"../DOM.HTML.Indexed.FormMethod/index.js\";\nimport * as DOM_HTML_Indexed_InputAcceptType from \"../DOM.HTML.Indexed.InputAcceptType/index.js\";\nimport * as DOM_HTML_Indexed_InputType from \"../DOM.HTML.Indexed.InputType/index.js\";\nimport * as DOM_HTML_Indexed_MenuType from \"../DOM.HTML.Indexed.MenuType/index.js\";\nimport * as DOM_HTML_Indexed_MenuitemType from \"../DOM.HTML.Indexed.MenuitemType/index.js\";\nimport * as DOM_HTML_Indexed_OrderedListType from \"../DOM.HTML.Indexed.OrderedListType/index.js\";\nimport * as DOM_HTML_Indexed_PreloadValue from \"../DOM.HTML.Indexed.PreloadValue/index.js\";\nimport * as DOM_HTML_Indexed_ScopeValue from \"../DOM.HTML.Indexed.ScopeValue/index.js\";\nimport * as DOM_HTML_Indexed_StepValue from \"../DOM.HTML.Indexed.StepValue/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_String_Common from \"../Data.String.Common/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Halogen_VDom_DOM_Prop from \"../Halogen.VDom.DOM.Prop/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Halogen_Query_Input.functorInput);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar IProp = function (x) {\n    return x;\n};\nvar ref = /* #__PURE__ */ (function () {\n    var go = function (p) {\n        return function (mel) {\n            return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));\n        };\n    };\n    return function ($29) {\n        return Halogen_HTML_Core.ref(go($29));\n    };\n})();\nvar prop = function (dictIsProp) {\n    return Halogen_HTML_Core.prop(dictIsProp);\n};\nvar prop1 = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropBoolean);\nvar prop2 = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropString);\nvar prop3 = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropInt);\nvar prop4 = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropNumber);\nvar readOnly = /* #__PURE__ */ prop1(\"readOnly\");\nvar rel = /* #__PURE__ */ prop2(\"rel\");\nvar required = /* #__PURE__ */ prop1(\"required\");\nvar rowSpan = /* #__PURE__ */ prop3(\"rowSpan\");\nvar rows = /* #__PURE__ */ prop3(\"rows\");\nvar scope = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropScopeValue)(\"scope\");\nvar selected = /* #__PURE__ */ prop1(\"selected\");\nvar selectedIndex = /* #__PURE__ */ prop3(\"selectedIndex\");\nvar spellcheck = /* #__PURE__ */ prop1(\"spellcheck\");\nvar src = /* #__PURE__ */ prop2(\"src\");\nvar srcDoc = /* #__PURE__ */ prop2(\"srcdoc\");\nvar step = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropStepValue)(\"step\");\nvar tabIndex = /* #__PURE__ */ prop3(\"tabIndex\");\nvar target = /* #__PURE__ */ prop2(\"target\");\nvar title = /* #__PURE__ */ prop2(\"title\");\nvar type_ = function (dictIsProp) {\n    return prop(dictIsProp)(\"type\");\n};\nvar value = function (dictIsProp) {\n    return prop(dictIsProp)(\"value\");\n};\nvar width = /* #__PURE__ */ prop3(\"width\");\nvar preload = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropPreloadValue)(\"preload\");\nvar poster = /* #__PURE__ */ prop2(\"poster\");\nvar placeholder = /* #__PURE__ */ prop2(\"placeholder\");\nvar pattern = /* #__PURE__ */ prop2(\"pattern\");\nvar noValidate = /* #__PURE__ */ prop1(\"noValidate\");\nvar newtypeIProp = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar name = /* #__PURE__ */ prop2(\"name\");\nvar muted = /* #__PURE__ */ prop1(\"muted\");\nvar multiple = /* #__PURE__ */ prop1(\"multiple\");\nvar min = /* #__PURE__ */ prop4(\"min\");\nvar method = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropFormMethod)(\"method\");\nvar max = /* #__PURE__ */ prop4(\"max\");\nvar loop = /* #__PURE__ */ prop1(\"loop\");\nvar id = /* #__PURE__ */ prop2(\"id\");\nvar href = /* #__PURE__ */ prop2(\"href\");\nvar height = /* #__PURE__ */ prop3(\"height\");\nvar functorIProp = {\n    map: function (f) {\n        return function (m) {\n            return map(map1(f))(m);\n        };\n    }\n};\nvar $$for = /* #__PURE__ */ prop2(\"htmlFor\");\nvar expand = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nvar enctype = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropMediaType)(\"enctype\");\nvar draggable = /* #__PURE__ */ prop1(\"draggable\");\nvar download = /* #__PURE__ */ prop2(\"download\");\nvar disabled = /* #__PURE__ */ prop1(\"disabled\");\nvar enabled = /* #__PURE__ */ (function () {\n    var $30 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);\n    return function ($31) {\n        return disabled($30($31));\n    };\n})();\nvar controls = /* #__PURE__ */ prop1(\"controls\");\nvar cols = /* #__PURE__ */ prop3(\"cols\");\nvar colSpan = /* #__PURE__ */ prop3(\"colSpan\");\nvar classes = /* #__PURE__ */ (function () {\n    var $32 = prop2(\"className\");\n    var $33 = Data_String_Common.joinWith(\" \");\n    var $34 = Data_Functor.map(Data_Functor.functorArray)(unwrap);\n    return function ($35) {\n        return $32($33($34($35)));\n    };\n})();\nvar class_ = /* #__PURE__ */ (function () {\n    var $36 = prop2(\"className\");\n    return function ($37) {\n        return $36(unwrap($37));\n    };\n})();\nvar checked = /* #__PURE__ */ prop1(\"checked\");\nvar charset = /* #__PURE__ */ prop2(\"charset\");\nvar autoplay = /* #__PURE__ */ prop1(\"autoplay\");\nvar autofocus = /* #__PURE__ */ prop1(\"autofocus\");\nvar autocomplete = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropAutocompleteType)(\"autocomplete\");\nvar attrNS = /* #__PURE__ */ (function () {\n    var $38 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);\n    return function ($39) {\n        return Halogen_HTML_Core.attr($38($39));\n    };\n})();\nvar attr = /* #__PURE__ */ (function () {\n    return Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);\n})();\nvar list = /* #__PURE__ */ attr(\"list\");\nvar style = /* #__PURE__ */ attr(\"style\");\nvar alt = /* #__PURE__ */ prop2(\"alt\");\nvar action = /* #__PURE__ */ prop2(\"action\");\nvar accept = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropInputAcceptType)(\"accept\");\nexport {\n    IProp,\n    prop,\n    attr,\n    attrNS,\n    ref,\n    expand,\n    alt,\n    charset,\n    class_,\n    classes,\n    cols,\n    rows,\n    colSpan,\n    rowSpan,\n    $$for as for,\n    height,\n    width,\n    href,\n    id,\n    name,\n    rel,\n    src,\n    srcDoc,\n    style,\n    scope,\n    target,\n    title,\n    download,\n    method,\n    action,\n    enctype,\n    noValidate,\n    type_,\n    value,\n    min,\n    max,\n    step,\n    disabled,\n    enabled,\n    required,\n    readOnly,\n    spellcheck,\n    checked,\n    selected,\n    selectedIndex,\n    placeholder,\n    autocomplete,\n    list,\n    autofocus,\n    multiple,\n    pattern,\n    accept,\n    autoplay,\n    controls,\n    loop,\n    muted,\n    poster,\n    preload,\n    draggable,\n    tabIndex,\n    newtypeIProp,\n    functorIProp\n};\nexport {\n    AutocompleteAdditionalName,\n    AutocompleteAddressLevel1,\n    AutocompleteAddressLevel2,\n    AutocompleteAddressLevel3,\n    AutocompleteAddressLevel4,\n    AutocompleteAddressLine1,\n    AutocompleteAddressLine2,\n    AutocompleteAddressLine3,\n    AutocompleteBirthday,\n    AutocompleteBirthdayDay,\n    AutocompleteBirthdayMonth,\n    AutocompleteBirthdayYear,\n    AutocompleteCountry,\n    AutocompleteCountryName,\n    AutocompleteCreditCardAdditionalName,\n    AutocompleteCreditCardExpiration,\n    AutocompleteCreditCardExpirationMonth,\n    AutocompleteCreditCardExpirationYear,\n    AutocompleteCreditCardFamilyName,\n    AutocompleteCreditCardGivenName,\n    AutocompleteCreditCardName,\n    AutocompleteCreditCardNumber,\n    AutocompleteCreditCardSecurityCode,\n    AutocompleteCreditCardType,\n    AutocompleteCurrentPassword,\n    AutocompleteEmail,\n    AutocompleteFamilyName,\n    AutocompleteGivenName,\n    AutocompleteHonorificPrefix,\n    AutocompleteHonorificSuffix,\n    AutocompleteIMPP,\n    AutocompleteLanguage,\n    AutocompleteName,\n    AutocompleteNewPassword,\n    AutocompleteNickname,\n    AutocompleteOff,\n    AutocompleteOn,\n    AutocompleteOneTimeCode,\n    AutocompleteOrganization,\n    AutocompleteOrganizationTitle,\n    AutocompletePhoto,\n    AutocompletePostalCode,\n    AutocompleteSex,\n    AutocompleteStreetAddress,\n    AutocompleteTelephone,\n    AutocompleteTelephoneAreaCode,\n    AutocompleteTelephoneCountryCode,\n    AutocompleteTelephoneExtension,\n    AutocompleteTelephoneLocal,\n    AutocompleteTelephoneLocalPrefix,\n    AutocompleteTelephoneLocalSuffix,\n    AutocompleteTelephoneNational,\n    AutocompleteTransactionAmount,\n    AutocompleteTransactionCurrency,\n    AutocompleteURL,\n    AutocompleteUsername\n} from \"../DOM.HTML.Indexed.AutocompleteType/index.js\";\nexport {\n    ButtonButton,\n    ButtonReset,\n    ButtonSubmit\n} from \"../DOM.HTML.Indexed.ButtonType/index.js\";\nexport {\n    GET,\n    POST\n} from \"../DOM.HTML.Indexed.FormMethod/index.js\";\nexport {\n    InputAcceptType\n} from \"../DOM.HTML.Indexed.InputAcceptType/index.js\";\nexport {\n    InputButton,\n    InputCheckbox,\n    InputColor,\n    InputDate,\n    InputDatetimeLocal,\n    InputEmail,\n    InputFile,\n    InputHidden,\n    InputImage,\n    InputMonth,\n    InputNumber,\n    InputPassword,\n    InputRadio,\n    InputRange,\n    InputReset,\n    InputSearch,\n    InputSubmit,\n    InputTel,\n    InputText,\n    InputTime,\n    InputUrl,\n    InputWeek\n} from \"../DOM.HTML.Indexed.InputType/index.js\";\nexport {\n    MenuContext,\n    MenuList,\n    MenuToolbar\n} from \"../DOM.HTML.Indexed.MenuType/index.js\";\nexport {\n    MenuitemCheckbox,\n    MenuitemCommand,\n    MenuitemRadio\n} from \"../DOM.HTML.Indexed.MenuitemType/index.js\";\nexport {\n    OrderedListAlphabetic,\n    OrderedListNumeric\n} from \"../DOM.HTML.Indexed.OrderedListType/index.js\";\nexport {\n    PreloadAuto,\n    PreloadMetadata,\n    PreloadNone\n} from \"../DOM.HTML.Indexed.PreloadValue/index.js\";\nexport {\n    ScopeAuto,\n    ScopeCol,\n    ScopeColGroup,\n    ScopeRow,\n    ScopeRowGroup\n} from \"../DOM.HTML.Indexed.ScopeValue/index.js\";\nexport {\n    Any,\n    Step\n} from \"../DOM.HTML.Indexed.StepValue/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Aff_Class from \"../Effect.Aff.Class/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Halogen_Query_HalogenQ from \"../Halogen.Query.HalogenQ/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Halogen_Query_HalogenM.functorHalogenM);\nvar queryAll = /* #__PURE__ */ Halogen_Query_HalogenM.queryAll();\nvar query = /* #__PURE__ */ Halogen_Query_HalogenM.query();\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Maybe.bindMaybe);\nvar tellAll = function () {\n    return function (dictIsSymbol) {\n        var queryAll1 = queryAll(dictIsSymbol);\n        return function (dictOrd) {\n            var queryAll2 = queryAll1(dictOrd);\n            return function (label) {\n                return function (req) {\n                    return $$void(queryAll2(label)(req(Data_Unit.unit)));\n                };\n            };\n        };\n    };\n};\nvar tell = function () {\n    return function (dictIsSymbol) {\n        var query1 = query(dictIsSymbol);\n        return function (dictOrd) {\n            var query2 = query1(dictOrd);\n            return function (slot) {\n                return function (label) {\n                    return function (req) {\n                        return $$void(query2(slot)(label)(req(Data_Unit.unit)));\n                    };\n                };\n            };\n        };\n    };\n};\nvar requestAll = function () {\n    return function (dictIsSymbol) {\n        var queryAll1 = queryAll(dictIsSymbol);\n        return function (dictOrd) {\n            var queryAll2 = queryAll1(dictOrd);\n            return function (label) {\n                return function (req) {\n                    return queryAll2(label)(req(identity));\n                };\n            };\n        };\n    };\n};\nvar request = function () {\n    return function (dictIsSymbol) {\n        var query1 = query(dictIsSymbol);\n        return function (dictOrd) {\n            var query2 = query1(dictOrd);\n            return function (slot) {\n                return function (label) {\n                    return function (req) {\n                        return query2(slot)(label)(req(identity));\n                    };\n                };\n            };\n        };\n    };\n};\nvar mkTell = function (act) {\n    return act(Data_Unit.unit);\n};\nvar mkRequest = function (req) {\n    return req(identity);\n};\nvar getHTMLElementRef = /* #__PURE__ */ (function () {\n    var $24 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {\n        return bindFlipped(Web_HTML_HTMLElement.fromElement)(v);\n    });\n    return function ($25) {\n        return $24(Halogen_Query_HalogenM.getRef($25));\n    };\n})();\nexport {\n    mkTell,\n    tell,\n    tellAll,\n    mkRequest,\n    request,\n    requestAll,\n    getHTMLElementRef\n};\nexport {\n    get,\n    gets,\n    modify,\n    modify_,\n    put\n} from \"../Control.Monad.State.Class/index.js\";\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\nexport {\n    liftAff\n} from \"../Effect.Aff.Class/index.js\";\nexport {\n    liftEffect\n} from \"../Effect.Class/index.js\";\nexport {\n    ChildQuery,\n    Fork,\n    GetRef,\n    Join,\n    Kill,\n    Lift,\n    Par,\n    Raise,\n    State,\n    Subscribe,\n    Unsubscribe,\n    HalogenM,\n    fork,\n    getRef,\n    join,\n    kill,\n    query,\n    queryAll,\n    raise,\n    subscribe,\n    subscribe$prime,\n    unsubscribe\n} from \"../Halogen.Query.HalogenM/index.js\";\nexport {\n    Action,\n    Finalize,\n    Initialize,\n    Query,\n    Receive\n} from \"../Halogen.Query.HalogenQ/index.js\";\nexport {\n    RefLabel\n} from \"../Halogen.Query.Input/index.js\";\n","// Generated by purs version 0.15.7\nimport * as Control_Monad_Reader_Trans from \"../Control.Monad.Reader.Trans/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT);\nvar Completed = /* #__PURE__ */ (function () {\n    function Completed(value0) {\n        this.value0 = value0;\n    };\n    Completed.create = function (value0) {\n        return new Completed(value0);\n    };\n    return Completed;\n})();\nvar Failed = /* #__PURE__ */ (function () {\n    function Failed(value0) {\n        this.value0 = value0;\n    };\n    Failed.create = function (value0) {\n        return new Failed(value0);\n    };\n    return Failed;\n})();\nvar Killed = /* #__PURE__ */ (function () {\n    function Killed(value0) {\n        this.value0 = value0;\n    };\n    Killed.create = function (value0) {\n        return new Killed(value0);\n    };\n    return Killed;\n})();\nvar uninterruptible = function (dict) {\n    return dict.uninterruptible;\n};\nvar suspend = function (dict) {\n    return dict.suspend;\n};\nvar never = function (dict) {\n    return dict.never;\n};\nvar monadForkAff = {\n    suspend: Effect_Aff.suspendAff,\n    fork: Effect_Aff.forkAff,\n    join: Effect_Aff.joinFiber,\n    Monad0: function () {\n        return Effect_Aff.monadAff;\n    },\n    Functor1: function () {\n        return Effect_Aff.functorFiber;\n    }\n};\nvar monadKillAff = {\n    kill: Effect_Aff.killFiber,\n    MonadFork0: function () {\n        return monadForkAff;\n    },\n    MonadThrow1: function () {\n        return Effect_Aff.monadThrowAff;\n    }\n};\nvar monadBracketAff = {\n    bracket: function (acquire) {\n        return function (release) {\n            return function (run) {\n                return Effect_Aff.generalBracket(acquire)({\n                    completed: function ($44) {\n                        return release(Completed.create($44));\n                    },\n                    failed: function ($45) {\n                        return release(Failed.create($45));\n                    },\n                    killed: function ($46) {\n                        return release(Killed.create($46));\n                    }\n                })(run);\n            };\n        };\n    },\n    uninterruptible: Effect_Aff.invincible,\n    never: Effect_Aff.never,\n    MonadKill0: function () {\n        return monadKillAff;\n    },\n    MonadError1: function () {\n        return Effect_Aff.monadErrorAff;\n    }\n};\nvar kill = function (dict) {\n    return dict.kill;\n};\nvar join = function (dict) {\n    return dict.join;\n};\nvar fork = function (dict) {\n    return dict.fork;\n};\nvar monadForkReaderT = function (dictMonadFork) {\n    var suspend1 = suspend(dictMonadFork);\n    var fork1 = fork(dictMonadFork);\n    var Monad0 = dictMonadFork.Monad0();\n    var monadReaderT = Control_Monad_Reader_Trans.monadReaderT(Monad0);\n    var Functor1 = dictMonadFork.Functor1();\n    return {\n        suspend: function (v) {\n            return function ($47) {\n                return suspend1(v($47));\n            };\n        },\n        fork: function (v) {\n            return function ($48) {\n                return fork1(v($48));\n            };\n        },\n        join: (function () {\n            var $49 = lift(Monad0);\n            var $50 = join(dictMonadFork);\n            return function ($51) {\n                return $49($50($51));\n            };\n        })(),\n        Monad0: function () {\n            return monadReaderT;\n        },\n        Functor1: function () {\n            return Functor1;\n        }\n    };\n};\nvar monadKillReaderT = function (dictMonadKill) {\n    var MonadThrow1 = dictMonadKill.MonadThrow1();\n    var lift1 = lift(MonadThrow1.Monad0());\n    var kill1 = kill(dictMonadKill);\n    var monadForkReaderT1 = monadForkReaderT(dictMonadKill.MonadFork0());\n    var monadThrowReaderT = Control_Monad_Reader_Trans.monadThrowReaderT(MonadThrow1);\n    return {\n        kill: function (e) {\n            var $52 = kill1(e);\n            return function ($53) {\n                return lift1($52($53));\n            };\n        },\n        MonadFork0: function () {\n            return monadForkReaderT1;\n        },\n        MonadThrow1: function () {\n            return monadThrowReaderT;\n        }\n    };\n};\nvar bracket = function (dict) {\n    return dict.bracket;\n};\nvar monadBracketReaderT = function (dictMonadBracket) {\n    var bracket1 = bracket(dictMonadBracket);\n    var uninterruptible1 = uninterruptible(dictMonadBracket);\n    var MonadError1 = dictMonadBracket.MonadError1();\n    var monadKillReaderT1 = monadKillReaderT(dictMonadBracket.MonadKill0());\n    var monadErrorReaderT = Control_Monad_Reader_Trans.monadErrorReaderT(MonadError1);\n    return {\n        bracket: function (v) {\n            return function (release) {\n                return function (run) {\n                    return function (r) {\n                        return bracket1(v(r))(function (c) {\n                            return function (a) {\n                                return Control_Monad_Reader_Trans.runReaderT(release(c)(a))(r);\n                            };\n                        })(function (a) {\n                            return Control_Monad_Reader_Trans.runReaderT(run(a))(r);\n                        });\n                    };\n                };\n            };\n        },\n        uninterruptible: function (k) {\n            return function (r) {\n                return uninterruptible1(Control_Monad_Reader_Trans.runReaderT(k)(r));\n            };\n        },\n        never: lift((MonadError1.MonadThrow0()).Monad0())(never(dictMonadBracket)),\n        MonadKill0: function () {\n            return monadKillReaderT1;\n        },\n        MonadError1: function () {\n            return monadErrorReaderT;\n        }\n    };\n};\nexport {\n    bracket,\n    fork,\n    join,\n    kill,\n    never,\n    suspend,\n    uninterruptible,\n    Completed,\n    Failed,\n    Killed,\n    monadForkAff,\n    monadForkReaderT,\n    monadKillAff,\n    monadKillReaderT,\n    monadBracketAff,\n    monadBracketReaderT\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Halogen_Data_Slot from \"../Halogen.Data.Slot/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar DriverStateRef = function (x) {\n    return x;\n};\nvar DriverState = function (x) {\n    return x;\n};\nvar unRenderStateX = Unsafe_Coerce.unsafeCoerce;\nvar unDriverStateX = Unsafe_Coerce.unsafeCoerce;\nvar renderStateX_ = function (dictApplicative) {\n    var traverse_ = Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe);\n    return function (f) {\n        return unDriverStateX(function (st) {\n            return traverse_(f)(st.rendering);\n        });\n    };\n};\nvar mkRenderStateX = Unsafe_Coerce.unsafeCoerce;\nvar renderStateX = function (dictFunctor) {\n    return function (f) {\n        return unDriverStateX(function (st) {\n            return mkRenderStateX(f(st.rendering));\n        });\n    };\n};\nvar mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;\nvar mapDriverState = function (f) {\n    return function (v) {\n        return f(v);\n    };\n};\nvar initDriverState = function (component) {\n    return function (input) {\n        return function (handler) {\n            return function (lchs) {\n                return function __do() {\n                    var selfRef = Effect_Ref[\"new\"]({})();\n                    var childrenIn = Effect_Ref[\"new\"](Halogen_Data_Slot.empty)();\n                    var childrenOut = Effect_Ref[\"new\"](Halogen_Data_Slot.empty)();\n                    var handlerRef = Effect_Ref[\"new\"](handler)();\n                    var pendingQueries = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_List_Types.Nil.value))();\n                    var pendingOuts = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_List_Types.Nil.value))();\n                    var pendingHandlers = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n                    var fresh = Effect_Ref[\"new\"](1)();\n                    var subscriptions = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_Map_Internal.empty))();\n                    var forks = Effect_Ref[\"new\"](Data_Map_Internal.empty)();\n                    var ds = {\n                        component: component,\n                        state: component.initialState(input),\n                        refs: Data_Map_Internal.empty,\n                        children: Halogen_Data_Slot.empty,\n                        childrenIn: childrenIn,\n                        childrenOut: childrenOut,\n                        selfRef: selfRef,\n                        handlerRef: handlerRef,\n                        pendingQueries: pendingQueries,\n                        pendingOuts: pendingOuts,\n                        pendingHandlers: pendingHandlers,\n                        rendering: Data_Maybe.Nothing.value,\n                        fresh: fresh,\n                        subscriptions: subscriptions,\n                        forks: forks,\n                        lifecycleHandlers: lchs\n                    };\n                    Effect_Ref.write(ds)(selfRef)();\n                    return mkDriverStateXRef(selfRef);\n                };\n            };\n        };\n    };\n};\nexport {\n    DriverState,\n    mapDriverState,\n    DriverStateRef,\n    unDriverStateX,\n    mkDriverStateXRef,\n    renderStateX,\n    renderStateX_,\n    unRenderStateX,\n    initDriverState\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Applicative_Free from \"../Control.Applicative.Free/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Fork_Class from \"../Control.Monad.Fork.Class/index.js\";\nimport * as Control_Monad_Free from \"../Control.Monad.Free/index.js\";\nimport * as Control_Parallel from \"../Control.Parallel/index.js\";\nimport * as Control_Parallel_Class from \"../Control.Parallel.Class/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Coyoneda from \"../Data.Coyoneda/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Halogen_Aff_Driver_State from \"../Halogen.Aff.Driver.State/index.js\";\nimport * as Halogen_Query_ChildQuery from \"../Halogen.Query.ChildQuery/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Halogen_Query_HalogenQ from \"../Halogen.Query.HalogenQ/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Halogen_Subscription from \"../Halogen.Subscription/index.js\";\nimport * as Unsafe_Reference from \"../Unsafe.Reference/index.js\";\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Maybe.bindMaybe);\nvar lookup = /* #__PURE__ */ Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar discard1 = /* #__PURE__ */ discard(Effect_Aff.bindAff);\nvar traverse_1 = /* #__PURE__ */ Data_Foldable.traverse_(Effect_Aff.applicativeAff);\nvar traverse_2 = /* #__PURE__ */ traverse_1(Data_List_Types.foldableList);\nvar fork = /* #__PURE__ */ Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff);\nvar parSequence_ = /* #__PURE__ */ Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Coyoneda.functorCoyoneda);\nvar parallel = /* #__PURE__ */ Control_Parallel_Class.parallel(Effect_Aff.parallelAff);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Effect_Aff.functorAff);\nvar sequential = /* #__PURE__ */ Control_Parallel_Class.sequential(Effect_Aff.parallelAff);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar insert = /* #__PURE__ */ Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId);\nvar retractFreeAp = /* #__PURE__ */ Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff);\nvar $$delete = /* #__PURE__ */ Data_Map_Internal[\"delete\"](Halogen_Query_HalogenM.ordForkId);\nvar unlessM = /* #__PURE__ */ Control_Monad.unlessM(Effect.monadEffect);\nvar insert1 = /* #__PURE__ */ Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId);\nvar traverse_3 = /* #__PURE__ */ traverse_1(Data_Foldable.foldableMaybe);\nvar lookup1 = /* #__PURE__ */ Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId);\nvar lookup2 = /* #__PURE__ */ Data_Map_Internal.lookup(Data_Ord.ordString);\nvar foldFree = /* #__PURE__ */ Control_Monad_Free.foldFree(Effect_Aff.monadRecAff);\nvar alter = /* #__PURE__ */ Data_Map_Internal.alter(Data_Ord.ordString);\nvar unsubscribe = function (sid) {\n    return function (ref) {\n        return function __do() {\n            var v = Effect_Ref.read(ref)();\n            var subs = Effect_Ref.read(v.subscriptions)();\n            return traverse_(Halogen_Subscription.unsubscribe)(bindFlipped(lookup(sid))(subs))();\n        };\n    };\n};\nvar queueOrRun = function (ref) {\n    return function (au) {\n        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v) {\n            if (v instanceof Data_Maybe.Nothing) {\n                return au;\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return liftEffect(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): \" + [ v.constructor.name ]);\n        });\n    };\n};\nvar handleLifecycle = function (lchs) {\n    return function (f) {\n        return discard1(liftEffect(Effect_Ref.write({\n            initializers: Data_List_Types.Nil.value,\n            finalizers: Data_List_Types.Nil.value\n        })(lchs)))(function () {\n            return bind1(liftEffect(f))(function (result) {\n                return bind1(liftEffect(Effect_Ref.read(lchs)))(function (v) {\n                    return discard1(traverse_2(fork)(v.finalizers))(function () {\n                        return discard1(parSequence_(v.initializers))(function () {\n                            return pure(result);\n                        });\n                    });\n                });\n            });\n        });\n    };\n};\nvar handleAff = /* #__PURE__ */ Effect_Aff.runAff_(/* #__PURE__ */ Data_Either.either(Effect_Exception.throwException)(/* #__PURE__ */ Data_Function[\"const\"](/* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));\nvar fresh = function (f) {\n    return function (ref) {\n        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v) {\n            return liftEffect(Effect_Ref[\"modify$prime\"](function (i) {\n                return {\n                    state: i + 1 | 0,\n                    value: f(i)\n                };\n            })(v.fresh));\n        });\n    };\n};\nvar evalQ = function (render) {\n    return function (ref) {\n        return function (q) {\n            return bind1(liftEffect(Effect_Ref.read(ref)))(function (v) {\n                return evalM(render)(ref)(v[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Query(map(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function[\"const\"](Data_Maybe.Nothing.value))));\n            });\n        };\n    };\n};\nvar evalM = function (render) {\n    return function (initRef) {\n        return function (v) {\n            var evalChildQuery = function (ref) {\n                return function (cqb) {\n                    return bind1(liftEffect(Effect_Ref.read(ref)))(function (v1) {\n                        return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {\n                            var evalChild = function (v3) {\n                                return parallel(bind1(liftEffect(Effect_Ref.read(v3)))(function (dsx) {\n                                    return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {\n                                        return evalQ(render)(ds.selfRef)(v2.value1);\n                                    })(dsx);\n                                }));\n                            };\n                            return map1(v2.value2)(sequential(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));\n                        })(cqb);\n                    });\n                };\n            };\n            var go = function (ref) {\n                return function (v1) {\n                    if (v1 instanceof Halogen_Query_HalogenM.State) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            var v3 = v1.value0(v2.state);\n                            if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {\n                                return pure(v3.value0);\n                            };\n                            if (Data_Boolean.otherwise) {\n                                return discard1(liftEffect(Effect_Ref.write({\n                                    component: v2.component,\n                                    state: v3.value1,\n                                    refs: v2.refs,\n                                    children: v2.children,\n                                    childrenIn: v2.childrenIn,\n                                    childrenOut: v2.childrenOut,\n                                    selfRef: v2.selfRef,\n                                    handlerRef: v2.handlerRef,\n                                    pendingQueries: v2.pendingQueries,\n                                    pendingOuts: v2.pendingOuts,\n                                    pendingHandlers: v2.pendingHandlers,\n                                    rendering: v2.rendering,\n                                    fresh: v2.fresh,\n                                    subscriptions: v2.subscriptions,\n                                    forks: v2.forks,\n                                    lifecycleHandlers: v2.lifecycleHandlers\n                                })(ref)))(function () {\n                                    return discard1(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {\n                                        return pure(v3.value0);\n                                    });\n                                });\n                            };\n                            throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): \" + [ v3.constructor.name ]);\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {\n                        return bind1(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (sid) {\n                            return bind1(liftEffect(Halogen_Subscription.subscribe(v1.value0(sid))(function (act) {\n                                return handleAff(evalF(render)(ref)(new Halogen_Query_Input.Action(act)));\n                            })))(function (finalize) {\n                                return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                                    return discard1(liftEffect(Effect_Ref.modify_(map2(insert(sid)(finalize)))(v2.subscriptions)))(function () {\n                                        return pure(v1.value1(sid));\n                                    });\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {\n                        return discard1(liftEffect(unsubscribe(v1.value0)(ref)))(function () {\n                            return pure(v1.value1);\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Lift) {\n                        return v1.value0;\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {\n                        return evalChildQuery(ref)(v1.value0);\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Raise) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            return bind1(liftEffect(Effect_Ref.read(v2.handlerRef)))(function (handler) {\n                                return discard1(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function () {\n                                    return pure(v1.value1);\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Par) {\n                        return sequential(retractFreeAp(Control_Applicative_Free.hoistFreeAp((function () {\n                            var $118 = evalM(render)(ref);\n                            return function ($119) {\n                                return parallel($118($119));\n                            };\n                        })())(v1.value0)));\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Fork) {\n                        return bind1(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (fid) {\n                            return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                                return bind1(liftEffect(Effect_Ref[\"new\"](false)))(function (doneRef) {\n                                    return bind1(fork(Effect_Aff[\"finally\"](liftEffect(function __do() {\n                                        Effect_Ref.modify_($$delete(fid))(v2.forks)();\n                                        return Effect_Ref.write(true)(doneRef)();\n                                    }))(evalM(render)(ref)(v1.value0))))(function (fiber) {\n                                        return discard1(liftEffect(unlessM(Effect_Ref.read(doneRef))(Effect_Ref.modify_(insert1(fid)(fiber))(v2.forks))))(function () {\n                                            return pure(v1.value1(fid));\n                                        });\n                                    });\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Join) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            return bind1(liftEffect(Effect_Ref.read(v2.forks)))(function (forkMap) {\n                                return discard1(traverse_3(Effect_Aff.joinFiber)(lookup1(v1.value0)(forkMap)))(function () {\n                                    return pure(v1.value1);\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Kill) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            return bind1(liftEffect(Effect_Ref.read(v2.forks)))(function (forkMap) {\n                                return discard1(traverse_3(Effect_Aff.killFiber(Effect_Exception.error(\"Cancelled\")))(lookup1(v1.value0)(forkMap)))(function () {\n                                    return pure(v1.value1);\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.GetRef) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            return pure(v1.value1(lookup2(v1.value0)(v2.refs)));\n                        });\n                    };\n                    throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): \" + [ v1.constructor.name ]);\n                };\n            };\n            return foldFree(go(initRef))(v);\n        };\n    };\n};\nvar evalF = function (render) {\n    return function (ref) {\n        return function (v) {\n            if (v instanceof Halogen_Query_Input.RefUpdate) {\n                return liftEffect(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {\n                    return {\n                        component: st.component,\n                        state: st.state,\n                        refs: alter(Data_Function[\"const\"](v.value1))(v.value0)(st.refs),\n                        children: st.children,\n                        childrenIn: st.childrenIn,\n                        childrenOut: st.childrenOut,\n                        selfRef: st.selfRef,\n                        handlerRef: st.handlerRef,\n                        pendingQueries: st.pendingQueries,\n                        pendingOuts: st.pendingOuts,\n                        pendingHandlers: st.pendingHandlers,\n                        rendering: st.rendering,\n                        fresh: st.fresh,\n                        subscriptions: st.subscriptions,\n                        forks: st.forks,\n                        lifecycleHandlers: st.lifecycleHandlers\n                    };\n                })));\n            };\n            if (v instanceof Halogen_Query_Input.Action) {\n                return bind1(liftEffect(Effect_Ref.read(ref)))(function (v1) {\n                    return evalM(render)(ref)(v1[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));\n                });\n            };\n            throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): \" + [ v.constructor.name ]);\n        };\n    };\n};\nexport {\n    evalF,\n    evalQ,\n    evalM,\n    handleLifecycle,\n    queueOrRun,\n    handleAff\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Fork_Class from \"../Control.Monad.Fork.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Parallel from \"../Control.Parallel/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Console from \"../Effect.Console/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Halogen from \"../Halogen/index.js\";\nimport * as Halogen_Aff_Driver_Eval from \"../Halogen.Aff.Driver.Eval/index.js\";\nimport * as Halogen_Aff_Driver_State from \"../Halogen.Aff.Driver.State/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_Data_Slot from \"../Halogen.Data.Slot/index.js\";\nimport * as Halogen_Query_HalogenQ from \"../Halogen.Query.HalogenQ/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Halogen_Subscription from \"../Halogen.Subscription/index.js\";\nvar bind = /* #__PURE__ */ Control_Bind.bind(Effect.bindEffect);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar for_ = /* #__PURE__ */ Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList);\nvar fork = /* #__PURE__ */ Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect.bindEffect);\nvar traverse_1 = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect);\nvar traverse_2 = /* #__PURE__ */ traverse_1(Data_Foldable.foldableMaybe);\nvar traverse_3 = /* #__PURE__ */ traverse_1(Data_Map_Internal.foldableMap);\nvar discard2 = /* #__PURE__ */ discard(Effect_Aff.bindAff);\nvar parSequence_ = /* #__PURE__ */ Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList);\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);\nvar when = /* #__PURE__ */ Control_Applicative.when(Effect.applicativeEffect);\nvar renderStateX = /* #__PURE__ */ Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect_Aff.functorAff);\nvar foreachSlot = /* #__PURE__ */ Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect);\nvar renderStateX_ = /* #__PURE__ */ Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect);\nvar tailRecM = /* #__PURE__ */ Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect);\nvar voidLeft = /* #__PURE__ */ Data_Functor.voidLeft(Effect.functorEffect);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar liftEffect1 = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Class.monadEffectEffect);\nvar newLifecycleHandlers = /* #__PURE__ */ (function () {\n    return Effect_Ref[\"new\"]({\n        initializers: Data_List_Types.Nil.value,\n        finalizers: Data_List_Types.Nil.value\n    });\n})();\nvar handlePending = function (ref) {\n    return function __do() {\n        var queue = Effect_Ref.read(ref)();\n        Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();\n        return for_(queue)((function () {\n            var $58 = traverse_(fork);\n            return function ($59) {\n                return Halogen_Aff_Driver_Eval.handleAff($58(Data_List.reverse($59)));\n            };\n        })())();\n    };\n};\nvar cleanupSubscriptionsAndForks = function (v) {\n    return function __do() {\n        bindFlipped(traverse_2(traverse_3(Halogen_Subscription.unsubscribe)))(Effect_Ref.read(v.subscriptions))();\n        Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();\n        bindFlipped(traverse_3((function () {\n            var $60 = Effect_Aff.killFiber(Effect_Exception.error(\"finalized\"));\n            return function ($61) {\n                return Halogen_Aff_Driver_Eval.handleAff($60($61));\n            };\n        })()))(Effect_Ref.read(v.forks))();\n        return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();\n    };\n};\nvar runUI = function (renderSpec) {\n    return function (component) {\n        return function (i) {\n            var squashChildInitializers = function (lchs) {\n                return function (preInits) {\n                    return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                        var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));\n                        return Effect_Ref.modify_(function (handlers) {\n                            return {\n                                initializers: new Data_List_Types.Cons(discard2(parSequence_(Data_List.reverse(handlers.initializers)))(function () {\n                                    return discard2(parentInitializer)(function () {\n                                        return liftEffect(function __do() {\n                                            handlePending(st.pendingQueries)();\n                                            return handlePending(st.pendingOuts)();\n                                        });\n                                    });\n                                }), preInits),\n                                finalizers: handlers.finalizers\n                            };\n                        })(lchs);\n                    });\n                };\n            };\n            var runComponent = function (lchs) {\n                return function (handler) {\n                    return function (j) {\n                        return Halogen_Component.unComponent(function (c) {\n                            return function __do() {\n                                var lchs$prime = newLifecycleHandlers();\n                                var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();\n                                var pre = Effect_Ref.read(lchs)();\n                                Effect_Ref.write({\n                                    initializers: Data_List_Types.Nil.value,\n                                    finalizers: pre.finalizers\n                                })(lchs)();\n                                bindFlipped(Halogen_Aff_Driver_State.unDriverStateX((function () {\n                                    var $62 = render(lchs);\n                                    return function ($63) {\n                                        return $62((function (v) {\n                                            return v.selfRef;\n                                        })($63));\n                                    };\n                                })()))(Effect_Ref.read($$var))();\n                                bindFlipped(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();\n                                return $$var;\n                            };\n                        });\n                    };\n                };\n            };\n            var renderChild = function (lchs) {\n                return function (handler) {\n                    return function (childrenInRef) {\n                        return function (childrenOutRef) {\n                            return Halogen_Component.unComponentSlot(function (slot) {\n                                return function __do() {\n                                    var childrenIn = map(slot.pop)(Effect_Ref.read(childrenInRef))();\n                                    var $$var = (function () {\n                                        if (childrenIn instanceof Data_Maybe.Just) {\n                                            Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();\n                                            var dsx = Effect_Ref.read(childrenIn.value0.value0)();\n                                            Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                                                return function __do() {\n                                                    Data_Function.flip(Effect_Ref.write)(st.handlerRef)((function () {\n                                                        var $64 = Data_Maybe.maybe(pure1(Data_Unit.unit))(handler);\n                                                        return function ($65) {\n                                                            return $64(slot.output($65));\n                                                        };\n                                                    })())();\n                                                    return Halogen_Aff_Driver_Eval.handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Receive(slot.input, Data_Unit.unit))))();\n                                                };\n                                            })(dsx)();\n                                            return childrenIn.value0.value0;\n                                        };\n                                        if (childrenIn instanceof Data_Maybe.Nothing) {\n                                            return runComponent(lchs)((function () {\n                                                var $66 = Data_Maybe.maybe(pure1(Data_Unit.unit))(handler);\n                                                return function ($67) {\n                                                    return $66(slot.output($67));\n                                                };\n                                            })())(slot.input)(slot.component)();\n                                        };\n                                        throw new Error(\"Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): \" + [ childrenIn.constructor.name ]);\n                                    })();\n                                    var isDuplicate = map(function ($68) {\n                                        return Data_Maybe.isJust(slot.get($68));\n                                    })(Effect_Ref.read(childrenOutRef))();\n                                    when(isDuplicate)(Effect_Console.warn(\"Halogen: Duplicate slot address was detected during rendering, unexpected results may occur\"))();\n                                    Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();\n                                    return bind(Effect_Ref.read($$var))(renderStateX(function (v) {\n                                        if (v instanceof Data_Maybe.Nothing) {\n                                            return Effect_Exception[\"throw\"](\"Halogen internal error: child was not initialized in renderChild\");\n                                        };\n                                        if (v instanceof Data_Maybe.Just) {\n                                            return pure(renderSpec.renderChild(v.value0));\n                                        };\n                                        throw new Error(\"Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): \" + [ v.constructor.name ]);\n                                    }))();\n                                };\n                            });\n                        };\n                    };\n                };\n            };\n            var render = function (lchs) {\n                return function ($$var) {\n                    return function __do() {\n                        var v = Effect_Ref.read($$var)();\n                        var shouldProcessHandlers = map(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();\n                        when(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();\n                        Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();\n                        Effect_Ref.write(v.children)(v.childrenIn)();\n                        var handler = (function () {\n                            var $69 = Halogen_Aff_Driver_Eval.queueOrRun(v.pendingHandlers);\n                            var $70 = Halogen_Aff_Driver_Eval.evalF(render)(v.selfRef);\n                            return function ($71) {\n                                return $69($$void($70($71)));\n                            };\n                        })();\n                        var childHandler = (function () {\n                            var $72 = Halogen_Aff_Driver_Eval.queueOrRun(v.pendingQueries);\n                            return function ($73) {\n                                return $72(handler(Halogen_Query_Input.Action.create($73)));\n                            };\n                        })();\n                        var rendering = renderSpec.render(function ($74) {\n                            return Halogen_Aff_Driver_Eval.handleAff(handler($74));\n                        })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();\n                        var children = Effect_Ref.read(v.childrenOut)();\n                        var childrenIn = Effect_Ref.read(v.childrenIn)();\n                        foreachSlot(childrenIn)(function (v1) {\n                            return function __do() {\n                                var childDS = Effect_Ref.read(v1)();\n                                renderStateX_(renderSpec.removeChild)(childDS)();\n                                return finalize(lchs)(childDS)();\n                            };\n                        })();\n                        Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {\n                            return {\n                                component: ds$prime.component,\n                                state: ds$prime.state,\n                                refs: ds$prime.refs,\n                                children: children,\n                                childrenIn: ds$prime.childrenIn,\n                                childrenOut: ds$prime.childrenOut,\n                                selfRef: ds$prime.selfRef,\n                                handlerRef: ds$prime.handlerRef,\n                                pendingQueries: ds$prime.pendingQueries,\n                                pendingOuts: ds$prime.pendingOuts,\n                                pendingHandlers: ds$prime.pendingHandlers,\n                                rendering: new Data_Maybe.Just(rendering),\n                                fresh: ds$prime.fresh,\n                                subscriptions: ds$prime.subscriptions,\n                                forks: ds$prime.forks,\n                                lifecycleHandlers: ds$prime.lifecycleHandlers\n                            };\n                        }))();\n                        return when(shouldProcessHandlers)(Data_Function.flip(tailRecM)(Data_Unit.unit)(function (v1) {\n                            return function __do() {\n                                var handlers = Effect_Ref.read(v.pendingHandlers)();\n                                Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers)();\n                                traverse_2((function () {\n                                    var $75 = traverse_(fork);\n                                    return function ($76) {\n                                        return Halogen_Aff_Driver_Eval.handleAff($75(Data_List.reverse($76)));\n                                    };\n                                })())(handlers)();\n                                var mmore = Effect_Ref.read(v.pendingHandlers)();\n                                var $51 = Data_Maybe.maybe(false)(Data_List[\"null\"])(mmore);\n                                if ($51) {\n                                    return voidLeft(Effect_Ref.write(Data_Maybe.Nothing.value)(v.pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();\n                                };\n                                return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);\n                            };\n                        }))();\n                    };\n                };\n            };\n            var finalize = function (lchs) {\n                return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                    return function __do() {\n                        cleanupSubscriptionsAndForks(st)();\n                        var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));\n                        Effect_Ref.modify_(function (handlers) {\n                            return {\n                                initializers: handlers.initializers,\n                                finalizers: new Data_List_Types.Cons(f, handlers.finalizers)\n                            };\n                        })(lchs)();\n                        return foreachSlot(st.children)(function (v) {\n                            return function __do() {\n                                var dsx = Effect_Ref.read(v)();\n                                return finalize(lchs)(dsx)();\n                            };\n                        })();\n                    };\n                });\n            };\n            var evalDriver = function (disposed) {\n                return function (ref) {\n                    return function (q) {\n                        return bind1(liftEffect(Effect_Ref.read(disposed)))(function (v) {\n                            if (v) {\n                                return pure1(Data_Maybe.Nothing.value);\n                            };\n                            return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);\n                        });\n                    };\n                };\n            };\n            var dispose = function (disposed) {\n                return function (lchs) {\n                    return function (dsx) {\n                        return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {\n                            var v = Effect_Ref.read(disposed)();\n                            if (v) {\n                                return Data_Unit.unit;\n                            };\n                            Effect_Ref.write(true)(disposed)();\n                            finalize(lchs)(dsx)();\n                            return Halogen_Aff_Driver_State.unDriverStateX(function (v1) {\n                                return function __do() {\n                                    var v2 = liftEffect1(Effect_Ref.read(v1.selfRef))();\n                                    return for_(v2.rendering)(renderSpec.dispose)();\n                                };\n                            })(dsx)();\n                        });\n                    };\n                };\n            };\n            return bind1(liftEffect(newLifecycleHandlers))(function (lchs) {\n                return bind1(liftEffect(Effect_Ref[\"new\"](false)))(function (disposed) {\n                    return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {\n                        var sio = Halogen_Subscription.create();\n                        var dsx = bindFlipped(Effect_Ref.read)(runComponent(lchs)((function () {\n                            var $77 = Halogen_Subscription.notify(sio.listener);\n                            return function ($78) {\n                                return liftEffect($77($78));\n                            };\n                        })())(i)(component))();\n                        return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                            return pure({\n                                query: evalDriver(disposed)(st.selfRef),\n                                messages: sio.emitter,\n                                dispose: dispose(disposed)(lchs)(dsx)\n                            });\n                        })(dsx)();\n                    });\n                });\n            });\n        };\n    };\n};\nexport {\n    runUI\n};\n","var getEffProp = function (name) {\n  return function (node) {\n    return function () {\n      return node[name];\n    };\n  };\n};\n\nexport function nodeTypeIndex(node) {\n  return node.nodeType;\n}\n\nexport function nodeName(node) {\n  return node.nodeName;\n}\n\nexport const baseURI = getEffProp(\"baseURI\");\nexport const _ownerDocument = getEffProp(\"ownerDocument\");\nexport const _parentNode = getEffProp(\"parentNode\");\nexport const _parentElement = getEffProp(\"parentElement\");\n\nexport function hasChildNodes(node) {\n  return function () {\n    return node.hasChildNodes();\n  };\n}\n\nexport const childNodes = getEffProp(\"childNodes\");\nexport const _firstChild = getEffProp(\"firstChild\");\nexport const _lastChild = getEffProp(\"lastChild\");\nexport const _previousSibling = getEffProp(\"previousSibling\");\nexport const _nextSibling = getEffProp(\"nextSibling\");\nexport const _nodeValue = getEffProp(\"nodeValue\");\n\nexport function setNodeValue(value) {\n  return function (node) {\n    return function () {\n      node.nodeValue = value;\n    };\n  };\n}\n\nexport const textContent = getEffProp(\"textContent\");\n\nexport function setTextContent(value) {\n  return function (node) {\n    return function () {\n      node.textContent = value;\n    };\n  };\n}\n\nexport function normalize(node) {\n  return function () {\n    node.normalize();\n  };\n}\n\nexport function clone(node) {\n  return function () {\n    return node.cloneNode(false);\n  };\n}\n\nexport function deepClone(node) {\n  return function () {\n    return node.cloneNode(true);\n  };\n}\n\nexport function isEqualNode(node1) {\n  return function (node2) {\n    return function () {\n      return node1.isEqualNode(node2);\n    };\n  };\n}\n\nexport function compareDocumentPositionBits(node1) {\n  return function (node2) {\n    return function () {\n      return node1.compareDocumentPosition(node2);\n    };\n  };\n}\n\nexport function contains(node1) {\n  return function (node2) {\n    return function () {\n      return node1.contains(node2);\n    };\n  };\n}\n\nexport function _lookupPrefix(prefix) {\n  return function (node) {\n    return function () {\n      return node.lookupPrefix(prefix);\n    };\n  };\n}\n\nexport function _lookupNamespaceURI(ns) {\n  return function (node) {\n    return function () {\n      return node.lookupNamespaceURI(ns);\n    };\n  };\n}\n\nexport function isDefaultNamespace(ns) {\n  return function (node) {\n    return function () {\n      return node.isDefaultNamespace(ns);\n    };\n  };\n}\n\nexport function insertBefore(node1) {\n  return function (node2) {\n    return function (parent) {\n      return function () {\n        parent.insertBefore(node1, node2);\n      };\n    };\n  };\n}\n\nexport function appendChild(node) {\n  return function (parent) {\n    return function () {\n      parent.appendChild(node);\n    };\n  };\n}\n\nexport function replaceChild(newChild) {\n  return function (oldChild) {\n    return function (parent) {\n      return function () {\n        parent.replaceChild(newChild, oldChild);\n      };\n    };\n  };\n}\n\nexport function removeChild(node) {\n  return function (parent) {\n    return function () {\n      parent.removeChild(node);\n    };\n  };\n}\n","// Generated by purs version 0.15.7\nimport * as Data_Enum from \"../Data.Enum/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nvar compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordInt);\nvar ElementNode = /* #__PURE__ */ (function () {\n    function ElementNode() {\n\n    };\n    ElementNode.value = new ElementNode();\n    return ElementNode;\n})();\nvar AttributeNode = /* #__PURE__ */ (function () {\n    function AttributeNode() {\n\n    };\n    AttributeNode.value = new AttributeNode();\n    return AttributeNode;\n})();\nvar TextNode = /* #__PURE__ */ (function () {\n    function TextNode() {\n\n    };\n    TextNode.value = new TextNode();\n    return TextNode;\n})();\nvar CDATASectionNode = /* #__PURE__ */ (function () {\n    function CDATASectionNode() {\n\n    };\n    CDATASectionNode.value = new CDATASectionNode();\n    return CDATASectionNode;\n})();\nvar EntityReferenceNode = /* #__PURE__ */ (function () {\n    function EntityReferenceNode() {\n\n    };\n    EntityReferenceNode.value = new EntityReferenceNode();\n    return EntityReferenceNode;\n})();\nvar EntityNode = /* #__PURE__ */ (function () {\n    function EntityNode() {\n\n    };\n    EntityNode.value = new EntityNode();\n    return EntityNode;\n})();\nvar ProcessingInstructionNode = /* #__PURE__ */ (function () {\n    function ProcessingInstructionNode() {\n\n    };\n    ProcessingInstructionNode.value = new ProcessingInstructionNode();\n    return ProcessingInstructionNode;\n})();\nvar CommentNode = /* #__PURE__ */ (function () {\n    function CommentNode() {\n\n    };\n    CommentNode.value = new CommentNode();\n    return CommentNode;\n})();\nvar DocumentNode = /* #__PURE__ */ (function () {\n    function DocumentNode() {\n\n    };\n    DocumentNode.value = new DocumentNode();\n    return DocumentNode;\n})();\nvar DocumentTypeNode = /* #__PURE__ */ (function () {\n    function DocumentTypeNode() {\n\n    };\n    DocumentTypeNode.value = new DocumentTypeNode();\n    return DocumentTypeNode;\n})();\nvar DocumentFragmentNode = /* #__PURE__ */ (function () {\n    function DocumentFragmentNode() {\n\n    };\n    DocumentFragmentNode.value = new DocumentFragmentNode();\n    return DocumentFragmentNode;\n})();\nvar NotationNode = /* #__PURE__ */ (function () {\n    function NotationNode() {\n\n    };\n    NotationNode.value = new NotationNode();\n    return NotationNode;\n})();\nvar toEnumNodeType = function (v) {\n    if (v === 1) {\n        return new Data_Maybe.Just(ElementNode.value);\n    };\n    if (v === 2) {\n        return new Data_Maybe.Just(AttributeNode.value);\n    };\n    if (v === 3) {\n        return new Data_Maybe.Just(TextNode.value);\n    };\n    if (v === 4) {\n        return new Data_Maybe.Just(CDATASectionNode.value);\n    };\n    if (v === 5) {\n        return new Data_Maybe.Just(EntityReferenceNode.value);\n    };\n    if (v === 6) {\n        return new Data_Maybe.Just(EntityNode.value);\n    };\n    if (v === 7) {\n        return new Data_Maybe.Just(ProcessingInstructionNode.value);\n    };\n    if (v === 8) {\n        return new Data_Maybe.Just(CommentNode.value);\n    };\n    if (v === 9) {\n        return new Data_Maybe.Just(DocumentNode.value);\n    };\n    if (v === 10) {\n        return new Data_Maybe.Just(DocumentTypeNode.value);\n    };\n    if (v === 11) {\n        return new Data_Maybe.Just(DocumentFragmentNode.value);\n    };\n    if (v === 12) {\n        return new Data_Maybe.Just(NotationNode.value);\n    };\n    return Data_Maybe.Nothing.value;\n};\nvar showNodeType = {\n    show: function (v) {\n        if (v instanceof ElementNode) {\n            return \"ElementNode\";\n        };\n        if (v instanceof AttributeNode) {\n            return \"AttributeNode\";\n        };\n        if (v instanceof TextNode) {\n            return \"TextNode\";\n        };\n        if (v instanceof CDATASectionNode) {\n            return \"CDATASectionNode\";\n        };\n        if (v instanceof EntityReferenceNode) {\n            return \"EntityReferenceNode\";\n        };\n        if (v instanceof EntityNode) {\n            return \"EntityNode\";\n        };\n        if (v instanceof ProcessingInstructionNode) {\n            return \"ProcessingInstructionNode\";\n        };\n        if (v instanceof CommentNode) {\n            return \"CommentNode\";\n        };\n        if (v instanceof DocumentNode) {\n            return \"DocumentNode\";\n        };\n        if (v instanceof DocumentTypeNode) {\n            return \"DocumentTypeNode\";\n        };\n        if (v instanceof DocumentFragmentNode) {\n            return \"DocumentFragmentNode\";\n        };\n        if (v instanceof NotationNode) {\n            return \"NotationNode\";\n        };\n        throw new Error(\"Failed pattern match at Web.DOM.NodeType (line 39, column 1 - line 51, column 37): \" + [ v.constructor.name ]);\n    }\n};\nvar fromEnumNodeType = function (v) {\n    if (v instanceof ElementNode) {\n        return 1;\n    };\n    if (v instanceof AttributeNode) {\n        return 2;\n    };\n    if (v instanceof TextNode) {\n        return 3;\n    };\n    if (v instanceof CDATASectionNode) {\n        return 4;\n    };\n    if (v instanceof EntityReferenceNode) {\n        return 5;\n    };\n    if (v instanceof EntityNode) {\n        return 6;\n    };\n    if (v instanceof ProcessingInstructionNode) {\n        return 7;\n    };\n    if (v instanceof CommentNode) {\n        return 8;\n    };\n    if (v instanceof DocumentNode) {\n        return 9;\n    };\n    if (v instanceof DocumentTypeNode) {\n        return 10;\n    };\n    if (v instanceof DocumentFragmentNode) {\n        return 11;\n    };\n    if (v instanceof NotationNode) {\n        return 12;\n    };\n    throw new Error(\"Failed pattern match at Web.DOM.NodeType (line 68, column 1 - line 68, column 36): \" + [ v.constructor.name ]);\n};\nvar eqNodeType = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof ElementNode && y instanceof ElementNode) {\n                return true;\n            };\n            if (x instanceof AttributeNode && y instanceof AttributeNode) {\n                return true;\n            };\n            if (x instanceof TextNode && y instanceof TextNode) {\n                return true;\n            };\n            if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {\n                return true;\n            };\n            if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {\n                return true;\n            };\n            if (x instanceof EntityNode && y instanceof EntityNode) {\n                return true;\n            };\n            if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {\n                return true;\n            };\n            if (x instanceof CommentNode && y instanceof CommentNode) {\n                return true;\n            };\n            if (x instanceof DocumentNode && y instanceof DocumentNode) {\n                return true;\n            };\n            if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {\n                return true;\n            };\n            if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {\n                return true;\n            };\n            if (x instanceof NotationNode && y instanceof NotationNode) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar ordNodeType = {\n    compare: function (x) {\n        return function (y) {\n            return compare(fromEnumNodeType(x))(fromEnumNodeType(y));\n        };\n    },\n    Eq0: function () {\n        return eqNodeType;\n    }\n};\nvar enumNodeType = {\n    succ: /* #__PURE__ */ Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType),\n    pred: /* #__PURE__ */ Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType),\n    Ord0: function () {\n        return ordNodeType;\n    }\n};\nvar boundedNodeType = /* #__PURE__ */ (function () {\n    return {\n        bottom: ElementNode.value,\n        top: NotationNode.value,\n        Ord0: function () {\n            return ordNodeType;\n        }\n    };\n})();\nvar boundedEnumNodeType = {\n    cardinality: 12,\n    toEnum: toEnumNodeType,\n    fromEnum: fromEnumNodeType,\n    Bounded0: function () {\n        return boundedNodeType;\n    },\n    Enum1: function () {\n        return enumNodeType;\n    }\n};\nexport {\n    ElementNode,\n    AttributeNode,\n    TextNode,\n    CDATASectionNode,\n    EntityReferenceNode,\n    EntityNode,\n    ProcessingInstructionNode,\n    CommentNode,\n    DocumentNode,\n    DocumentTypeNode,\n    DocumentFragmentNode,\n    NotationNode,\n    eqNodeType,\n    ordNodeType,\n    boundedNodeType,\n    enumNodeType,\n    boundedEnumNodeType,\n    showNodeType\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Enum from \"../Data.Enum/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_DOM_Internal_Types from \"../Web.DOM.Internal.Types/index.js\";\nimport * as Web_DOM_NodeType from \"../Web.DOM.NodeType/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar toEnum = /* #__PURE__ */ Data_Enum.toEnum(Web_DOM_NodeType.boundedEnumNodeType);\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar previousSibling = /* #__PURE__ */ (function () {\n    var $4 = map(Data_Nullable.toMaybe);\n    return function ($5) {\n        return $4($foreign[\"_previousSibling\"]($5));\n    };\n})();\nvar parentNode = /* #__PURE__ */ (function () {\n    var $6 = map(Data_Nullable.toMaybe);\n    return function ($7) {\n        return $6($foreign[\"_parentNode\"]($7));\n    };\n})();\nvar parentElement = /* #__PURE__ */ (function () {\n    var $8 = map(Data_Nullable.toMaybe);\n    return function ($9) {\n        return $8($foreign[\"_parentElement\"]($9));\n    };\n})();\nvar ownerDocument = /* #__PURE__ */ (function () {\n    var $10 = map(Data_Nullable.toMaybe);\n    return function ($11) {\n        return $10($foreign[\"_ownerDocument\"]($11));\n    };\n})();\nvar nodeValue = /* #__PURE__ */ (function () {\n    var $12 = map(Data_Nullable.toMaybe);\n    return function ($13) {\n        return $12($foreign[\"_nodeValue\"]($13));\n    };\n})();\nvar nodeType = function () {\n    return function ($14) {\n        return fromJust(toEnum($foreign.nodeTypeIndex($14)));\n    };\n};\nvar nextSibling = /* #__PURE__ */ (function () {\n    var $15 = map(Data_Nullable.toMaybe);\n    return function ($16) {\n        return $15($foreign[\"_nextSibling\"]($16));\n    };\n})();\nvar lookupPrefix = function (p) {\n    var $17 = map(Data_Nullable.toMaybe);\n    var $18 = $foreign[\"_lookupPrefix\"](p);\n    return function ($19) {\n        return $17($18($19));\n    };\n};\nvar lookupNamespaceURI = function (ns) {\n    var $20 = map(Data_Nullable.toMaybe);\n    var $21 = $foreign[\"_lookupNamespaceURI\"](ns);\n    return function ($22) {\n        return $20($21($22));\n    };\n};\nvar lastChild = /* #__PURE__ */ (function () {\n    var $23 = map(Data_Nullable.toMaybe);\n    return function ($24) {\n        return $23($foreign[\"_lastChild\"]($24));\n    };\n})();\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Node\");\nvar firstChild = /* #__PURE__ */ (function () {\n    var $25 = map(Data_Nullable.toMaybe);\n    return function ($26) {\n        return $25($foreign[\"_firstChild\"]($26));\n    };\n})();\nexport {\n    nodeTypeIndex,\n    nodeName,\n    baseURI,\n    hasChildNodes,\n    childNodes,\n    setNodeValue,\n    textContent,\n    setTextContent,\n    normalize,\n    clone,\n    deepClone,\n    isEqualNode,\n    compareDocumentPositionBits,\n    contains,\n    isDefaultNamespace,\n    insertBefore,\n    appendChild,\n    replaceChild,\n    removeChild\n} from \"./foreign.js\";\nexport {\n    fromEventTarget,\n    toEventTarget,\n    nodeType,\n    ownerDocument,\n    parentNode,\n    parentElement,\n    firstChild,\n    lastChild,\n    previousSibling,\n    nextSibling,\n    nodeValue,\n    lookupPrefix,\n    lookupNamespaceURI\n};\n","// Generated by purs version 0.15.7\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Halogen_Aff_Driver from \"../Halogen.Aff.Driver/index.js\";\nimport * as Halogen_Aff_Driver_State from \"../Halogen.Aff.Driver.State/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_VDom_DOM from \"../Halogen.VDom.DOM/index.js\";\nimport * as Halogen_VDom_DOM_Prop from \"../Halogen.VDom.DOM.Prop/index.js\";\nimport * as Halogen_VDom_Machine from \"../Halogen.VDom.Machine/index.js\";\nimport * as Halogen_VDom_Thunk from \"../Halogen.VDom.Thunk/index.js\";\nimport * as Unsafe_Reference from \"../Unsafe.Reference/index.js\";\nimport * as Web_DOM_Node from \"../Web.DOM.Node/index.js\";\nimport * as Web_HTML from \"../Web.HTML/index.js\";\nimport * as Web_HTML_HTMLDocument from \"../Web.HTML.HTMLDocument/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nimport * as Web_HTML_Window from \"../Web.HTML.Window/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar when = /* #__PURE__ */ Control_Applicative.when(Effect.applicativeEffect);\nvar not = /* #__PURE__ */ Data_HeytingAlgebra.not(/* #__PURE__ */ Data_HeytingAlgebra.heytingAlgebraFunction(/* #__PURE__ */ Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)));\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect.bindEffect);\nvar RenderState = function (x) {\n    return x;\n};\nvar substInParent = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {\n                return $$void(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));\n            };\n            if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {\n                return $$void(Web_DOM_Node.appendChild(v)(v2.value0));\n            };\n            return pure(Data_Unit.unit);\n        };\n    };\n};\nvar removeChild = function (v) {\n    return function __do() {\n        var npn = Web_DOM_Node.parentNode(v.node)();\n        return traverse_(function (pn) {\n            return Web_DOM_Node.removeChild(v.node)(pn);\n        })(npn)();\n    };\n};\nvar mkSpec = function (handler) {\n    return function (renderChildRef) {\n        return function (document) {\n            var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {\n                return v.node;\n            });\n            var done = function (st) {\n                if (st instanceof Data_Maybe.Just) {\n                    return Halogen_VDom_Machine.halt(st.value0);\n                };\n                return Data_Unit.unit;\n            };\n            var buildWidget = function (spec) {\n                var buildThunk = Halogen_VDom_Thunk.buildThunk(unwrap)(spec);\n                var $lazy_patch = $runtime_lazy(\"patch\", \"Halogen.VDom.Driver\", function () {\n                    return function (st, slot) {\n                        if (st instanceof Data_Maybe.Just) {\n                            if (slot instanceof Halogen_Component.ComponentSlot) {\n                                Halogen_VDom_Machine.halt(st.value0);\n                                return $lazy_renderComponentSlot(100)(slot.value0);\n                            };\n                            if (slot instanceof Halogen_Component.ThunkSlot) {\n                                var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);\n                                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), $lazy_patch(103), done));\n                            };\n                            throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): \" + [ slot.constructor.name ]);\n                        };\n                        return $lazy_render(104)(slot);\n                    };\n                });\n                var $lazy_render = $runtime_lazy(\"render\", \"Halogen.VDom.Driver\", function () {\n                    return function (slot) {\n                        if (slot instanceof Halogen_Component.ComponentSlot) {\n                            return $lazy_renderComponentSlot(86)(slot.value0);\n                        };\n                        if (slot instanceof Halogen_Component.ThunkSlot) {\n                            var step = buildThunk(slot.value0);\n                            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), $lazy_patch(89), done));\n                        };\n                        throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): \" + [ slot.constructor.name ]);\n                    };\n                });\n                var $lazy_renderComponentSlot = $runtime_lazy(\"renderComponentSlot\", \"Halogen.VDom.Driver\", function () {\n                    return function (cs) {\n                        var renderChild = Effect_Ref.read(renderChildRef)();\n                        var rsx = renderChild(cs)();\n                        var node = getNode(rsx);\n                        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, $lazy_patch(117), done));\n                    };\n                });\n                var patch = $lazy_patch(91);\n                var render = $lazy_render(82);\n                var renderComponentSlot = $lazy_renderComponentSlot(109);\n                return render;\n            };\n            var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);\n            return {\n                buildWidget: buildWidget,\n                buildAttributes: buildAttributes,\n                document: document\n            };\n        };\n    };\n};\nvar renderSpec = function (document) {\n    return function (container) {\n        var render = function (handler) {\n            return function (child) {\n                return function (v) {\n                    return function (v1) {\n                        if (v1 instanceof Data_Maybe.Nothing) {\n                            return function __do() {\n                                var renderChildRef = Effect_Ref[\"new\"](child)();\n                                var spec = mkSpec(handler)(renderChildRef)(document);\n                                var machine = Halogen_VDom_DOM.buildVDom(spec)(v);\n                                var node = Halogen_VDom_Machine.extract(machine);\n                                $$void(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();\n                                return {\n                                    machine: machine,\n                                    node: node,\n                                    renderChildRef: renderChildRef\n                                };\n                            };\n                        };\n                        if (v1 instanceof Data_Maybe.Just) {\n                            return function __do() {\n                                Effect_Ref.write(child)(v1.value0.renderChildRef)();\n                                var parent = Web_DOM_Node.parentNode(v1.value0.node)();\n                                var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();\n                                var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);\n                                var newNode = Halogen_VDom_Machine.extract(machine$prime);\n                                when(not(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();\n                                return {\n                                    machine: machine$prime,\n                                    node: newNode,\n                                    renderChildRef: v1.value0.renderChildRef\n                                };\n                            };\n                        };\n                        throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): \" + [ v1.constructor.name ]);\n                    };\n                };\n            };\n        };\n        return {\n            render: render,\n            renderChild: identity,\n            removeChild: removeChild,\n            dispose: removeChild\n        };\n    };\n};\nvar runUI = function (component) {\n    return function (i) {\n        return function (element) {\n            return bind1(liftEffect(map(Web_HTML_HTMLDocument.toDocument)(bindFlipped(Web_HTML_Window.document)(Web_HTML.window))))(function (document) {\n                return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);\n            });\n        };\n    };\n};\nexport {\n    runUI\n};\n","// Generated by purs version 0.15.7\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_String_Common from \"../Data.String.Common/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Halogen_HTML_Properties from \"../Halogen.HTML.Properties/index.js\";\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar renderLineEnding = /* #__PURE__ */ Halogen_HTML_Core.text(\"\\x0a\");\nvar classString = function (string) {\n    return Halogen_HTML_Properties.classes(mapFlipped(Data_String_Common.split(\" \")(string))(function (s) {\n        return s;\n    }));\n};\nvar fontAwesome = function (glyphName) {\n    return Halogen_HTML_Elements.i([ classString(\"fas \" + glyphName) ])([  ]);\n};\nvar optionalHtml = function (html) {\n    return Halogen_HTML_Elements.span([ classString(\"largeViewport\") ])([ html ]);\n};\nvar optionalText = function (text) {\n    return Halogen_HTML_Elements.span([ classString(\"largeViewport\") ])([ Halogen_HTML_Core.text(text) ]);\n};\nvar alternativeHtml = function (longHtml) {\n    return function (shortAlt) {\n        return [ Halogen_HTML_Elements.span([ classString(\"largeViewport\") ])([ longHtml ]), Halogen_HTML_Elements.span([ classString(\"smallViewport\") ])([ shortAlt ]) ];\n    };\n};\nexport {\n    classString,\n    fontAwesome,\n    optionalText,\n    optionalHtml,\n    alternativeHtml,\n    renderLineEnding\n};\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Monad_Except from \"../Control.Monad.Except/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Foreign from \"../Foreign/index.js\";\nvar readString = /* #__PURE__ */ Foreign.readString(Data_Identity.monadIdentity);\nvar getQueryParam = function (paramName) {\n    return function __do() {\n        var result = $foreign[\"_getQueryParam\"](paramName)();\n        var v = Control_Monad_Except.runExcept(readString(result));\n        if (v instanceof Data_Either.Right) {\n            return new Data_Maybe.Just(v.value0);\n        };\n        return Data_Maybe.Nothing.value;\n    };\n};\nexport {\n    getLocationString,\n    getLocationBaseString,\n    setLocationString,\n    getFragmentString,\n    setFragmentString,\n    getQueryString,\n    setQueryString,\n    _getQueryParam\n} from \"./foreign.js\";\nexport {\n    getQueryParam\n};\n","\"use strict\";\n\nexport const getLocationString = function () {\n  return window.location.href;\n};\n\nexport const getLocationBaseString = function () {\n  return window.location.origin + window.location.pathname;\n};\n\nexport const setLocationString = function (value) {\n  return function () {\n    _setLocationString(value);\n  }\n};\n\nvar _setLocationString = function (value) {\n  var newurl = value;\n  window.location = newurl;\n  // window.history.pushState({}, '', newurl);\n};\n\n\nexport const getFragmentString = function () {\n  var result = window.location.hash;\n  if (result.startsWith(\"#\"))\n    return result.substring(1);\n  return \"\";\n};\n\nexport const setFragmentString = function (value) {\n  return function () {\n    _setFragmentString(value);\n  }\n};\n\nvar _setFragmentString = function (value) {\n  var newurl = window.location.protocol + \"//\" + window.location.host +\n    window.location.pathname + window.location.search + '#' + value;\n  // Only changing the fragment string shouldn't trigger a page reload in\n  // itself, but we do it like this to be safe and avoid potential sitatuations\n  // of changing a query string and then the fragment string still triggering a\n  // reload or something.\n  window.history.pushState({}, '', newurl);\n};\n\n\nexport const getQueryString = function () {\n  var result = window.location.search;\n  if (result.startsWith(\"?\"))\n    return result.substring(1);\n  return \"\";\n};\n\nexport const setQueryString = function (value) {\n  return function () {\n    _setQueryString(value);\n  }\n};\n\nvar _setQueryString = function (value) {\n  var newurl = window.location.protocol + \"//\" + window.location.host +\n    window.location.pathname + '?' + value + window.location.hash;\n  // Set the location without triggering a page reload.\n  window.history.pushState({}, '', newurl);\n};\n\nexport const _getQueryParam = function (paramName) {\n  return function () {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(paramName);\n  }\n}\n","// Generated by purs version 0.15.7\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Aff_Class from \"../Effect.Aff.Class/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Console from \"../Effect.Console/index.js\";\nimport * as Halogen_Aff_Util from \"../Halogen.Aff.Util/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Halogen_HTML_Events from \"../Halogen.HTML.Events/index.js\";\nimport * as Halogen_HTML_Properties from \"../Halogen.HTML.Properties/index.js\";\nimport * as Halogen_Query from \"../Halogen.Query/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Halogen_VDom_Driver from \"../Halogen.VDom.Driver/index.js\";\nimport * as HalogenUtils from \"../HalogenUtils/index.js\";\nimport * as LocationString from \"../LocationString/index.js\";\nimport * as Web_HTML from \"../Web.HTML/index.js\";\nimport * as Web_HTML_HTMLDocument from \"../Web.HTML.HTMLDocument/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nimport * as Web_HTML_HTMLIFrameElement from \"../Web.HTML.HTMLIFrameElement/index.js\";\nimport * as Web_HTML_Window from \"../Web.HTML.Window/index.js\";\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);\nvar bind2 = /* #__PURE__ */ Control_Bind.bind(Data_Maybe.bindMaybe);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar discard1 = /* #__PURE__ */ discard(Halogen_Query_HalogenM.bindHalogenM);\nvar modify_ = /* #__PURE__ */ Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM);\nvar bind3 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar Initialize = /* #__PURE__ */ (function () {\n    function Initialize() {\n\n    };\n    Initialize.value = new Initialize();\n    return Initialize;\n})();\nvar PostLoad = /* #__PURE__ */ (function () {\n    function PostLoad() {\n\n    };\n    PostLoad.value = new PostLoad();\n    return PostLoad;\n})();\nvar setDocumentTitle = function (title) {\n    return function __do() {\n        var window = Web_HTML.window();\n        var document = Web_HTML_Window.document(window)();\n        return Web_HTML_HTMLDocument.setTitle(title)(document)();\n    };\n};\nvar refContent = \"content-iframe\";\nvar initialState = function (v) {\n    return {\n        loading: false,\n        page: \"toc\"\n    };\n};\nvar getPageUrl = function (page) {\n    return \"/blog/\" + (page + \".html\");\n};\nvar render = function (state) {\n    var renderTitle = Halogen_HTML_Elements.div([ HalogenUtils.classString(\"title\") ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href(\"/\"), Halogen_HTML_Properties.target(\"_parent\") ])([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text(\"devblog\") ]) ]) ]);\n    var renderLoadingIcon = Halogen_HTML_Elements.div([ HalogenUtils.classString(\"loadingIcon lds-ellipsis\") ])((function () {\n        if (state.loading) {\n            return [ Halogen_HTML_Elements.div_([  ]), Halogen_HTML_Elements.div_([  ]), Halogen_HTML_Elements.div_([  ]), Halogen_HTML_Elements.div_([  ]) ];\n        };\n        return [  ];\n    })());\n    var renderControls = Halogen_HTML_Elements.div([ HalogenUtils.classString(\"controls\") ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href(\"https://github.com/chtenb/chtenb.github.io\"), Halogen_HTML_Properties.target(\"_blank\"), Halogen_HTML_Properties.tabIndex(-1 | 0) ])([ Halogen_HTML_Elements.button([ Halogen_HTML_Properties.title(\"Open the source code of this website in a new browser tab\") ])([ HalogenUtils.fontAwesome(\"fa-code\"), HalogenUtils.optionalText(\" website code\") ]) ]), Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href(\"https://github.com/chtenb/chtenb.github.io/discussions\"), Halogen_HTML_Properties.target(\"_blank\"), Halogen_HTML_Properties.tabIndex(-1 | 0) ])([ Halogen_HTML_Elements.button([ Halogen_HTML_Properties.title(\"Open the discussion page in a new browser tab\") ])([ HalogenUtils.fontAwesome(\"fa-comments\"), HalogenUtils.optionalText(\" discussions\") ]) ]) ]);\n    var renderHeader = Halogen_HTML_Elements.div([ HalogenUtils.classString(\"header\") ])([ renderTitle, renderControls, renderLoadingIcon ]);\n    var renderContent = Halogen_HTML_Elements.div([ HalogenUtils.classString(\"content\") ])([ Halogen_HTML_Elements.iframe([ Halogen_HTML_Properties.src(getPageUrl(state.page)), Halogen_HTML_Properties.ref(refContent), Halogen_HTML_Events.onLoad(function (v) {\n        return PostLoad.value;\n    }) ]) ]);\n    return Halogen_HTML_Elements.div([ HalogenUtils.classString(\"main\") ])([ renderHeader, renderContent ]);\n};\nvar getContentIFrame = function (dictMonadEffect) {\n    return bind1(Halogen_Query.getHTMLElementRef(refContent))(function (maybeHtmlElement) {\n        return pure(bind2(maybeHtmlElement)(Web_HTML_HTMLIFrameElement.fromHTMLElement));\n    });\n};\nvar getContentDocument = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect));\n    return bind1(getContentIFrame(dictMonadEffect))(function (maybeIFrameElement) {\n        if (maybeIFrameElement instanceof Data_Maybe.Nothing) {\n            return pure(Data_Maybe.Nothing.value);\n        };\n        if (maybeIFrameElement instanceof Data_Maybe.Just) {\n            return liftEffect(function __do() {\n                var maybeDocument = Web_HTML_HTMLIFrameElement.contentDocument(maybeIFrameElement.value0)();\n                return bind2(maybeDocument)(Web_HTML_HTMLDocument.fromDocument);\n            });\n        };\n        throw new Error(\"Failed pattern match at Main (line 144, column 3 - line 148, column 57): \" + [ maybeIFrameElement.constructor.name ]);\n    });\n};\nvar getContentTitle = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect));\n    return bind1(getContentDocument(dictMonadEffect))(function (maybeContentDocument) {\n        if (maybeContentDocument instanceof Data_Maybe.Nothing) {\n            return pure(Data_Maybe.Nothing.value);\n        };\n        if (maybeContentDocument instanceof Data_Maybe.Just) {\n            return liftEffect(function __do() {\n                var title = Web_HTML_HTMLDocument.title(maybeContentDocument.value0)();\n                return new Data_Maybe.Just(title);\n            });\n        };\n        throw new Error(\"Failed pattern match at Main (line 153, column 3 - line 157, column 24): \" + [ maybeContentDocument.constructor.name ]);\n    });\n};\nvar syncDocumentTitle = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect));\n    return bind1(getContentTitle(dictMonadEffect))(function (title) {\n        return liftEffect((function () {\n            if (title instanceof Data_Maybe.Nothing) {\n                return Effect_Console.error(\"Could not retrieve iframe document title\");\n            };\n            if (title instanceof Data_Maybe.Just) {\n                return setDocumentTitle(title.value0);\n            };\n            throw new Error(\"Failed pattern match at Main (line 162, column 18 - line 164, column 33): \" + [ title.constructor.name ]);\n        })());\n    });\n};\nvar focusContent = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect));\n    return bind1(Halogen_Query.getHTMLElementRef(refContent))(function (maybeContentElem) {\n        if (maybeContentElem instanceof Data_Maybe.Nothing) {\n            return liftEffect(Effect_Console.error(\"Could not find content\"));\n        };\n        if (maybeContentElem instanceof Data_Maybe.Just) {\n            return liftEffect(Web_HTML_HTMLElement.focus(maybeContentElem.value0));\n        };\n        throw new Error(\"Failed pattern match at Main (line 125, column 3 - line 127, column 69): \" + [ maybeContentElem.constructor.name ]);\n    });\n};\nvar handleAction = function (dictMonadAff) {\n    var MonadEffect0 = dictMonadAff.MonadEffect0();\n    var focusContent1 = focusContent(MonadEffect0);\n    var liftEffect = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(MonadEffect0));\n    var syncDocumentTitle1 = syncDocumentTitle(MonadEffect0);\n    return function (action) {\n        if (action instanceof Initialize) {\n            return discard1(focusContent1)(function () {\n                return bind1(liftEffect(LocationString.getQueryParam(\"page\")))(function (maybePage) {\n                    if (maybePage instanceof Data_Maybe.Nothing) {\n                        return pure(Data_Unit.unit);\n                    };\n                    if (maybePage instanceof Data_Maybe.Just) {\n                        return modify_(function (v) {\n                            var $52 = {};\n                            for (var $53 in v) {\n                                if ({}.hasOwnProperty.call(v, $53)) {\n                                    $52[$53] = v[$53];\n                                };\n                            };\n                            $52.page = maybePage.value0;\n                            return $52;\n                        });\n                    };\n                    throw new Error(\"Failed pattern match at Main (line 115, column 7 - line 117, column 49): \" + [ maybePage.constructor.name ]);\n                });\n            });\n        };\n        if (action instanceof PostLoad) {\n            return discard1(syncDocumentTitle1)(function () {\n                return liftEffect($foreign.executeSiteAnalytics);\n            });\n        };\n        throw new Error(\"Failed pattern match at Main (line 111, column 3 - line 120, column 40): \" + [ action.constructor.name ]);\n    };\n};\nvar component = function (dictMonadAff) {\n    return Halogen_Component.mkComponent({\n        initialState: initialState,\n        render: render,\n        \"eval\": Halogen_Component.mkEval({\n            handleAction: handleAction(dictMonadAff),\n            handleQuery: Halogen_Component.defaultEval.handleQuery,\n            receive: Halogen_Component.defaultEval.receive,\n            initialize: new Data_Maybe.Just(Initialize.value),\n            finalize: Halogen_Component.defaultEval.finalize\n        })\n    });\n};\nvar component1 = /* #__PURE__ */ component(Effect_Aff_Class.monadAffAff);\nvar main = function __do() {\n    $foreign.executeJavascriptHacks();\n    return Halogen_Aff_Util.runHalogenAff(bind3(Halogen_Aff_Util.awaitBody)(function (body) {\n        return Halogen_VDom_Driver.runUI(component1)(Data_Unit.unit)(body);\n    }))();\n};\nexport {\n    executeJavascriptHacks,\n    executeSiteAnalytics\n} from \"./foreign.js\";\nexport {\n    Initialize,\n    PostLoad,\n    getPageUrl,\n    main,\n    component,\n    initialState,\n    refContent,\n    render,\n    handleAction,\n    focusContent,\n    setDocumentTitle,\n    getContentIFrame,\n    getContentDocument,\n    getContentTitle,\n    syncDocumentTitle\n};\n","import * as Main from '../output/Main';\n\nfunction main () {\n    /*\n    Here we could add variables such as\n\n    var baseUrl = process.env.BASE_URL;\n\n    Parcel will replace `process.env.BASE_URL`\n    with the string contents of the BASE_URL environment\n    variable at bundle/build time.\n    A .env file can also be used to override shell variables\n    for more information, see https://en.parceljs.org/env.html\n\n    These variables can be supplied to the Main.main function.\n    However, you will need to change the type to accept variables, by default it is an Effect.\n    You will probably want to make it a function from String -> Effect ()\n  */\n\n  Main.main();\n}\n\n// For HMR info see: https://parceljs.org/hmr.html\n\nconsole.log('Starting app');\nmain();\n"],"names":["$62b3ded9d4f7f437$export$5d114b05173d62d0","root","document","querySelector","window","addEventListener","style","setProperty","Math","max","documentElement","clientHeight","innerHeight","$62b3ded9d4f7f437$export$d642d364e2fe1c45","gtag","dataLayer","push","arguments","Date","$5807467a73465f3c$export$3af17640bddf7212","compose","f","g","x","$5be483788e0e6f04$export$f0954fd7d5368655","dict","identity","$5be483788e0e6f04$export$7037e3b2ba3bd7aa","Semigroupoid0","$5089f43af3d55e5d$export$4bed41887d8c5096","$f57f4b701aa7b66e$export$8a83211c878a3f1f","b","a","$f57f4b701aa7b66e$export$5b38a098e5a9e7ca","v","$05149ea687d6b460$export$523c0b569236b342","undefined","$f4b2eb11fc32ed34$export$871de8747c9eaa88","map","$f4b2eb11fc32ed34$export$5c8c64e4bc0bcb7a","dictFunctor","map1","fa","$f4b2eb11fc32ed34$export$490e536ee7389aeb","$f4b2eb11fc32ed34$export$6775eb02dd4c5e2a","$f4b2eb11fc32ed34$export$2330f868b62ed546","arr","l","length","result","Array","i","$7576d3a958d66ab0$var$identity","$7576d3a958d66ab0$export$5635d7ef4b8fee1c","apply","$7576d3a958d66ab0$export$3d5d566a030a20fc","dictApply","apply1","Functor0","$c50cfdb0b9e8fa31$export$48ec4a2b1cfc6557","pure","$c50cfdb0b9e8fa31$export$a55877ca9db47377","dictApplicative","pure1","v1","Error","constructor","name","$70cd3177464e7915$export$584af591d945b55a","discard","$70cd3177464e7915$export$2385a24977818dd0","bind","$70cd3177464e7915$export$f2077a1c19a006d9","dictBind","$70cd3177464e7915$export$ea9fbbe247ef8e50","bindFlipped1","$70cd3177464e7915$export$f73711e565ded7e","String","fromCharCode","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","$e07f6ef164bf0728$var$unsafeCompareImpl","lt","eq","gt","y","$e07f6ef164bf0728$export$654933317498633e","$e07f6ef164bf0728$export$bfcbb0304ffa620f","$f4eec6a416d226bf$var$refEq","r1","r2","$37b880af5f4991bd$export$fa624555ca2acbc8","$37b880af5f4991bd$export$e65788c6d4494539","$5026be88823ef1f4$export$7158f0ceb70f54c7","LT","value","$5026be88823ef1f4$export$b023c82b48e70453","GT","$5026be88823ef1f4$export$1c0a5d05eb3f6e18","EQ","$97937c29f879e68e$export$c5f2758e49b2b86a","compare","Eq0","$97937c29f879e68e$export$ff461bf68e7dd332","$97937c29f879e68e$export$398604a469f7de9a","$f8fc227945eb179e$export$80bf595f9d9a1157","tt","$f8fc227945eb179e$export$6003a5f097c73977","not","$f8fc227945eb179e$export$6c53455e54f455ef","implies","$f8fc227945eb179e$export$f59495b1b7502b33","ff","$f8fc227945eb179e$export$9bd7ee00e37438db","disj","$f8fc227945eb179e$export$d7d9283ee84f4c3f","conj","b1","b2","$f8fc227945eb179e$export$fb254c661fe9c0db","$f8fc227945eb179e$export$e9ae480d80dfc592","dictHeytingAlgebra","ff1","tt1","implies1","conj1","disj1","not1","$d7bf9817a417d4ae$export$d082f07d0a8e9909","append","xs","ys","concat","$d7bf9817a417d4ae$export$10d8903dec122b9d","$784e1bd3d26d71da$export$9a7d64bc1d75357","mempty","$71f2e2e9476163f8$export$1908877435b1d5e9","Tuple","value0","value1","this","create","$71f2e2e9476163f8$export$6f71268a1666ab58","$71f2e2e9476163f8$export$19ab04734dcb0ff0","m","$71f2e2e9476163f8$export$9e770fa6ce19a9d6","$f2d5035ce6148af6$export$ca000e230c0caa3e","state","$f2d5035ce6148af6$export$45b91115a89d6020","dictMonadState","state1","s","$06733ae99ed4f534$var$identity","$06733ae99ed4f534$export$bebe9059409a0d04","Nothing","$06733ae99ed4f534$export$8a67b48435b5d073","Just","$06733ae99ed4f534$export$f8b8b9ce72e9ccbf","v2","$06733ae99ed4f534$export$4967676db1b89293","$06733ae99ed4f534$export$c15bd07a493e1236","$06733ae99ed4f534$export$fdd2427f0e60fd66","$06733ae99ed4f534$var$map","$06733ae99ed4f534$export$43db023a260c5e9f","$06733ae99ed4f534$export$2506262575dd10a7","$06733ae99ed4f534$export$22d9917da16590e7","$06733ae99ed4f534$export$e5fea5661dee377","Apply0","$b28443a27438717a$var$Aff","EMPTY","PURE","THROW","CATCH","SYNC","ASYNC","BIND","BRACKET","FORK","SEQ","MAP","APPLY","ALT","CONS","RESUME","RELEASE","FINALIZER","FINALIZED","FORKED","Aff","tag","_1","_2","_3","AffCtr","fn","nonCanceler","error","runEff","eff","setTimeout","runSync","left","right","runAsync","k","Scheduler","limit","size","ix","queue","draining","drain","thunk","isDraining","enqueue","cb","tmp","SUSPENDED","CONTINUE","STEP_BIND","STEP_RESULT","PENDING","RETURN","COMPLETED","Fiber","util","supervisor","aff","runTick","status","step","fail","interrupt","bhead","btail","attempts","bracketCount","joinId","joins","rethrow","run","localRunTick","attempt","e","isLeft","fromRight","register","sequential","fromLeft","killed","failed","completed","hasOwnProperty","handler","onComplete","join","jid","kill","canceler","isSuspended","runPar","par","fiberId","fibers","killId","kills","early","kid","head","tail","count","loop","lhs","rhs","resolve","fiber","fid","killError","killCb","innerKills","newKills","cancel","Pure","Throw","Catch","Sync","Async","Bind","Bracket","Fork","Seq","ParMap","ParApply","ParAlt","Supervisor","isEmpty","killAll","killCount","$b28443a27438717a$export$68c6660df485915b","$b28443a27438717a$export$520252a01094c36e","$b28443a27438717a$export$f97e7884af471963","immediate","$b28443a27438717a$export$3c6532f01a0290eb","$b28443a27438717a$export$49d5975414e0a979","$b28443a27438717a$export$9ad792f02752f447","acquire","options","$b28443a27438717a$export$139486a45824a247","$d3d065da31679be1$export$551dd5524146e426","dictMonad","Bind1","unless","Applicative0","mb","$d3d065da31679be1$export$2f6ca3d3b1f80bf5","f$prime","a$prime","$7d4cccdf062a2261$export$37c4d04eafdc5515","Left","$7d4cccdf062a2261$export$19db0165690c701a","Right","$7d4cccdf062a2261$export$f0a413d3d6075601","$7d4cccdf062a2261$export$5f5be1bb6cd1fded","$01fd16aefb19fd56$export$f6d4f01ca39c2fe","$6c2f8951ecf9531e$var$$runtime_lazy","moduleName","init","val","lineNumber","ReferenceError","$6c2f8951ecf9531e$export$7e900d895707a1af","$6c2f8951ecf9531e$export$89bf999217d3022a","$6c2f8951ecf9531e$export$855330f8a2a9f2e8","$6c2f8951ecf9531e$var$$lazy_applyEffect","$6c2f8951ecf9531e$var$$lazy_functorEffect","$6c2f8951ecf9531e$export$91fce01ecf0438e1","$ad2cf6904bca3ba1$export$a3bc9b8ed74fc","msg","$ad2cf6904bca3ba1$export$de0c4a986b439e52","$5dfefa023749ded0$export$8bf7aba4a9e09055","throwError","$5dfefa023749ded0$export$3dede90624df3ba9","catchError","$5dfefa023749ded0$export$410a452afcd48948","dictMonadError","catchError1","Monad0","MonadThrow0","$52","$50c50d1f444e5fa4$export$544bf02140fa9a77","$50c50d1f444e5fa4$export$dc85e8383eafbd81","$50c50d1f444e5fa4$export$c7d2c62721e92954","$50c50d1f444e5fa4$export$91e759983456b85e","$50c50d1f444e5fa4$export$fd3b2458e55fc503","$50c50d1f444e5fa4$export$9a2f2fd6148bc6d0","$e521936ea118867a$export$aafa59e2e03f2942","ref","$e521936ea118867a$export$68d8715fc104d294","$90327512d8280b8d$var$$$void","$90327512d8280b8d$export$b8cb59497041ffe4","$90327512d8280b8d$export$4d5401161a900ce1","t","$90327512d8280b8d$export$3ff57735a52b8713","s$prime","$90327512d8280b8d$export$45b91115a89d6020","$f93520de2fa37b44$var$bindFlipped","$f93520de2fa37b44$var$map","$f93520de2fa37b44$export$550acbd06a1f5a6a","Loop","$f93520de2fa37b44$export$7fe28cb29e71bf10","Done","$f93520de2fa37b44$export$c025cfd4cc93300b","tailRecM","$f93520de2fa37b44$export$c2472dc015e90d28","fromDone","r","$ac8b3532514ac019$export$401372c57776dc","$f2c9b767d25cfbb9$export$86a2e24932ca2aa0","liftEffect","$f2c9b767d25cfbb9$export$34255e15eb56d2b3","$d2284b2d3e1b6f87$var$map","$d2284b2d3e1b6f87$export$34cbd9fbda5c1fb2","$d2284b2d3e1b6f87$export$d684c62fe584fcfa","$d2284b2d3e1b6f87$export$5a198347e9244c74","$d2284b2d3e1b6f87$export$963960a96c103d2f","$d2284b2d3e1b6f87$export$a8cbc0f84e8b069b","$187","$d2284b2d3e1b6f87$export$581feac922061bf0","functorExceptT1","$188","$189","$d2284b2d3e1b6f87$export$75f89ba5e7a712b0","$198","monadExceptT1","$199","$7abe8fbe97ebda87$export$6e22c362a0406a2c","empty","$a4e6c090e9e673b6$export$8c14e57e778d3873","$4fa4836228a192cc$var$coerce","$4fa4836228a192cc$export$debb760848ca95a","$86141680556a7436$export$3c7b24ce1c81e349","$86141680556a7436$export$451942af9381149c","parallel","$20615e99b278adf5$export$eb54baf0b342cb1d","bimap","$4fe7b6acfba7f29f$export$a11cb61c36c4a4cf","foldr","$4fe7b6acfba7f29f$export$33f63ccdb08d8723","applySecond","dictFoldable","foldr2","$454","$4fe7b6acfba7f29f$export$9747ee7caa0b40b1","traverse_1","$4fe7b6acfba7f29f$export$50ae948ca12cdcbc","foldl","$4fe7b6acfba7f29f$export$ff97dbee91e727b6","foldMap","dictMonoid","$4fe7b6acfba7f29f$export$e97014618a7eb593","acc","len","Semigroup0","$4fe7b6acfba7f29f$export$b66cdc0497d8a99a","array1","array2","array3","c","concat2","$355d9520a1199e68$var$identity","$355d9520a1199e68$export$a907a2b4fd85b16b","dictParallel","parTraverse_1","traverse_","Applicative1","$48","$50","$49","$355d9520a1199e68$export$3b8cfe43eb195e1d","$c02f07bc0f38e9e9$export$c62839628b30a695","$d8f9d43a2c2b18d5$export$b479f9f69f916b6a","$dcd3eefef707675c$export$ddf616d7646fcc8e","$8bcde8f642a64c7d$var$crashWith","$8bcde8f642a64c7d$export$cb50937af21de128","$8bcde8f642a64c7d$export$51b220bae4359b72","$edf0339512807bee$var$$runtime_lazy","$edf0339512807bee$var$pure","$edf0339512807bee$var$$$void","$edf0339512807bee$var$map","$edf0339512807bee$export$4de6f17bc3dfa03","$edf0339512807bee$export$d7f9012ed771d686","$edf0339512807bee$export$e8a7d9b8d7dc616a","$edf0339512807bee$var$map1","$edf0339512807bee$export$469c8a16c186651e","$edf0339512807bee$var$ffiUtil","$edf0339512807bee$var$makeFiber","$b28443a27438717a$export$f24188c8fd3f1234","$edf0339512807bee$export$30b347ca11a80af4","$edf0339512807bee$export$df5598cc12b9c8c","$edf0339512807bee$export$83901714774e2edc","aff1","aff2","$edf0339512807bee$export$b147a380fa8fdc0e","$edf0339512807bee$export$9dc0454a98607988","$edf0339512807bee$export$f885f489dcf38a2d","$edf0339512807bee$var$$lazy_applyAff","$edf0339512807bee$var$pure2","$edf0339512807bee$var$bind1","$edf0339512807bee$var$bindFlipped","$edf0339512807bee$export$666a030cecdf96c","$edf0339512807bee$var$liftEffect","$edf0339512807bee$export$952106a975f35ae2","$75","$edf0339512807bee$export$f3d782c2b95165ad","$edf0339512807bee$export$29466a041ff3b3e0","$edf0339512807bee$export$c65b2010df1810d","suspended","$edf0339512807bee$export$37a9b80154c7d256","$edf0339512807bee$export$9efce1646e93cba4","$edf0339512807bee$var$$$try","$edf0339512807bee$export$ef62257e6f8a5f8c","$80","$edf0339512807bee$export$60f50bfed4143f9d","$edf0339512807bee$export$cb4623454f96d5e0","$edf0339512807bee$var$$lazy_applicativeParAff","$82","$83","$edf0339512807bee$export$389e6cb252ce112f","$edf0339512807bee$export$974f8db4a62dd716","go","res","$edf0339512807bee$export$8deb6e154ce67af6","$b6d6cce78665f23d$export$bd75e69808ef8e57","liftAff","MonadEffect0","$93c729927fdf3160$export$c106dd0671a0fc2d","console","warn","$93c729927fdf3160$export$a3bc9b8ed74fc","$17a55b211df71f15$var$getEffProp","node","$305519516124a7ff$export$7b1b591b262c240","$305519516124a7ff$export$9b7835891cf7097a","$0a5aaf95f168428e$export$b187f57ee1822bc5","$0a5aaf95f168428e$export$1ba013b88f4f21f3","n","$77e12228cc269e35$var$map","$98db70b23aa8a6ea$export$f5cdf3809b4587f3","event","$2603425f82e959df$export$8291e5b88f90ce4","$4d89ff275c04492e$export$e3dc45f84eae905c","nothing","just","ty","obj","proto","Object","getPrototypeOf","constructorName","$6d8c9719a60f7848$export$5235d6e581ca586e","$99cfc603fe5cc0f7$export$669f6ea7d267feaf","Loading","$99cfc603fe5cc0f7$export$43d8ad7b9c99dd97","Interactive","$99cfc603fe5cc0f7$export$37474717eef9e2a4","Complete","$f6c9290a5db8f197$var$map","$f6c9290a5db8f197$export$c8b651b897da2de","$f6c9290a5db8f197$export$ce0e204f587740c3","$f6c9290a5db8f197$export$1ae2b664eea77b7e","doc","$4","$5","readyState","$0e1ad3264aa8b3c4$export$4bf8a366db6a678b","$f6c9290a5db8f197$export$cb6b1c55e7404aef","$ccf49930316caf57$export$b2a016fb14adc1e4","prototype","toString","call","indexOf","$5ae75883a0b7923c$export$83a0de4644f1fbc4","$5ae75883a0b7923c$export$c56654a6d0e3bd48","$bd620e99ccde661e$var$map","$bd620e99ccde661e$export$f9471d229cb6cb3f","$bd620e99ccde661e$export$a186087d330c547b","iframe","contentDocument","$aa35a24624ec08d2$export$5a7bfc01df82fcd1","$6b26c9b0fa2d7b7a$export$55c9526d22b9f8e6","$98632a8bc67f7e8c$export$ead50553077ff635","$deee5b6018c98796$var$bind","$deee5b6018c98796$var$liftEffect","$deee5b6018c98796$var$bindFlipped","$deee5b6018c98796$var$composeKleisliFlipped","$deee5b6018c98796$var$pure","$deee5b6018c98796$var$bindFlipped1","$deee5b6018c98796$var$pure1","$deee5b6018c98796$var$map","$deee5b6018c98796$var$discard","$deee5b6018c98796$var$throwError","$deee5b6018c98796$export$895e5c0dd54cd456","query","qs","$2","selector","$3","$16","$17","mel","$deee5b6018c98796$export$1b79e4d7fc8e4817","$deee5b6018c98796$export$11dc33decdfc25c9","callback","type","et","listener","useCapture","target","$98db70b23aa8a6ea$export$3f65cefe8380dbea","removeEventListener","$98db70b23aa8a6ea$export$8ff9f68337b520c0","$deee5b6018c98796$export$f79c83a36c9670be","body","$b890a9c9ccf92ae9$export$49a1dce2f81a97d6","$b890a9c9ccf92ae9$export$7488c940d035302c","$026fde5446dd624a$var$CoyonedaF","CoyonedaF","$026fde5446dd624a$export$1088317934ed5679","$026fde5446dd624a$export$cc61df270d10d232","fi","$026fde5446dd624a$export$bd40aba71422b460","$180","$026fde5446dd624a$export$6320c031d6b6270f","$1f1c3fb67e79b37f$export$d8deaab87a4e223a","NonEmpty","$1f1c3fb67e79b37f$export$439306a4dcaafbb9","dictPlus","$78c799cba34fcb8d$export$c1bed610ade55e1c","Nil","$78c799cba34fcb8d$export$74c44e616647f5c0","Cons","$78c799cba34fcb8d$export$40b9e4330ffd17e3","$copy_v","$copy_v1","$tco_result","$tco_var_v","$tco_done","$tco_loop","$copy_v2","$copy_v3","v3","$tco_var_v2","$tco_done1","$78c799cba34fcb8d$export$92659ee1fc91a075","rev","$284","$285","$copy_b","$tco_var_b","append2","$286","$287","$78c799cba34fcb8d$var$foldr","$78c799cba34fcb8d$export$11cb7909a85856b","$78c799cba34fcb8d$var$append1","$78c799cba34fcb8d$export$97980ce7ea95015b","alt","$78c799cba34fcb8d$export$55d622505c452dcb","Alt0","$3d4fd987da5242ff$export$66c1ae025e96b4bc","$3d4fd987da5242ff$export$7b1b591b262c240","$ea3eb84de0acf574$export$3024f3bfb62054a3","Leaf","$ea3eb84de0acf574$export$9276dd97bf62cc8d","Two","value2","value3","$ea3eb84de0acf574$export$eadfa7aed248243e","Three","value4","value5","value6","$ea3eb84de0acf574$var$TwoLeft","TwoLeft","$ea3eb84de0acf574$var$TwoRight","TwoRight","$ea3eb84de0acf574$var$ThreeLeft","ThreeLeft","$ea3eb84de0acf574$var$ThreeMiddle","ThreeMiddle","$ea3eb84de0acf574$var$ThreeRight","ThreeRight","$ea3eb84de0acf574$var$KickUp","KickUp","$ea3eb84de0acf574$export$dfc7155ac0343b8","dictOrd","v4","$ea3eb84de0acf574$var$fromZipper","$copy_dictOrd","$tco_var_dictOrd","$ea3eb84de0acf574$export$21a5ca8aa77d35ff","fromZipper1","up","$tco_var_v1","$ea3eb84de0acf574$export$3e41007ebfff0e64","$copy_ctx","$copy_ctxs","$copy_tree","$tco_var_ctxs","ctxs","tree","removeMaxNode","$copy_m","ctx","$tco_var_ctx","maxNode","$tco_done2","key","$tco_done3","leaves","$ea3eb84de0acf574$export$4295a0c2ad7aa544","z","$ea3eb84de0acf574$export$6e22c362a0406a2c","$ea3eb84de0acf574$export$1822828d790e23ee","pop1","$ea3eb84de0acf574$export$22a7378e1d3307a4","lookup1","delete1","insert1","$0f3b7f18059106fc$export$91dbfdfb14db6990","$54","$0f3b7f18059106fc$export$6e22c362a0406a2c","$5b07e36f812dd04b$export$ec1dc8fbeea3467e","$969bbf7e7aa55092$export$f4c20fd541e0bbe4","RefUpdate","$969bbf7e7aa55092$export$e19cd5f9376f8cee","Action","fill","emptyList","curryCons","$fc8c1182ec2aefec$export$f24224f1c91d8156","mergeFromTo","fromOrdering","xs1","xs2","from","to","mid","j","$396c4c3d9e7fae3c$var$fromJust","$396c4c3d9e7fae3c$export$de3a4d4a0d731119","$396c4c3d9e7fae3c$export$90f9093465da3136","l1","slice","splice","$396c4c3d9e7fae3c$export$9ea2b6c3fae093d8","$47a0a3ebf66dcc6a$export$fd55ce593607084a","Step","$47a0a3ebf66dcc6a$export$4f45170fb98a7886","$47a0a3ebf66dcc6a$export$35d34bc0ed591a92","$47a0a3ebf66dcc6a$export$dc52c2e07163a142","$47a0a3ebf66dcc6a$export$ba038fef9cd0a0de","$47a0a3ebf66dcc6a$export$f9380c9a627682d3","$bef4063d6d8fe507$var$map","$bef4063d6d8fe507$var$map1","$bef4063d6d8fe507$export$5f1af8db9871e1d6","Text","$bef4063d6d8fe507$export$cc2832fafe367c5e","Elem","$bef4063d6d8fe507$export$bade370ab89110b","Keyed","$bef4063d6d8fe507$export$a829527ff4e4114a","Widget","$bef4063d6d8fe507$export$b73d5241bf90e3b6","Grafted","$bef4063d6d8fe507$export$8ac9228c788aaa24","Graft","$bef4063d6d8fe507$export$c0694dcc5ceec5fe","$61","$bef4063d6d8fe507$export$9bae923d92949c2f","$bef4063d6d8fe507$var$bimap","$63","$64","$bef4063d6d8fe507$export$355e219ccdea0aec","$39e0beec4569345c$export$e21bd765865a4e96","$39e0beec4569345c$export$eecc4ddbfda9d798","$39e0beec4569345c$export$e766566cf460084","as","fk","o","$39e0beec4569345c$export$ca7590ccd55f275f","o1","f1","f2","f3","o2","$39e0beec4569345c$export$9bc2d847a861e3d8","$39e0beec4569345c$export$c8a8987d4410bf2d","ns","createElementNS","createElement","$39e0beec4569345c$export$11c1557a40268f0f","childNodes","item","insertBefore","$39e0beec4569345c$export$7ae609f7af59e4f7","parentNode","removeChild","$39e0beec4569345c$export$b54be7ce267a037b","$39e0beec4569345c$export$9fec4d97f1922e0b","attr","el","setAttributeNS","setAttribute","$39e0beec4569345c$export$6399f3bb52316b2c","removeAttributeNS","removeAttribute","$0061661dcaa2328e$export$b8cb59497041ffe4","$ac7bed94ac89bf37$export$7ff190aa1ea44157","$ac7bed94ac89bf37$export$7c850c5af9b9983e","$ac7bed94ac89bf37$export$fcec48ff7d1e433f","$ac7bed94ac89bf37$export$af208d62fa81d7e9","$875f34aecc7bf161$var$getProp","doctype","$6cbf6bdab8368bba$export$83a0de4644f1fbc4","$784c06f0344d34c4$var$$runtime_lazy","$784c06f0344d34c4$var$haltWidget","widget","$784c06f0344d34c4$var$$lazy_patchWidget","vdom","build","$784c06f0344d34c4$var$patchWidget","$784c06f0344d34c4$var$haltText","parent","$784c06f0344d34c4$var$$lazy_patchText","nextState","textContent","$784c06f0344d34c4$var$patchText","$784c06f0344d34c4$var$haltKeyed","ks","keys","$39e0beec4569345c$export$2da2a225d7cdb301","children","attrs","$784c06f0344d34c4$var$haltElem","$39e0beec4569345c$export$b658ad92e4f7ae19","$784c06f0344d34c4$var$eqElemSpec","ns1","ns2","$784c06f0344d34c4$var$$lazy_patchElem","attrs2","children2","a1","a2","a3","l2","$39e0beec4569345c$export$2422518e1f611f3f","$784c06f0344d34c4$var$patchElem","$784c06f0344d34c4$var$$lazy_patchKeyed","ix$prime","$784c06f0344d34c4$var$patchKeyed","$784c06f0344d34c4$export$7d13c0f6790d0505","spec","$lazy_build","createTextNode","$39e0beec4569345c$export$b2ce9ad90858ed7a","$784c06f0344d34c4$export$97ed363902aee1ba","name1","as1","ch1","$39e0beec4569345c$export$3dfbdd78bf0090db","child","buildAttributes","$784c06f0344d34c4$export$88209766f38bf9bf","$784c06f0344d34c4$export$198573fdc68576c0","w","buildWidget","$784c06f0344d34c4$export$150cc32b4adaaae","$c2c5bfcfd98ddabb$export$f5bbd400c2f4426f","$c2c5bfcfd98ddabb$export$348caad1e8d41c5f","isArray","isNaN","isFinite","abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sign","sin","sqrt","tan","trunc","$ba51d599f79a6310$export$439306a4dcaafbb9","$200","$201","$c97d2d0f578f81ad$export$168e2d3b16829a","TypeMismatch","$c97d2d0f578f81ad$export$19df04dfac508e15","$c97d2d0f578f81ad$export$2b62a06a9fee979c","$153","$154","$c97d2d0f578f81ad$export$6190f2182377b437","fail1","$c97d2d0f578f81ad$export$dda73877cb166cd3","$03b6b966974423fe$export$75b750e7d0325364","no","yes","$03b6b966974423fe$export$4b1360bff9337362","$8f2697950ee155e1$export$c4d34fab9eba1901","d","$c045ea5df33bba60$export$dfc7155ac0343b8","$f9cd20a8b77a6bf5$export$f880a2f905254b02","Created","$f9cd20a8b77a6bf5$export$bf3e0e645ed29ea3","Removed","$f9cd20a8b77a6bf5$export$ab9c25261cd8c720","Attribute","$f9cd20a8b77a6bf5$export$41b04b3a73e7216d","Property","$f9cd20a8b77a6bf5$export$a428cd33b25d5283","Handler","$f9cd20a8b77a6bf5$export$9bcc32033bdd12aa","Ref","$f9cd20a8b77a6bf5$var$unsafeGetProperty","$f9cd20a8b77a6bf5$var$setProperty","$f9cd20a8b77a6bf5$var$propToStrKey","$f9cd20a8b77a6bf5$export$681fbf510ccdea38","$f9cd20a8b77a6bf5$export$e6c76fe186213c01","$f9cd20a8b77a6bf5$export$ff441cf2113a23d9","emit","removeProp","prevEvents","hasAttributeNS","hasAttribute","$39e0beec4569345c$export$7895096fcdde5712","$f9cd20a8b77a6bf5$var$removeProperty","ev","$39e0beec4569345c$export$8ff9f68337b520c0","mbEmit","haltProp","props","applyProp","events","$39e0beec4569345c$export$3f65cefe8380dbea","$lazy_patchProp","ps2","onThis","onThese","v11","diffProp","onThat","patchProp","ps1","ps1$prime","$c959b62ce0c19dfe$export$6f093cfa640b7166","$29","$c959b62ce0c19dfe$export$32e0d8bef35d3088","toPropValue","$c959b62ce0c19dfe$export$4c390c75bcc39428","$c959b62ce0c19dfe$export$c3c52e219617878","$c959b62ce0c19dfe$export$8454457683f90105","$dc7ffeabd143829e$var$identity","$dc7ffeabd143829e$var$Pure","$dc7ffeabd143829e$var$Lift","Lift","$dc7ffeabd143829e$var$Ap","Ap","$dc7ffeabd143829e$var$mkAp","fba","fb","$dc7ffeabd143829e$export$9f6cb61afbf051fa","$dc7ffeabd143829e$var$goLeft","fStack","valStack","nat","func","$dc7ffeabd143829e$var$goApply","vals","gVal","gRes","$dc7ffeabd143829e$export$a37c0cfb408cb5d9","$dc7ffeabd143829e$export$952b32e119338067","goApply1","goLeft1","nextVals","$dc7ffeabd143829e$export$ab82a8987829bde0","$dc7ffeabd143829e$export$6b0545b2ed7e7da2","$dc7ffeabd143829e$export$b8278c4ac41154ad","$dc7ffeabd143829e$var$foldFreeAp1","$dc7ffeabd143829e$export$2a17b194dc6daf5e","$8cad8efed8fc4b93$export$a9e3236c55b65445","CatQueue","$8cad8efed8fc4b93$export$b446f6baa3bb1430","$8cad8efed8fc4b93$export$c40cf5aab899f397","$8cad8efed8fc4b93$export$7b1b591b262c240","$8cad8efed8fc4b93$export$6e22c362a0406a2c","$2f87b4fe4d8f7a0f$export$7475bf8196f095ad","CatNil","$2f87b4fe4d8f7a0f$export$4cc9fe8c7ead393e","CatCons","$2f87b4fe4d8f7a0f$var$link","$2f87b4fe4d8f7a0f$var$foldr","q","$copy_xs","$copy_ys","$tco_var_xs","$2f87b4fe4d8f7a0f$export$b446f6baa3bb1430","$2f87b4fe4d8f7a0f$export$6e22c362a0406a2c","$2f87b4fe4d8f7a0f$export$10d8903dec122b9d","$2f87b4fe4d8f7a0f$export$da599a1924f5bf13","$2f87b4fe4d8f7a0f$export$c40cf5aab899f397","cat","$d0bd5a116d2d5f24$var$$runtime_lazy","$d0bd5a116d2d5f24$var$append","$d0bd5a116d2d5f24$var$Free","Free","$d0bd5a116d2d5f24$var$Return","Return","$d0bd5a116d2d5f24$var$Bind","$d0bd5a116d2d5f24$var$toView","concatF","runExpF","$d0bd5a116d2d5f24$var$fromView","$d0bd5a116d2d5f24$export$25ad06f1eebea5a0","$d0bd5a116d2d5f24$export$b9ce46e7f510eb18","$d0bd5a116d2d5f24$export$39486fc5c75854c8","$d0bd5a116d2d5f24$export$245cefec95375d9a","$190","$d0bd5a116d2d5f24$var$$lazy_freeApply","$191","$d0bd5a116d2d5f24$var$pure","$d0bd5a116d2d5f24$export$8040756fd4c77395","$192","$d0bd5a116d2d5f24$export$eb0e66a9104d4874","dictMonadRec","$100f96dc727fa3bb$export$183d7a788d583d00","$871d3d7bcf6be72e$export$54d9901699893a6","$8360250a454b77aa$var$$$void","$8360250a454b77aa$var$bind","$8360250a454b77aa$var$append","$8360250a454b77aa$var$traverse_","$8360250a454b77aa$var$traverse_1","$8360250a454b77aa$export$f500693cef883ffd","$8360250a454b77aa$export$ec068583843480e7","$76","$8360250a454b77aa$export$5e14cdade93d6f7b","$8360250a454b77aa$export$185802fd694ee1f5","subscribers","emitter","$84222ab19bdc98bd$var$identity","$84222ab19bdc98bd$export$f3ce0030ce21b322","$84222ab19bdc98bd$export$77e8fa738093aa8c","$84222ab19bdc98bd$export$7254cc27399e90bd","State","$84222ab19bdc98bd$export$b5b6bb8bb5273115","Subscribe","$84222ab19bdc98bd$export$cf424b9d16eab6b0","Unsubscribe","$84222ab19bdc98bd$export$5ba9ac88cb4a4c17","$84222ab19bdc98bd$export$c9e0c97aebb96176","ChildQuery","$84222ab19bdc98bd$export$c97bcbb53b4e15e4","Raise","$84222ab19bdc98bd$export$6e7e621f508eff66","Par","$84222ab19bdc98bd$export$8cdfc2927e464854","$84222ab19bdc98bd$export$26aa7833c998c5d3","Join","$84222ab19bdc98bd$export$25e269b2a286b4be","Kill","$84222ab19bdc98bd$export$c2ea277386f73da0","GetRef","$84222ab19bdc98bd$export$2a9fc99fce80131a","$84222ab19bdc98bd$export$7e953d51c2b3343e","$84222ab19bdc98bd$export$a558113f6f2e3f2d","$84222ab19bdc98bd$export$87bf621137788b28","$181","$84222ab19bdc98bd$export$aecceb0bc1bf10d9","dictMonadEffect","$186","$84222ab19bdc98bd$export$bf09f5de576f9cf1","$84222ab19bdc98bd$export$172cc2b2b4e6467a","$84222ab19bdc98bd$export$be2318e898dcc68","$43c0c9babefbb793$export$b03b1c699c90a9b4","Initialize","$43c0c9babefbb793$export$29defdae7b3f3a01","Finalize","$43c0c9babefbb793$export$fc713a64b8ca1b7a","Receive","$43c0c9babefbb793$export$e19cd5f9376f8cee","$43c0c9babefbb793$export$62297b13309008b2","Query","$f1bf345cdb6c789d$export$1a6f8a190b47b840","$f1bf345cdb6c789d$export$d46b23c375182cf8","toVDom","haltThunk","$lazy_patchThunk","t2","patchThunk","$eea39ea934373596$var$voidLeft","$eea39ea934373596$var$traverse_","$eea39ea934373596$var$map","$eea39ea934373596$var$pure","$eea39ea934373596$export$bbf8b056cc92e88d","ComponentSlot","$eea39ea934373596$export$5e46cfa5e835a582","ThunkSlot","$eea39ea934373596$export$48f0293959eb16ec","$eea39ea934373596$export$802c6b8ce0f42195","$eea39ea934373596$export$3bb93a8213d3ef21","$eea39ea934373596$export$cb95887a94082d64","handleAction","handleQuery","receive","initialize","finalize","$e5b7e89a68d9c456$export$8454457683f90105","$e5b7e89a68d9c456$export$762b01c17cd5ef84","$e5b7e89a68d9c456$export$448e4850cad7c7b0","$e5b7e89a68d9c456$export$23f2a1d2818174ef","$e5b7e89a68d9c456$export$afc1bfabebaf28a2","$e5b7e89a68d9c456$export$159d9494db57879b","$e5b7e89a68d9c456$export$3327f90baeaa2cb3","$e5b7e89a68d9c456$export$2ba01fb71ed41cb6","$e5b7e89a68d9c456$export$407448d2b89b1813","$f9f243b94d1fc188$var$unwrap","$f9f243b94d1fc188$export$a25b8a8a37f2d1cd","$10ae9db6658426ac$export$c3c52e219617878","$10ae9db6658426ac$export$4e4d8b287d028b6b","$94c2c7ff32ca5bd1$var$unwrap","$94c2c7ff32ca5bd1$export$eff4d24c3ff7876e","p","$30","$94c2c7ff32ca5bd1$export$977f3f6a9323c0f6","dictIsProp","toPropValue1","$31","$32","$c959b62ce0c19dfe$export$977f3f6a9323c0f6","$94c2c7ff32ca5bd1$var$prop2","$94c2c7ff32ca5bd1$var$prop3","$94c2c7ff32ca5bd1$export$2e40c9e35e9506f4","$94c2c7ff32ca5bd1$export$9a625f9de50bf0b7","$94c2c7ff32ca5bd1$export$44271b4f0c6a3563","$94c2c7ff32ca5bd1$export$fb184b623420d9be","$94c2c7ff32ca5bd1$export$8f51af5840e0602a","$94c2c7ff32ca5bd1$export$188d75d71883854a","$33","$34","$35","$2925bc950f7308d7$var$bindFlipped","$2925bc950f7308d7$export$bd6cf4e30aa8da47","$24","$25","$3cc7d978c1d7ea03$export$353ec5b900391c5","suspend","fork","Functor1","$3cc7d978c1d7ea03$export$7a5058c6b79333e0","$ef932f98609e5673$export$b29cd3b133bc0fa4","$ef932f98609e5673$export$b325883598264040","$ef932f98609e5673$export$dcc8908fea536646","st","rendering","$ef932f98609e5673$var$mkRenderStateX","$ef932f98609e5673$export$8a58ffe66c3bbb4d","$ef932f98609e5673$export$52c65da2de355775","$ef932f98609e5673$export$43ced40f2a8d1657","$6bfb10b11a80fc8b$var$traverse_","$6bfb10b11a80fc8b$var$bindFlipped","$6bfb10b11a80fc8b$var$lookup","$6bfb10b11a80fc8b$var$bind1","$6bfb10b11a80fc8b$var$liftEffect","$6bfb10b11a80fc8b$var$discard1","$6bfb10b11a80fc8b$var$discard","$6bfb10b11a80fc8b$var$traverse_1","$6bfb10b11a80fc8b$var$traverse_2","$6bfb10b11a80fc8b$var$fork","$6bfb10b11a80fc8b$var$parSequence_","$6bfb10b11a80fc8b$var$pure","$6bfb10b11a80fc8b$var$map","$6bfb10b11a80fc8b$var$parallel","$6bfb10b11a80fc8b$var$map1","$6bfb10b11a80fc8b$var$sequential","$6bfb10b11a80fc8b$var$map2","$6bfb10b11a80fc8b$var$insert","$6bfb10b11a80fc8b$var$retractFreeAp","$6bfb10b11a80fc8b$var$$$delete","$6bfb10b11a80fc8b$var$unlessM","$6bfb10b11a80fc8b$var$insert1","$6bfb10b11a80fc8b$var$traverse_3","$6bfb10b11a80fc8b$var$lookup1","$6bfb10b11a80fc8b$var$lookup2","$6bfb10b11a80fc8b$var$foldFree","$6bfb10b11a80fc8b$var$alter","$6bfb10b11a80fc8b$export$2d912d1764c6009b","au","$6bfb10b11a80fc8b$export$b7a8cef929df0d3c","lchs","initializers","finalizers","$6bfb10b11a80fc8b$export$c4c41c035efd1fb3","$6bfb10b11a80fc8b$var$fresh","fresh","$6bfb10b11a80fc8b$export$f960635a4c7f8a61","render","$6bfb10b11a80fc8b$export$b505393bc8c03d39","initRef","component","refs","childrenIn","childrenOut","selfRef","handlerRef","pendingQueries","pendingOuts","pendingHandlers","subscriptions","forks","lifecycleHandlers","sid","act","$6bfb10b11a80fc8b$export$6533955444d826a5","subs","$118","cqb","dsx","ds","evalChildQuery","$119","doneRef","fin","forkMap","$f469b52d7c3c8200$var$bind","$f469b52d7c3c8200$var$discard","$f469b52d7c3c8200$var$for_","$f469b52d7c3c8200$var$traverse_","$f469b52d7c3c8200$var$fork","$f469b52d7c3c8200$var$bindFlipped","$f469b52d7c3c8200$var$traverse_1","$f469b52d7c3c8200$var$traverse_2","$f469b52d7c3c8200$var$traverse_3","$f469b52d7c3c8200$var$discard2","$f469b52d7c3c8200$var$parSequence_","$f469b52d7c3c8200$var$liftEffect","$f469b52d7c3c8200$var$pure","$f469b52d7c3c8200$var$map","$f469b52d7c3c8200$var$pure1","$f469b52d7c3c8200$var$when","$f469b52d7c3c8200$var$renderStateX","$f469b52d7c3c8200$var$$$void","$f469b52d7c3c8200$var$foreachSlot","$f469b52d7c3c8200$var$renderStateX_","$f469b52d7c3c8200$var$tailRecM","$f469b52d7c3c8200$var$voidLeft","$f469b52d7c3c8200$var$bind1","$f469b52d7c3c8200$var$liftEffect1","$f469b52d7c3c8200$var$newLifecycleHandlers","$f469b52d7c3c8200$var$handlePending","$58","$59","$f469b52d7c3c8200$export$32d31a833a940d1c","renderSpec","runComponent","$62","lchs$prime","$$var","input","initialState","$ef932f98609e5673$export$2999486de8d3a294","pre","preInits","parentInitializer","handlers","squashChildInitializers","renderChild","childrenInRef","childrenOutRef","slot","pop","$65","output","$66","$67","isDuplicate","$68","get","set","shouldProcessHandlers","$69","$70","$72","$71","childHandler","$73","$74","childDS","ds$prime","mmore","$60","evalDriver","disposed","dispose","$77","sio","$78","messages","$9c38b931c8b22574$var$getEffProp","$9c38b931c8b22574$export$72030ded560177b6","$9c38b931c8b22574$export$2eda4366e9b7c29f","$9c38b931c8b22574$export$1b8e57c9ea42f1d2","appendChild","$43db1f7c9150eb00$var$map","$43db1f7c9150eb00$export$b54be7ce267a037b","$6","$7","$43db1f7c9150eb00$export$335219007e689d29","$15","$80d0fbcfdca571e1$var$$runtime_lazy","$80d0fbcfdca571e1$var$$$void","$80d0fbcfdca571e1$var$pure","$80d0fbcfdca571e1$var$traverse_","$80d0fbcfdca571e1$var$unwrap","$80d0fbcfdca571e1$var$when","$80d0fbcfdca571e1$var$not","$80d0fbcfdca571e1$var$identity","$80d0fbcfdca571e1$var$bind1","$80d0fbcfdca571e1$var$liftEffect","$80d0fbcfdca571e1$var$map","$80d0fbcfdca571e1$var$bindFlipped","$80d0fbcfdca571e1$var$removeChild","npn","pn","$80d0fbcfdca571e1$var$renderSpec","container","renderChildRef","getNode","done","buildThunk","$lazy_patch","$lazy_renderComponentSlot","step$prime","$lazy_render","cs","rsx","$80d0fbcfdca571e1$var$mkSpec","machine","nextSib","machine$prime","newNode","node1","node2","$9c38b931c8b22574$export$86b68c7dbeb53c22","$80d0fbcfdca571e1$var$substInParent","$0fd1915219b188c2$var$mapFlipped","$0fd1915219b188c2$export$33b39dc27cb73de9","string","sep","split","$0fd1915219b188c2$export$fd9f5e287b4883f3","glyphName","$0fd1915219b188c2$export$541e2b986e579b87","text","$90b0f96fa17fd751$var$readString","$90b0f96fa17fd751$export$95fd5664a53dd0c5","paramName","URLSearchParams","location","search","$bf46188d6c8b331c$export$c39857d5f9675860","$0c07a74dd7e350c8$var$bind1","$0c07a74dd7e350c8$var$pure","$0c07a74dd7e350c8$var$bind2","$0c07a74dd7e350c8$var$discard1","$0c07a74dd7e350c8$var$discard","$0c07a74dd7e350c8$var$modify_","$0c07a74dd7e350c8$var$bind3","$0c07a74dd7e350c8$export$b03b1c699c90a9b4","$0c07a74dd7e350c8$export$b8c9d7be56deb519","PostLoad","$0c07a74dd7e350c8$export$4a39d38a89151dbb","$0c07a74dd7e350c8$export$d4c72bab9d6cc13a","loading","page","$0c07a74dd7e350c8$export$b3890eb0ae9dca99","renderTitle","renderLoadingIcon","renderControls","renderHeader","renderContent","$0c07a74dd7e350c8$export$827b87e7d67d997d","maybeHtmlElement","maybeIFrameElement","maybeDocument","$0c07a74dd7e350c8$export$75795916d3fbb729","maybeContentDocument","title","$0e1ad3264aa8b3c4$export$a80dcad378414f77","$0c07a74dd7e350c8$export$fe10dd917fd158f9","newTitle","$0e1ad3264aa8b3c4$export$485b6f1fe8b035f3","$f6c9290a5db8f197$export$420a7f2fd9cad6f6","$0c07a74dd7e350c8$export$728a6effeb7267c1","$0c07a74dd7e350c8$export$6c6c3f4b7541eaf1","dictMonadAff","focusContent1","maybeContentElem","elt","focus","$0c07a74dd7e350c8$export$7620fddf619aafdb","syncDocumentTitle1","action","maybePage","$53","$0c07a74dd7e350c8$var$component1","eval","args","$45","$46","$0c07a74dd7e350c8$export$d8556a2a8f973135","$0c07a74dd7e350c8$export$f22da7240b7add18","element","$80d0fbcfdca571e1$export$32d31a833a940d1c"],"version":3,"file":"index.9ea86110.js.map"}